<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sophiadata.github.io/Bigdata_Blog_Website/blog</id>
    <title>Bigdata-Blog Blog</title>
    <updated>2022-12-10T15:12:13.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sophiadata.github.io/Bigdata_Blog_Website/blog"/>
    <subtitle>Bigdata-Blog Blog</subtitle>
    <icon>https://sophiadata.github.io/Bigdata_Blog_Website/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[A Scala-free Flink]]></title>
        <id>/A Scala-free Flink</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/A Scala-free Flink"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[A detailed blog post]]></summary>
        <content type="html"><![CDATA[<p>A detailed <a href="https://flink.apache.org/2022/02/22/scala-free.html" target="_blank" rel="noopener noreferrer">blog post</a></p><p>already explains the ins and outs of why Scala users can now use the Flink Java API with any Scala version (including Scala 3).</p><p>In the end, removing Scala is just part of a larger effort of cleaning up and updating various technologies from the Flink ecosystem.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="博文翻译">博文翻译<a class="hash-link" href="#博文翻译" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="类路径和-scala">类路径和 Scala<a class="hash-link" href="#类路径和-scala" title="标题的直接链接">​</a></h3><p>如果您使用过基于 JVM 的应用程序，您可能听说过术语类路径。</p><p>类路径定义了当需要加载给定类文件时 JVM 将在哪里搜索它。</p><p>每个类路径上可能只有一个类文件的实例，这迫使 Flink 将任何依赖项暴露给用户。</p><p>这就是为什么 Flink 社区努力保持我们的类路径“干净”——或者没有不必要的依赖。</p><p>我们通过组合阴影依赖、子类加载和可选组件的插件抽象来实现这一点。</p><p>Apache Flink 运行时主要是用 Java 编写的，但包含强制 Scala 使用默认类路径的关键组件。</p><p>而且由于 Scala 不保持跨次要版本的二进制兼容性，这在历史上需要为所有版本的 Scala 交叉构建组件。</p><p>但是由于许多原因——编译器的重大变化、新的标准库和重新设计的宏系统——说起来容易做起来难。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="隐藏-scala">隐藏 Scala<a class="hash-link" href="#隐藏-scala" title="标题的直接链接">​</a></h3><p>如上所述，Flink 在几个关键组件中使用了 Scala；Mesos 集成、序列化堆栈、RPC 和表规划器。社区没有删除这些依赖项或寻找交叉构建它们的方法，而是隐藏了 Scala。</p><p>它仍然存在于代码库中，但不再泄漏到用户代码类加载器中。</p><p>在 1.14 中，我们迈出了向用户隐藏 Scala 的第一步。我们放弃了对部分在 Scala 中实现的 Apache Mesos 的支持，Kubernetes 在采用方面远远超过了它。</p><p>接下来，我们将 RPC 系统隔离到一个专用的类加载器中，包括 Akka。通过这些更改，运行时本身不再依赖于 Scala（这就是为什么 flink-runtime 失去了它的 Scala 后缀），但 Scala 仍然存在于 API 层中。</p><p>这些变化，以及我们实施它们的容易程度，开始让人们想知道还有什么可能。</p><p>毕竟，我们在不到一个月的时间内就隔离了 Akka，这个任务积压了多年，被认为太耗时了。</p><p>下一个合乎逻辑的步骤是将 DataStream / DataSet Java API 与 Scala 分离。</p><p>这主要需要对一些测试 类进行少量清理，还需要识别仅与 Scala API 相关的代码路径。然后将这些路径迁移到 Scala API 模块中，并且仅在需要时使用。</p><p>例如，我们一直扩展以支持某些 Scala 类型的Kryo 序列化程序现在仅在应用程序使用 Scala API 时才包含它们。</p><p>最后，是时候处理 Table API，特别是 table planner，在撰写本文时它包含 378,655 行 Scala 代码。</p><p>表规划器将 SQL 和表 API 查询解析、规划和优化为高度优化的 Java 代码。它是 Flink 中最广泛的 Scala 代码库，不能轻易移植到 Java。</p><p>使用我们从为 RPC 堆栈构建专用类加载器和为序列化器的条件类加载中学到的知识，我们将规划器隐藏在一个不暴露其任何内部结构的抽象背后，包括 Scala。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-flink-中-scala-的未来">Apache Flink 中 Scala 的未来<a class="hash-link" href="#apache-flink-中-scala-的未来" title="标题的直接链接">​</a></h3><p>虽然这些更改大部分发生在幕后，但它们导致了一个非常面向用户的更改：删除了许多 scala 后缀。您可以在本文结尾处找到丢失 Scala 后缀的所有依赖项的列表。</p><p>此外，对 Table API 的更改需要对打包和分发进行一些更改，一些依赖规划器内部的高级用户可能需要适应。</p><p>展望未来，Flink 将继续支持针对 Scala 2.12 编译的 DataStream 和 Table API 的 Scala 包，而 Java API 现在已解锁，用户可以利用任何 Scala 版本的组件。我们已经看到社区中出现了新的 Scala 3 包装器，我们很高兴看到用户如何在他们的流媒体管道中利用这些工具！</p><p>flink-cep, flink-clients, flink-connector-elasticsearch-base, flink-connector-elasticsearch6, flink-connector-elasticsearch7, flink-connector-gcp-pubsub, flink-connector-hbase-1.4, flink-connector-hbase-2.2, flink-connector-hbase-base, flink-connector-jdbc, flink-connector-kafka, flink-connector-kinesis, flink-connector-nifi, flink-connector-pulsar, flink-connector-rabbitmq, flink-connector-testing, flink-connector-twitter, flink-connector-wikiedits, flink-container, flink-dstl-dfs, flink-gelly, flink-hadoop-bulk, flink-kubernetes, flink-runtime-web, flink-sql-connector-elasticsearch6, flink-sql-connector-elasticsearch7, flink-sql-connector-hbase-1.4, flink-sql-connector-hbase-2.2, flink-sql-connector-kafka, flink-sql-connector-kinesis, flink-sql-connector-rabbitmq, flink-state-processor-api, flink-statebackend-rocksdb, flink-streaming-java, flink-table-api-java-bridge, flink-test-utils, flink-yarn, flink-table-runtime, flink-table-api-java-bridge </p><p><a href="https://nightlies.apache.org/flink/flink-docs-master/docs/dev/configuration/overview/#which-dependencies-do-you-need" target="_blank" rel="noopener noreferrer">https://nightlies.apache.org/flink/flink-docs-master/docs/dev/configuration/overview/#which-dependencies-do-you-need</a> </p><p><a href="https://nightlies.apache.org/flink/flink-docs-master/docs/dev/configuration/advanced/#anatomy-of-table-dependencies" target="_blank" rel="noopener noreferrer">https://nightlies.apache.org/flink/flink-docs-master/docs/dev/configuration/advanced/#anatomy-of-table-dependencies</a> </p><p><a href="https://github.com/ariskk/flink4s" target="_blank" rel="noopener noreferrer">https://github.com/ariskk/flink4s</a> </p><p><a href="https://github.com/findify/flink-adt" target="_blank" rel="noopener noreferrer">https://github.com/findify/flink-adt</a> </p><p><a href="https://github.com/sjwiesman/flink-scala-3" target="_blank" rel="noopener noreferrer">https://github.com/sjwiesman/flink-scala-3</a> </p><blockquote><p>根据博文和 flink 1.15 发布公告，目前 flink table planner 对 Scala 的隐藏已经完成，为了向后兼容，1.15 仍然提供了带有 Scala 后缀的 Flink Table Planner，同时提供了重新构建的
Flink Table Planner Loader</p></blockquote><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167306854-01764dde-4cce-4b24-ab91-b9097c4c774b.png" alt="img" class="img_ev3q"></p><p><a href="https://issues.apache.org/jira/browse/FLINK-25128" target="_blank" rel="noopener noreferrer">重组table模块，引入flink-table-planner-loader</a></p><p><a href="https://docs.google.com/document/d/12yDUCnvcwU2mODBKTHQ1xhfOq1ujYUrXltiN_rbhT34/edit#" target="_blank" rel="noopener noreferrer">[FLINK-24427] Hiding scala in flink-table-planner.google doc</a></p><ul><li>note 使用 flink sql-client 时，如果使用 flink-table-planner_2.12 带有 Scala 后缀的 jar 包来使用 flink Scala app 时，需将其放入 opt 目录下，如果放置在 lib 目录下会目前会导致异常</li></ul><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167307335-6161a7a8-9754-4c39-88e5-d1c85eb8c1dc.png" alt="img" class="img_ev3q"></p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="Flink" term="Flink"/>
        <category label="计算框架" term="计算框架"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doris 集成其他系统]]></title>
        <id>/Doris 集成其他系统</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/Doris 集成其他系统"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[准备表和数据]]></summary>
        <content type="html"><![CDATA[<p>准备表和数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">show full builtin  functions in test_db like 'year';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CREATE TABLE table1 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">siteid INT DEFAULT '10', </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">citycode SMALLINT,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">username VARCHAR(32) DEFAULT '', </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pv BIGINT SUM DEFAULT '0'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AGGREGATE KEY(siteid, citycode, username) </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DISTRIBUTED BY HASH(siteid) BUCKETS 10 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PROPERTIES("replication_num" = "1");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">insert into table1 values </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(1,1,'jim',2),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(2,1,'grace',2), </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(3,2,'tom',2),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(4,3,'bush',3), </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(5,3,'helen',3);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="spark-读写-doris">Spark 读写 Doris<a class="hash-link" href="#spark-读写-doris" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="准备--spark-环境">准备  Spark 环境<a class="hash-link" href="#准备--spark-环境" title="标题的直接链接">​</a></h3><p>创建 maven 工程，编写 pom.xml 文件</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;project xmlns="http://maven.apache.org/POM/4.0.0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;groupId&gt;com.atguigu.doris&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;artifactId&gt;spark-demo&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;properties&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;scala.binary.version&gt;2.12&lt;/scala.binary.version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;spark.version&gt;3.0.0&lt;/spark.version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/properties&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;dependencies&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;!-- Spark的依赖引入   --&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;spark-core_${scala.binary.version}&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;scope&gt;provided&lt;/scope&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;${spark.version}&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;spark-sql_${scala.binary.version}&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;scope&gt;provided&lt;/scope&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;${spark.version}&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;spark-hive_${scala.binary.version}&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;scope&gt;provided&lt;/scope&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;${spark.version}&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;!-- 引入 Scala --&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.scala-lang&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;scala-library&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;2.12.10&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;1.2.47&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;5.1.49&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;!--spark-doris-connector--&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.doris&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;spark-doris-connector-3.1_2.12&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;!--&lt;artifactId&gt;spark-doris-connector-2.3_2.11&lt;/artifactId&gt;--&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;1.0.1&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/dependencies&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;build&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;plugins&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;!--编译  scala所需插件--&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;plugin&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;groupId&gt;org.scala-tools&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;artifactId&gt;maven-scala-plugin&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;version&gt;2.15.1&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;executions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;id&gt;compile-scala&lt;/id&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;goal&gt;add-source&lt;/goal&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;goal&gt;compile&lt;/goal&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;id&gt;test-compile-scala&lt;/id&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;goal&gt;add-source&lt;/goal&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;goal&gt;testCompile&lt;/goal&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/executions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/plugin&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;plugin&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;groupId&gt;net.alchim31.maven&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;artifactId&gt;scala-maven-plugin&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;version&gt;3.2.2&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;executions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;!-- 声明绑定到 maven的 compile阶段    --&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;goal&gt;compile&lt;/goal&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;goal&gt;testCompile&lt;/goal&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/executions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/plugin&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;!-- assembly打包插件   --&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;plugin&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;version&gt;3.0.0&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;executions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;id&gt;make-assembly&lt;/id&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;phase&gt;package&lt;/phase&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;goal&gt;single&lt;/goal&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/goals&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/execution&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/executions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;configuration&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;archive&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;manifest&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/manifest&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/archive&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;descriptorRefs&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/descriptorRefs&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/configuration&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/plugin&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;!--&lt;plugin&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;3.6.1&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &amp;lt;!&amp;ndash; 所有的编译都依照  JDK1.8 &amp;ndash;&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;configuration&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;source&gt;1.8&lt;/source&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;target&gt;1.8&lt;/target&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/configuration&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/plugin&gt;--&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/plugins&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/build&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/project&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用--spark-doris-connector">使用  Spark Doris Connector<a class="hash-link" href="#使用--spark-doris-connector" title="标题的直接链接">​</a></h3><p>Spark Doris Connector 可以支持通过 Spark 读取 Doris 中存储的数据，也支持通过 Spark 写入数据到 Doris。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="sql-方式读写数据">SQL 方式读写数据<a class="hash-link" href="#sql-方式读写数据" title="标题的直接链接">​</a></h4><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">SparkConf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">sql</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">SparkSession</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * TODO</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @version 1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @author cjp</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">object</span><span class="token plain"> SQLDemo </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> args</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">String</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Unit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> sparkConf </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> SparkConf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setAppName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"SQLDemo"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setMaster</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"local[*]"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//TODO 要打包提交集群执行，注释掉</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sparkSession</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SparkSession</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">builder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sparkConf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getOrCreate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sparkSession</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |CREATE TEMPORARY VIEW spark_doris</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |USING doris</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |OPTIONS(</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |  "table.identifier"="test_db.table1",</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |  "fenodes"="hadoop1:8030",</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |  "user"="test",</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |  "password"="test"</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        |);</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stripMargin</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//读取数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    sparkSession.sql("select * from spark_doris").show()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//写入数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sparkSession</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">"insert </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">99</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">99</span><span class="token punctuation" style="color:#393A34">,</span><span class="token char">'haha'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="dataframe-方式读写数据batch">DataFrame 方式读写数据（batch）<a class="hash-link" href="#dataframe-方式读写数据batch" title="标题的直接链接">​</a></h4><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">SparkConf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">sql</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">SparkSession</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * TODO</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @version 1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @author cjp</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">object</span><span class="token plain"> DataFrameDemo </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">String</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Unit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> sparkConf </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> SparkConf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setAppName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"DataFrameDemo"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setMaster</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"local[*]"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//TODO 要打包提交集群执行，注释掉</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> sparkSession </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SparkSession</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">builder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sparkConf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getOrCreate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 读取数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//    val dorisSparkDF = sparkSession.read.format("doris")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//      .option("doris.table.identifier", "test_db.table1")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//      .option("doris.fenodes", "hadoop1:8030")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//    .option("user", "test")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//      .option("password", "test")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//      .load()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//    dorisSparkDF.show()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 写入数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">sparkSession</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">implicits</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">_</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> mockDataDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> List</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">23</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"haha"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hehe"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"heihei"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">toDF</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"siteid"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"citycode"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"username"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pv"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mockDataDF</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">show</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mockDataDF</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"doris"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">option</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"doris.table.identifier"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test_db.table1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">option</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"doris.fenodes"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hadoop1:8030"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">option</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">option</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"password"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//指定你要写入的字段</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">//      .option("doris.write.fields", "user")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="rdd-方式读取数据">RDD 方式读取数据<a class="hash-link" href="#rdd-方式读取数据" title="标题的直接链接">​</a></h4><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">SparkConf</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SparkContext</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">sql</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">SparkSession</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * TODO</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @version 1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @author cjp</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">object</span><span class="token plain"> RDDDemo </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">String</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Unit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> sparkConf </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> SparkConf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setAppName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"RDDDemo"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setMaster</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"local[*]"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//TODO 要打包提交集群执行，注释掉</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> sc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> SparkContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sparkConf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">doris</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">_</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> dorisSparkRDD </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> sc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dorisRDD</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tableIdentifier </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Some</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"test_db.table1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      cfg </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Some</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"doris.fenodes"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hadoop1:8030"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"doris.request.auth.user"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"doris.request.auth.password"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dorisSparkRDD</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">collect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">foreach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">println</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="配置和字段类型映射">配置和字段类型映射<a class="hash-link" href="#配置和字段类型映射" title="标题的直接链接">​</a></h4><ul><li>1 通用配置项</li></ul><p>![<a href="https://user-images.githubusercontent.com/34996528/167132236-a3a95203-7845-4ee0-901d-1675367e7cf2.png" target="_blank" rel="noopener noreferrer">img</a></p><p>![<a href="https://user-images.githubusercontent.com/34996528/167132163-23461f7a-1fca-462f-a612-91e1993d7aab.png" target="_blank" rel="noopener noreferrer">img</a></p><p>![<a href="https://user-images.githubusercontent.com/34996528/167132357-47304220-e8f8-4d21-8aab-c00cd4107baf.png" target="_blank" rel="noopener noreferrer">img</a></p><p>![<a href="https://user-images.githubusercontent.com/34996528/167132534-ed6190d0-cb0f-4f69-b992-e55edfecf099.png" target="_blank" rel="noopener noreferrer">img</a></p><ul><li>2 SQL 和 Dataframe 专有配置</li></ul><p>![<a href="https://user-images.githubusercontent.com/34996528/167132622-aea37038-c877-4fa4-81c4-bae5658d8b60.png" target="_blank" rel="noopener noreferrer">img</a></p><ul><li>3 RDD 专有配置</li></ul><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167132684-3a3dcbb1-b1c5-4c0d-a5c9-7ce65f63a08b.png" alt="img" class="img_ev3q"></p><ul><li>4 Doris 和 Spark 列类型映射关系:</li></ul><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167132772-19c41625-5c50-47cd-97eb-f97df6983431.png" alt="img" class="img_ev3q"></p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167133133-0f219de7-2410-4e48-b576-892f7a6e5064.png" alt="img" class="img_ev3q"></p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167132972-38a871bf-2057-4cfa-baf1-37ff494ab00e.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用-jdbc-的方式不推荐">使用 JDBC 的方式（不推荐）<a class="hash-link" href="#使用-jdbc-的方式不推荐" title="标题的直接链接">​</a></h3><p>这种方式是早期写法，Spark 无法感知 Doris 的数据分布，会导致打到 Doris 的查询压力非常大。</p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">java</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">util</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">Properties</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">SparkConf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">org</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">apache</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">spark</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">sql</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">SaveMode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SparkSession</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">object</span><span class="token plain"> JDBCDemo </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">String</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Unit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> sparkConf </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  SparkConf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setAppName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"JDBCDemo"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setMaster</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"local[*]"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain">  sparkSession </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  SparkSession</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">builder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sparkConf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getOrCreate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 读取数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    val df=sparkSession.read.format("jdbc")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//      .option("url","jdbc:mysql://hadoop1:9030/test_db")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//      .option("user","test")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//      .option("password","test")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//      .option("dbtable","table1")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//      .load()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//    df.show()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 写入数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">sparkSession</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">implicits</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token plain">_</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> mockDataDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> List </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">23</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"haha"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hehe"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"heihei"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">toDF </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"siteid"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"citycode"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"username"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pv"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> prop </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> Properties </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     prop</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setProperty </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"root"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     prop</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setProperty </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"password"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"123456"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">mode </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SaveMode</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Append</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">jdbc </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"jdbc:mysql://hadoop1:9030/test_db"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"table1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> prop</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="数据库" term="数据库"/>
        <category label="Doris" term="Doris"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flink OLAP 与 Trino TPC-DS 对比]]></title>
        <id>/Flink OLAP 与 Trino TPC-DS 对比</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/Flink OLAP 与 Trino TPC-DS 对比"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[本文为社区邮件内容提取]]></summary>
        <content type="html"><![CDATA[<blockquote><p>本文为社区邮件内容提取</p></blockquote><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167282457-7ed1794c-99bf-4f57-8b73-6be3e93d4e82.png" alt="img" class="img_ev3q"></p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167282486-0ad6f589-2049-4968-a9a5-40d7d3ec2f73.png" alt="img" class="img_ev3q"></p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167282548-0d1c4754-e895-454e-9ad1-0d1ad00df6a8.png" alt="img" class="img_ev3q"></p><blockquote><p>图示链接</p></blockquote><p>[1]<!-- --> <a href="https://github.com/ververica/flink-sql-gateway" target="_blank" rel="noopener noreferrer">https://github.com/ververica/flink-sql-gateway</a></p><p>[2]<!-- -->
<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-91%3A+Support+SQL+Gateway" target="_blank" rel="noopener noreferrer">https://cwiki.apache.org/confluence/display/FLINK/FLIP-91%3A+Support+SQL+Gateway</a></p><p>[3]<!-- -->
<a href="https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/table/hive/hive_read_write/#source-parallelism-inference" target="_blank" rel="noopener noreferrer">https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/table/hive/hive_read_write/#source-parallelism-inference</a></p><p>[4]<!-- --> <a href="https://issues.apache.org/jira/browse/FLINK-27338" target="_blank" rel="noopener noreferrer">https://issues.apache.org/jira/browse/FLINK-27338</a></p><p>[5]<!-- -->
<a href="https://www.yuque.com/docs/share/b89479ab-9c24-45c8-9390-77299ae0c4cd?#AkK9" target="_blank" rel="noopener noreferrer">https://www.yuque.com/docs/share/b89479ab-9c24-45c8-9390-77299ae0c4cd?#AkK9</a></p><p>[6]<!-- --> <a href="https://issues.apache.org/jira/browse/FLINK-25318" target="_blank" rel="noopener noreferrer">https://issues.apache.org/jira/browse/FLINK-25318</a></p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167282523-9e64992b-cdc8-4324-9d75-7aec2a4a0116.png" alt="img" class="img_ev3q"></p><blockquote><p>图示链接</p></blockquote><p>《TPC-DS各引擎耗时》
<a href="https://www.yuque.com/deadwind/notes/tpcds-benchmark-table" target="_blank" rel="noopener noreferrer">https://www.yuque.com/deadwind/notes/tpcds-benchmark-table</a></p><p>《TPC-DS资源配置》
<a href="https://www.yuque.com/deadwind/notes/tpcds-resource" target="_blank" rel="noopener noreferrer">https://www.yuque.com/deadwind/notes/tpcds-resource</a></p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="Flink" term="Flink"/>
        <category label="计算框架" term="计算框架"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hbase 与 ClickHouse 应用场景]]></title>
        <id>/Hbase 与 ClickHouse 应用场景</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/Hbase 与 ClickHouse 应用场景"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[Hbase 存储和查询维度数据]]></summary>
        <content type="html"><![CDATA[<p>Hbase 存储和查询维度数据</p><ul><li>Hbase 数据分析效率低 分析函数少，Hbase数据分析涉及磁盘读取数据，比较版本，聚合导致效率低下</li></ul><p>ClickHouse 存储和查询宽表数据</p><ul><li>更擅长数据分析而不是查询明细，维度数据不宜存放 ClickHouse</li></ul>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="数据仓库" term="数据仓库"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IDEA CheckStyle 配置]]></title>
        <id>/IDEA CheckStyle 配置</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/IDEA CheckStyle 配置"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[日常开发通常需要配置 code style ，而 idea 无疑是最受欢迎的开发工具之一，下面介绍如何应用 checkstyle 插件]]></summary>
        <content type="html"><![CDATA[<p>日常开发通常需要配置 code style ，而 idea 无疑是最受欢迎的开发工具之一，下面介绍如何应用 checkstyle 插件</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-下载插件">1 下载插件<a class="hash-link" href="#1-下载插件" title="标题的直接链接">​</a></h2><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166152027-93d88971-8308-4867-97ed-97da085577b5.png" alt="img" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-选择-checkstyle-版本">2 选择 checkstyle 版本<a class="hash-link" href="#2-选择-checkstyle-版本" title="标题的直接链接">​</a></h2><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166152107-cf0db426-8942-49bd-9c42-4eb966852254.png" alt="img" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-添加-checkstyle-文件">3 添加 checkstyle 文件<a class="hash-link" href="#3-添加-checkstyle-文件" title="标题的直接链接">​</a></h2><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166152064-a764fbfc-dbff-49fd-a619-96189d96ca2a.png" alt="img" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-添加属性值">4 添加属性值<a class="hash-link" href="#4-添加属性值" title="标题的直接链接">​</a></h2><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166152134-43bbd5e2-c085-43e4-86d1-ad96570d6644.png" alt="img" class="img_ev3q"></p><p>应用后即可完成 checkstyle 配置</p><ul><li>该插件可以实时扫描代码规约</li></ul><p>也可通过在 pom 配置 maven 插件的形式来检查 code style</p><p>示例：<a href="https://github.com/SophiaData/Bigdata_Code_Tutorial/blob/master/Code_Tutorial/pom.xml" target="_blank" rel="noopener noreferrer">https://github.com/SophiaData/Bigdata_Code_Tutorial/blob/master/Code_Tutorial/pom.xml</a></p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="工具配置" term="工具配置"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[技术思想]]></title>
        <id>/mysql cdc 整库同步</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/mysql cdc 整库同步"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[利用 mysql catalog，mysql cdc，flink jdbc 等技术实现 mysql 整库迁移至下游数据库，这里是示范 mysql to mysql ，其他 sink 组件可自行扩展实现。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>利用 mysql catalog，mysql cdc，flink jdbc 等技术实现 mysql 整库迁移至下游数据库，这里是示范 mysql to mysql ，其他 sink 组件可自行扩展实现。</p></blockquote><p>通过 flink ParameterTool，可以选择是整库同步还是多表亦或单表同步，可以设置全局并发，源表 mysql 参数，目标表 mysql 参数</p><blockquote><p>通过 sql Connection 实现自动建表逻辑 (mysql 数据类型众多，这里并没有测试所有的类型参数，如担心建表不成功，可手动建表，不影响程序运行)</p></blockquote><p>下游使用 flink jdbc 来实现，语法为 upsert 即幂等写入(重复数据只会写入一次)</p><blockquote><p>使用 mysql catalog 来实现源表元数据的获取</p></blockquote><p>自定义 CustomDebeziumDeserializer 实现 DebeziumDeserializationSchema 接口对数据进行转换</p><blockquote><p>该任务本质上是 单 source 多 sink 任务，不同的表数据不一样可能会有一定的反压</p></blockquote><p>程序测试 生成五百万条数据 五张表 一分钟左右完成，增量数据一万条，可以同步完成</p><p>环境 flink 1.16  cdc 2.3.0</p><p>refer:</p><ul><li><a href="https://nightlies.apache.org/flink/flink-docs-release-1.16/" target="_blank" rel="noopener noreferrer">https://nightlies.apache.org/flink/flink-docs-release-1.16/</a></li><li><a href="https://blog.csdn.net/qq_36062467/article/details/128117647" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_36062467/article/details/128117647</a></li><li><a href="https://ververica.github.io/flink-cdc-connectors/master/content/connectors/mysql-cdc%28ZH%29.html" target="_blank" rel="noopener noreferrer">https://ververica.github.io/flink-cdc-connectors/master/content/connectors/mysql-cdc%28ZH%29.html</a></li></ul><h1>代码</h1><p>github 地址 <a href="https://github.com/SophiaData/Bigdata_Code_Tutorial/" target="_blank" rel="noopener noreferrer">https://github.com/SophiaData/Bigdata_Code_Tutorial/</a></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/** (@SophiaData) (@date 2022/12/1 16:02). */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class CustomDebeziumDeserializer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        implements DebeziumDeserializationSchema&lt;Tuple2&lt;String, Row&gt;&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static final Logger LOG = LoggerFactory.getLogger(CustomDebeziumDeserializer.class);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private final Map&lt;String, DeserializationRuntimeConverter&gt; physicalConverterMap =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Maps.newConcurrentMap();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CustomDebeziumDeserializer(Map&lt;String, RowType&gt; tableRowTypeMap) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (String tableName : tableRowTypeMap.keySet()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            RowType rowType = tableRowTypeMap.get(tableName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            DeserializationRuntimeConverter physicalConverter = createNotNullConverter(rowType);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.physicalConverterMap.put(tableName, physicalConverter);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void deserialize(SourceRecord record, Collector&lt;Tuple2&lt;String, Row&gt;&gt; out)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Envelope.Operation op = Envelope.operationFor(record);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Struct value = (Struct) record.value();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Schema valueSchema = record.valueSchema();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Struct source = value.getStruct("source");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String tableName = source.get("table").toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DeserializationRuntimeConverter physicalConverter = physicalConverterMap.get(tableName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (op == Envelope.Operation.CREATE || op == Envelope.Operation.READ) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Row insert = extractAfterRow(value, valueSchema, physicalConverter);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            insert.setKind(RowKind.INSERT);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            out.collect(Tuple2.of(tableName, insert));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else if (op == Envelope.Operation.DELETE) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Row delete = extractBeforeRow(value, valueSchema, physicalConverter);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            delete.setKind(RowKind.DELETE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            out.collect(Tuple2.of(tableName, delete));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else if (op == Envelope.Operation.UPDATE) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Row before = extractBeforeRow(value, valueSchema, physicalConverter);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            before.setKind(RowKind.UPDATE_BEFORE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            out.collect(Tuple2.of(tableName, before));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Row after = extractAfterRow(value, valueSchema, physicalConverter);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            after.setKind(RowKind.UPDATE_AFTER);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            out.collect(Tuple2.of(tableName, after));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            LOG.warn(" Unexpected statement: {}", value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Row extractAfterRow(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Struct value, Schema valueSchema, DeserializationRuntimeConverter physicalConverter)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Schema afterSchema = valueSchema.field(Envelope.FieldName.AFTER).schema();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Struct after = value.getStruct(Envelope.FieldName.AFTER);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return (Row) physicalConverter.convert(after, afterSchema);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Row extractBeforeRow(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Struct value, Schema valueSchema, DeserializationRuntimeConverter physicalConverter)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Schema beforeSchema = valueSchema.field(Envelope.FieldName.BEFORE).schema();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Struct before = value.getStruct(Envelope.FieldName.BEFORE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return (Row) physicalConverter.convert(before, beforeSchema);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public TypeInformation&lt;Tuple2&lt;String, Row&gt;&gt; getProducedType() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return TypeInformation.of(new TypeHint&lt;Tuple2&lt;String, Row&gt;&gt;() {});</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static DeserializationRuntimeConverter createNotNullConverter(LogicalType type) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        switch (type.getTypeRoot()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case NULL:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case BOOLEAN:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToBoolean();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case TINYINT:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return Byte.parseByte(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case SMALLINT:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return Short.parseShort(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case INTEGER:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case INTERVAL_YEAR_MONTH:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToInt();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case BIGINT:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case INTERVAL_DAY_TIME:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToLong();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case DATE:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToDate();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case TIME_WITHOUT_TIME_ZONE:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToTime();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case TIMESTAMP_WITHOUT_TIME_ZONE:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToTimestamp(ZoneId.of("UTC"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case TIMESTAMP_WITH_LOCAL_TIME_ZONE:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToLocalTimeZoneTimestamp(ZoneId.of("UTC"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case FLOAT:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToFloat();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case DOUBLE:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToDouble();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case CHAR:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case VARCHAR:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case BINARY:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case VARBINARY:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return convertToBinary();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case DECIMAL:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return createDecimalConverter((DecimalType) type);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case ROW:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return createRowConverter((RowType) type);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case ARRAY:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case MAP:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case MULTISET:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case RAW:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                throw new UnsupportedOperationException("Unsupported type: " + type);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToBoolean() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof Boolean) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Byte) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return (byte) dbzObj == 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Short) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return (short) dbzObj == 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return Boolean.parseBoolean(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToInt() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof Integer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Long) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return ((Long) dbzObj).intValue();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return Integer.parseInt(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToLong() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof Integer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return ((Integer) dbzObj).longValue();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Long) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return Long.parseLong(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter createDecimalConverter(DecimalType decimalType) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final int precision = decimalType.getPrecision();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final int scale = decimalType.getScale();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                BigDecimal bigDecimal;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof byte[]) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // decimal.handling.mode=precise</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bigDecimal = Decimal.toLogical(schema, (byte[]) dbzObj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof String) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // decimal.handling.mode=string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bigDecimal = new BigDecimal((String) dbzObj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Double) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // decimal.handling.mode=double</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bigDecimal = BigDecimal.valueOf((Double) dbzObj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if (VariableScaleDecimal.LOGICAL_NAME.equals(schema.name())) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        SpecialValueDecimal decimal =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                VariableScaleDecimal.toLogical((Struct) dbzObj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        bigDecimal = decimal.getDecimalValue().orElse(BigDecimal.ZERO);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        // fallback to string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        bigDecimal = new BigDecimal(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return DecimalData.fromBigDecimal(bigDecimal, precision, scale);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToDouble() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof Float) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return ((Float) dbzObj).doubleValue();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Double) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return Double.parseDouble(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToFloat() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof Float) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Double) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return ((Double) dbzObj).floatValue();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return Float.parseFloat(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToDate() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return (int) TemporalConversions.toLocalDate(dbzObj).toEpochDay();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToTime() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof Long) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    switch (schema.name()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        case MicroTime.SCHEMA_NAME:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return (int) ((long) dbzObj / 1000);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        case NanoTime.SCHEMA_NAME:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return (int) ((long) dbzObj / 1000_000);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof Integer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // get number of milliseconds of the day</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return TemporalConversions.toLocalTime(dbzObj).toSecondOfDay() * 1000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToTimestamp(ZoneId serverTimeZone) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof Long) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    switch (schema.name()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        case Timestamp.SCHEMA_NAME:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return TimestampData.fromEpochMillis((Long) dbzObj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        case MicroTimestamp.SCHEMA_NAME:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            long micro = (long) dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return TimestampData.fromEpochMillis(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    micro / 1000, (int) (micro % 1000 * 1000));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        case NanoTimestamp.SCHEMA_NAME:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            long nano = (long) dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return TimestampData.fromEpochMillis(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    nano / 1000_000, (int) (nano % 1000_000));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                LocalDateTime localDateTime =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        TemporalConversions.toLocalDateTime(dbzObj, serverTimeZone);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return TimestampData.fromLocalDateTime(localDateTime);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToLocalTimeZoneTimestamp(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ZoneId serverTimeZone) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof String) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    String str = (String) dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // TIMESTAMP_LTZ type is encoded in string type</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    Instant instant = Instant.parse(str);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return TimestampData.fromLocalDateTime(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            LocalDateTime.ofInstant(instant, serverTimeZone));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                throw new IllegalArgumentException(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "Unable to convert to TimestampData from unexpected value '"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                + dbzObj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                + "' of type "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                + dbzObj.getClass().getName());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToString() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return StringData.fromString(dbzObj.toString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter convertToBinary() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (dbzObj instanceof byte[]) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else if (dbzObj instanceof ByteBuffer) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    ByteBuffer byteBuffer = (ByteBuffer) dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    byte[] bytes = new byte[byteBuffer.remaining()];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    byteBuffer.get(bytes);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return bytes;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    throw new UnsupportedOperationException(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            "Unsupported BYTES value type: " + dbzObj.getClass().getSimpleName());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static DeserializationRuntimeConverter createRowConverter(RowType rowType) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final DeserializationRuntimeConverter[] fieldConverters =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                rowType.getFields().stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .map(RowType.RowField::getType)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .map(CustomDebeziumDeserializer::createNotNullConverter)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .toArray(DeserializationRuntimeConverter[]::new);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final String[] fieldNames = rowType.getFieldNames().toArray(new String[0]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new DeserializationRuntimeConverter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            private static final long serialVersionUID = 1L;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public Object convert(Object dbzObj, Schema schema) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Struct struct = (Struct) dbzObj;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                int arity = fieldNames.length;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Row row = new Row(arity);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                for (int i = 0; i &lt; arity; i++) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    String fieldName = fieldNames[i];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    Field field = schema.field(fieldName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if (field == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        row.setField(i, null);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        Object fieldValue = struct.getWithoutDefault(fieldName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        Schema fieldSchema = schema.field(fieldName).schema();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        Object convertedField =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                convertField(fieldConverters[i], fieldValue, fieldSchema);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        row.setField(i, convertedField);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return row;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static Object convertField(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            DeserializationRuntimeConverter fieldConverter, Object fieldValue, Schema fieldSchema)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (fieldValue == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return fieldConverter.convert(fieldValue, fieldSchema);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/** (@SophiaData) (@date 2022/10/25 10:56). */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class FlinkSqlWDS extends BaseSql {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static final Logger LOG = LoggerFactory.getLogger(FlinkSqlWDS.class);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        new FlinkSqlWDS().init(args, "flink_sql_job_FlinkSqlWDS", true, true);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        LOG.info(" init 方法正常 ");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 本程序测试 Whole database synchronization 之 MySQL to MySQL 捕捉表需包含主键并实现自动建表，DDL 同步暂不支持 ！！！</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 可根据此案例拓展其他 sink 组件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 需要注意的点：不同表数据量不一样，同步时可以适当放大同步资源，但会造成资源浪费，不加大可能反压</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 测试同步五张表百万数据，一分钟左右</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // refer: https://blog.csdn.net/qq_36062467/article/details/128117647</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // refer 环境: Flink 1.15 Flink CDC 2.3.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 本程序环境：Flink 1.16 Flink CDC 2.3.0  MySQL 8.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 技术点：Flink MySQL CDC Connector，MySQL Catalog，Flink Operator，Flink JDBC</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void handle(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            StreamExecutionEnvironment env, StreamTableEnvironment tEnv, ParameterTool params)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String databaseName = ParameterUtil.databaseName(params);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String tableList = ParameterUtil.tableList(params);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String connectorWithBody = CreateMySQLSinkTable.connectorWithBody(params);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 注册同步的库对应的 Catalog 这里是 mysql catalog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MySqlCatalog mySqlCatalog = MySQLUtil.useMysqlCatalog(params);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;String&gt; tables;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 如果整库同步，则从 Catalog 里取所有表，否则从指定表中取表名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (".*".equals(tableList)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                tables = mySqlCatalog.listTables(databaseName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                String[] tableArray = tableList.split(",");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                tables =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        Arrays.stream(tableArray)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                .map(table -&gt; table.split("\\.")[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                .collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (DatabaseNotExistException e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            LOG.error("{} 库不存在", databaseName, e);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw e;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 创建表名和对应 RowTypeInfo 映射的 Map</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Map&lt;String, RowTypeInfo&gt; tableTypeInformationMap = Maps.newConcurrentMap();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Map&lt;String, DataType[]&gt; tableDataTypesMap = Maps.newConcurrentMap();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Map&lt;String, RowType&gt; tableRowTypeMap = Maps.newConcurrentMap();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (String table : tables) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 获取  Catalog 中注册的表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ObjectPath objectPath = new ObjectPath(databaseName, table);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            DefaultCatalogTable catalogBaseTable;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                catalogBaseTable = (DefaultCatalogTable) mySqlCatalog.getTable(objectPath);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } catch (TableNotExistException e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                LOG.error("{} 表不存在", table, e);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                throw e;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 获取表的 Schema</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            assert catalogBaseTable != null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Schema schema = catalogBaseTable.getUnresolvedSchema();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 获取表中字段名列表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String[] fieldNames = new String[schema.getColumns().size()];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 获取DataType</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            DataType[] fieldDataTypes = new DataType[schema.getColumns().size()];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            LogicalType[] logicalTypes = new LogicalType[schema.getColumns().size()];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 获取表字段类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            TypeInformation&lt;?&gt;[] fieldTypes = new TypeInformation[schema.getColumns().size()];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 获取表的主键</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            List&lt;String&gt; primaryKeys;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                primaryKeys = schema.getPrimaryKey().get().getColumnNames(); // 此处不用 orElse</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } catch (NullPointerException e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                LOG.error("捕捉表异常: {} 表没有主键！！！ 当前 mysql cdc 尚不支持捕捉没有主键的表！！！", table, e);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                throw e;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for (int i = 0; i &lt; schema.getColumns().size(); i++) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Schema.UnresolvedPhysicalColumn column =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        (Schema.UnresolvedPhysicalColumn) schema.getColumns().get(i);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                fieldNames[i] = column.getName();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                fieldDataTypes[i] = (DataType) column.getDataType();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                fieldTypes[i] =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        InternalTypeInfo.of(((DataType) column.getDataType()).getLogicalType());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                logicalTypes[i] = ((DataType) column.getDataType()).getLogicalType();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            RowType rowType = RowType.of(logicalTypes, fieldNames);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            tableRowTypeMap.put(table, rowType);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 组装 Flink Sink 表 DDL sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            StringBuilder stmt = new StringBuilder();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String sinkTableName =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    String.format(params.get("sinkPrefix", "sink_%s"), table); // Sink 表前缀</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            stmt.append("create table if not exists ").append(sinkTableName).append("(\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for (int i = 0; i &lt; fieldNames.length; i++) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                String column = fieldNames[i];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                String fieldDataType = fieldDataTypes[i].toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                stmt.append("\t`").append(column).append("` ").append(fieldDataType).append(",\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            stmt.append(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    String.format(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            "PRIMARY KEY (%s) NOT ENFORCED\n)",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            StringUtils.join(primaryKeys, ",")));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String formatJdbcSinkWithBody =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    connectorWithBody.replace("${sinkTableName}", sinkTableName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String createSinkTableDdl = stmt + formatJdbcSinkWithBody;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 创建 Flink Sink 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            LOG.info("createSinkTableDdl: \r {}", createSinkTableDdl);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            tEnv.executeSql(createSinkTableDdl);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            tableDataTypesMap.put(table, fieldDataTypes);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            tableTypeInformationMap.put(table, new RowTypeInfo(fieldTypes, fieldNames));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 下游 MySQL 建表逻辑</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            new CreateMySQLSinkTable()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    .createMySQLSinkTable(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            params, sinkTableName, fieldNames, fieldDataTypes, primaryKeys);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //  MySQL CDC</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;Tuple2&lt;String, Row&gt;&gt; dataStreamSource =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new MySQLCDCSource()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .singleOutputStreamOperator(params, env, tableRowTypeMap); // 切断任务链</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StatementSet statementSet = tEnv.createStatementSet();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // DataStream 转 Table，创建临时视图，插入 sink 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (Map.Entry&lt;String, RowTypeInfo&gt; entry : tableTypeInformationMap.entrySet()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String tableName = entry.getKey();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            RowTypeInfo rowTypeInfo = entry.getValue();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            SingleOutputStreamOperator&lt;Row&gt; mapStream =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    dataStreamSource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .filter(data -&gt; data.f0.equals(tableName))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .setParallelism(ParameterUtil.setParallelism(params))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .map(data -&gt; data.f1, rowTypeInfo)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .setParallelism(ParameterUtil.setParallelism(params));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Table table = tEnv.fromChangelogStream(mapStream);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String temporaryViewName = String.format("t_%s", tableName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            tEnv.createTemporaryView(temporaryViewName, table);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String sinkTableName = String.format("sink_%s", tableName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String insertSql =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    String.format(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            "insert into %s select * from %s", sinkTableName, temporaryViewName);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            LOG.info("add insertSql for {}, sql: {}", tableName, insertSql);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            statementSet.addInsertSql(insertSql);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        statementSet.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>效果</h1><p><img loading="lazy" src="https://img-blog.csdnimg.cn/92a0a25d2ef94e4a96c791866f723c5c.png" alt="在这里插入图片描述" class="img_ev3q"></p><p><img loading="lazy" src="https://img-blog.csdnimg.cn/c9a35c9cd950480bbf05e39461660e1b.png" alt="在这里插入图片描述" class="img_ev3q"></p><h1>最后</h1><p>代码和测试可能不充分，仅供参考，欢迎提出意见。</p><p>欢迎访问博客 <a href="https://sophiadata.github.io/Bigdata_Blog_Website/learning/overview" target="_blank" rel="noopener noreferrer">https://sophiadata.github.io/Bigdata_Blog_Website/learning/overview</a></p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[实时数仓开发]]></title>
        <id>/实时数仓开发</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/实时数仓开发"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[采集到 Kafka 的 topiclog 和 topicdb 主题的数据即为实时数仓的 ODS 层，这一层的作用是对数据做原样展示和备份。]]></summary>
        <content type="html"><![CDATA[<h1>数仓开发之ODS层</h1><p>采集到 Kafka 的 topic_log 和 topic_db 主题的数据即为实时数仓的 ODS 层，这一层的作用是对数据做原样展示和备份。</p><p>数仓开发之DIM层</p><p>DIM层设计要点：</p><p>（1）DIM层的设计依据是维度建模理论，该层存储维度模型的维度表。</p><p>（2）DIM层的数据存储在 HBase 表中</p><p>DIM 层表是用于维度关联的，要通过主键去获取相关维度信息，这种场景下 K-V 类型数据库的效率较高。</p><p>常见的 K-V 类型数据库有 Redis、HBase，而 Redis 的数据常驻内存，会给内存造成较大压力，因而选用 HBase 存储维度数据。</p><p>（3）DIM层表名的命名规范为dim_表名</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置表">配置表<a class="hash-link" href="#配置表" title="标题的直接链接">​</a></h2><p>本层的任务是将业务数据直接写入到不同的 HBase 表中。那么如何让程序知道流中的哪些数据是维度数据？</p><p>维度数据又应该写到 HBase 的哪些表中？</p><p>为了解决这个问题，我们选择在 MySQL 中构建一张配置表，通过 Flink CDC 将配置表信息读取到程序中。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="flink-cdc">Flink CDC<a class="hash-link" href="#flink-cdc" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置表设计">配置表设计<a class="hash-link" href="#配置表设计" title="标题的直接链接">​</a></h3><p>1）字段解析</p><p>我们将为配置表设计五个字段</p><blockquote><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">source_table：作为数据源的业务数据表名 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sink_table：作为数据目的地的 Phoenix 表名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sink_columns：Phoenix 表字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sink_pk：Phoenix 表主键</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sink_extend：Phoenix 建表扩展，即建表时一些额外的配置语句</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></blockquote><p>将 source_table 作为配置表的主键，可以通过它获取唯一的目标表名、字段、主键和建表扩展，从而得到完整的 Phoenix 建表语句。</p><p>2）在Mysql中创建数据库建表并开启Binlog</p><p>（1）创建数据库 gmall_config ，注意:和 gmall 业务库区分开</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[atguigu@hadoop102 db_log]$ mysql -uroot -p000000 -e"create database gmall_config charset utf8 default collate utf8_general_ci"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）在 gmall_config 库中创建配置表 table_process</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CREATE TABLE `table_process` (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  `source_table` varchar(200) NOT NULL COMMENT '来源表',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  `sink_table` varchar(200) DEFAULT NULL COMMENT '输出表',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  `sink_columns` varchar(2000) DEFAULT NULL COMMENT '输出字段',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  `sink_pk` varchar(200) DEFAULT NULL COMMENT '主键字段',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  `sink_extend` varchar(200) DEFAULT NULL COMMENT '建表扩展',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  PRIMARY KEY (`source_table`)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）在MySQL配置文件中增加 gmall_config 开启Binlog</p><p>参考 Flink cdc 文档。</p><p>配置表建表及数据导入 SQL 文件如下。</p><p>略。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务">主要任务<a class="hash-link" href="#主要任务" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="接收kafka数据过滤空值数据">接收Kafka数据，过滤空值数据<a class="hash-link" href="#接收kafka数据过滤空值数据" title="标题的直接链接">​</a></h3><p>对Maxwell抓取的数据进行ETL，有用的部分保留，没用的过滤掉。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="动态拆分维度表功能">动态拆分维度表功能<a class="hash-link" href="#动态拆分维度表功能" title="标题的直接链接">​</a></h3><p>由于Maxwell是把全部数据统一写入一个Topic中, 这样显然不利于日后的数据处理。所以需要把各个维度表拆开处理。</p><p>在实时计算中一般把维度数据写入存储容器，一般是方便通过主键查询的数据库比如HBase,Redis,MySQL等。</p><p>这样的配置不适合写在配置文件中，因为这样的话，业务端随着需求变化每增加一张维度表表，就要修改配置重启计算程序。</p><p>所以这里需要一种动态配置方案，把这种配置长期保存起来，一旦配置有变化，实时计算可以自动感知。这种可以有三个方案实现：</p><ul><li><p>一种是用Zookeeper存储，通过Watch感知数据变化；</p></li><li><p>另一种是用mysql数据库存储，周期性的同步；</p></li><li><p>再一种是用mysql数据库存储，使用广播流。</p></li></ul><p>这里选择第三种方案，主要是MySQL对于配置数据初始化和维护管理，使用FlinkCDC读取配置信息表，将配置流作为广播流与主流进行连接。</p><p>所以就有了如下图：</p><p> <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242138-a6ab05fb-7e84-43af-a703-7c3af95b4f14.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="把流中的数据保存到对应的维度表">把流中的数据保存到对应的维度表<a class="hash-link" href="#把流中的数据保存到对应的维度表" title="标题的直接链接">​</a></h3><p>维度数据保存到HBase的表中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="代码实现">代码实现<a class="hash-link" href="#代码实现" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="接收kafka数据过滤空值数据-1">接收Kafka数据，过滤空值数据<a class="hash-link" href="#接收kafka数据过滤空值数据-1" title="标题的直接链接">​</a></h3><p>1）创建 KafkaUtil 工具类</p><p>和 Kafka 交互要用到 Flink 提供的 FlinkKafkaConsumer、FlinkKafkaProducer 类，为了提高模板代码的复用性，将其封装到 KafkaUtil 工具类中。</p><p>此处从 Kafka 读取数据，创建 getKafkaConsumer(String topic, String groupId) 方法</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class KafkaUtil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static String BOOTSTRAP_SERVERS = "hadoop102:9092, hadoop103:9092, hadoop104:9092";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    static String DEFAULT_TOPIC = "default_topic";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static FlinkKafkaConsumer&lt;String&gt;  getKafkaConsumer(String topic, String groupId) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Properties prop = new Properties();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        prop.setProperty("bootstrap.servers", BOOTSTRAP_SERVERS);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        prop.setProperty(ConsumerConfig.GROUP_ID_CONFIG, groupId);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FlinkKafkaConsumer&lt;String&gt; consumer = new FlinkKafkaConsumer&lt;&gt;(topic,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new KafkaDeserializationSchema&lt;String&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public boolean isEndOfStream(String nextElement) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public String deserialize(ConsumerRecord&lt;byte[], byte[]&gt; record) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if(record != null &amp;&amp; record.value() != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return new String(record.value());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public TypeInformation&lt;String&gt; getProducedType() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return TypeInformation.of(String.class);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }, prop);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return consumer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class DimSinkApp {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                10, Time.of(1L, TimeUnit.DAYS), Time.of(3L, TimeUnit.MINUTES)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage("hdfs://hadoop102:8020/gmall/ck");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 读取业务主流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String topic = "topic_db";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String groupId = "dim_sink_app";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStreamSource&lt;String&gt; gmallDS = env.addSource(KafkaUtil.getKafkaConsumer(topic, groupId));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 主流数据结构转换</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; jsonDS = gmallDS.map(JSON::parseObject);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 主流 ETL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; filterDS = jsonDS.filter(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                jsonObj -&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        jsonObj.getJSONObject("data");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if(jsonObj.getString("type").equals("bootstrap-start")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        || jsonObj.getString("type").equals("bootstrap-complete")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    } catch (JSONException jsonException) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 打印测试</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        filterDS.print("filterDS &gt;&gt;&gt; ");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="根据mysql的配置表动态进行分流">根据MySQL的配置表，动态进行分流<a class="hash-link" href="#根据mysql的配置表动态进行分流" title="标题的直接链接">​</a></h3><p>1）导入依赖</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;flink-connector-jdbc_${scala.version}&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;${flink.version}&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;com.ververica&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;flink-connector-mysql-cdc&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;2.1.0&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.phoenix&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;phoenix-spark&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;5.0.0-HBase-2.0&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;exclusions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;exclusion&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;groupId&gt;org.glassfish&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;artifactId&gt;javax.el&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/exclusion&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/exclusions&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;!-- 如果不引入 flink-table 相关依赖，则会报错：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: java.lang.ClassNotFoundException: </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">org.apache.flink.connector.base.source.reader.RecordEmitter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">引入以下依赖可以解决这个问题（引入某些其它的 flink-table相关依赖也可）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;artifactId&gt;flink-table-api-java-bridge_2.12&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;version&gt;1.13.0&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/dependency&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）创建配置表实体类</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.bean;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import lombok.Data;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class TableProcess {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //来源表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String sourceTable;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //输出表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String sinkTable;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //输出字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String sinkColumns;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //主键字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String sinkPk;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //建表扩展</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String sinkExtend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）编写操作读取配置表形成广播流</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// TODO 6. FlinkCDC 读取配置流并广播流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 6.1 FlinkCDC 读取配置表信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MySqlSource&lt;String&gt; mySqlSource = MySqlSource.&lt;String&gt;builder()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .hostname("hadoop102")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .port(3306)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .databaseList("gmall_config") // set captured database</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .tableList("gmall_config.table_process") // set captured table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .username("root")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .password("000000")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .deserializer(new JsonDebeziumDeserializationSchema()) // converts SourceRecord to JSON String</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .startupOptions(StartupOptions.initial())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .build();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 6.2 封装为流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStreamSource&lt;String&gt; mysqlDSSource = env.fromSource(mySqlSource, WatermarkStrategy.noWatermarks(), "MysqlSource");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 6.3 广播配置流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MapStateDescriptor&lt;String, TableProcess&gt; tableConfigDescriptor = new MapStateDescriptor&lt;String, TableProcess&gt;("table-process-state", String.class, TableProcess.class);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        BroadcastStream&lt;String&gt; broadcastDS = mysqlDSSource.broadcast(tableConfigDescriptor);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 连接流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        BroadcastConnectedStream&lt;JSONObject, String&gt; connectedStream = filterDS.connect(broadcastDS);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5）定义一个项目中常用的配置常量类GmallConfig</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.common;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class GmallConfig {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Phoenix库名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static final String HBASE_SCHEMA = "GMALL2022_REALTIME";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Phoenix驱动</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static final String PHOENIX_DRIVER = "org.apache.phoenix.jdbc.PhoenixDriver";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Phoenix连接参数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static final String PHOENIX_SERVER = "jdbc:phoenix:hadoop102,hadoop103,hadoop104:2181";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6）自定义函数MyBroadcastFunction</p><p> <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242215-ed2186bf-6999-4501-bf09-e7c855071ae1.png" alt="img" class="img_ev3q"></p><p>（1）定义类MyBroadcastFunction</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.func;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSONObject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.functions.co.BroadcastProcessFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.util.Collector;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.util.OutputTag;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class MyBroadcastFunction extends BroadcastProcessFunction&lt;JSONObject, String, JSONObject&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private MapStateDescriptor&lt;String, TableProcess&gt; tableConfigDescriptor;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public MyBroadcastFunction(MapStateDescriptor&lt;String, TableProcess&gt; tableConfigDescriptor) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        this.tableConfigDescriptor = tableConfigDescriptor;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void processElement(JSONObject jsonObj, ReadOnlyContext readOnlyContext, Collector&lt;JSONObject&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void processBroadcastElement(String jsonStr, Context context, Collector&lt;JSONObject&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）自定义函数MyBroadcastFunction-open</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 定义Phoenix的连接</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private Connection conn;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void open(Configuration parameter) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        super.open(parameter);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Class.forName(GmallConfig.PHOENIX_DRIVER);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        conn = DriverManager.getConnection(GmallConfig.PHOENIX_SERVER);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）自定义函数MyBroadcastFunction-processBroadcastElement</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void processBroadcastElement(String jsonStr, Context context, Collector&lt;JSONObject&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        JSONObject jsonObj = JSON.parseObject(jsonStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        TableProcess config = jsonObj.getObject("after", TableProcess.class);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sourceTable = config.getSourceTable();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sinkTable = config.getSinkTable();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sinkColumns = config.getSinkColumns();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sinkPk = config.getSinkPk();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sinkExtend = config.getSinkExtend();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        BroadcastState&lt;String, TableProcess&gt; tableConfigState = context.getBroadcastState(tableConfigDescriptor);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableConfigState.put(sourceTable, config);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        checkTable(sinkTable, sinkColumns, sinkPk, sinkExtend);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）自定义函数MyBroadcastFunction-checkTable</p><p>在 Phoenix 建表之前要先创建命名空间 GMALL2022_REALTIM。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">0: jdbc:phoenix:&gt; create schema GMALL2022_REALTIME;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">checkTable() 方法如下</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Phoenix 建表函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param sinkTable 目标表名  eg. test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param sinkColumns 目标表字段  eg. id,name,sex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param sinkPk 目标表主键  eg. id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param sinkExtend 目标表建表扩展字段  eg. ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *                   eg. create table if not exists mydb.test(id varchar primary key, name varchar, sex varchar)...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private void checkTable(String sinkTable, String sinkColumns, String sinkPk, String sinkExtend) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 封装建表 SQL </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StringBuilder sql = new StringBuilder();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql.append("create table if not exists " + GmallConfig.HBASE_SCHEMA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + "." + sinkTable + "(\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String[] columnArr = sinkColumns.split(",");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 为主键及扩展字段赋默认值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (sinkPk == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sinkPk = "id";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (sinkExtend == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sinkExtend = "";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 遍历添加字段信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (int i = 0; i &lt; columnArr.length; i++) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sql.append(columnArr[i] + " varchar");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 判断当前字段是否为主键</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (sinkPk.equals(columnArr[i])) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sql.append(" primary key");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 如果当前字段不是最后一个字段，则追加","</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (i &lt; columnArr.length - 1) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sql.append(",\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql.append(")");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql.append(sinkExtend);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String createStatement = sql.toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 为数据库操作对象赋默认值，执行建表 SQL </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PreparedStatement preparedSt = null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            preparedSt = conn.prepareStatement(createStatement);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            preparedSt.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (SQLException sqlException) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sqlException.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("建表语句\n" + createStatement + "\n执行异常");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } finally {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (preparedSt != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    preparedSt.close();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } catch (SQLException sqlException) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    sqlException.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    throw new RuntimeException("数据库操作对象释放异常");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（5）自定义函数MyBroadcastFunction-processElement()</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   public void processElement(JSONObject jsonObj, ReadOnlyContext readOnlyContext, Collector&lt;JSONObject&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       ReadOnlyBroadcastState&lt;String, TableProcess&gt; tableConfigState = readOnlyContext.getBroadcastState(tableConfigDescriptor);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       // 获取配置信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       String sourceTable = jsonObj.getString("table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       TableProcess tableConfig = tableConfigState.get(sourceTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       if (tableConfig != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           JSONObject data = jsonObj.getJSONObject("data");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           String sinkTable = tableConfig.getSinkTable();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           // 根据 sinkColumns 过滤数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           String sinkColumns = tableConfig.getSinkColumns();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           filterColumns(data, sinkColumns);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           // 将目标表名加入到主流数据中</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           data.put("sinkTable", sinkTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           out.collect(data);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（6）自定义函数MyBroadcastFunction-filterColumns()，校验字段，过滤掉多余的字段</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">private void filterColumns(JSONObject data, String sinkColumns) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Set&lt;Map.Entry&lt;String, Object&gt;&gt; dataEntries = data.entrySet();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        dataEntries.removeIf(r -&gt; !sinkColumns.contains(r.getKey()));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（7）主程序DimSinkApp中调用MyBroadcastFunction提取维度数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// TODO 8. 处理维度表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; dimDS = connectedStream.process(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new MyBroadcastFunction(tableConfigDescriptor)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="保存维度到hbasephoenix">保存维度到HBase(Phoenix)<a class="hash-link" href="#保存维度到hbasephoenix" title="标题的直接链接">​</a></h3><p>1）程序流程分析</p><p> <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242508-adc1dcaa-f20d-4c50-8d52-02eb20e6a79f.png" alt="img" class="img_ev3q"></p><p>DimSink 继承了RickSinkFunction，这个function得分两条时间线：</p><p>一条是任务启动时执行open操作（图中紫线），我们可以把连接的初始化工作放在此处一次性执行；</p><p>另一条是随着每条数据的到达反复执行invoke()（图中黑线）,在这里面我们要实现数据的保存，主要策略就是根据数据组合成sql提交给hbase。</p><p>3）创建 PhoenixUtil 工具类，在其中创建initializeConnection()方法和insertValues()方法</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.util;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSONObject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.common.GmallConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.commons.beanutils.BeanUtils;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.commons.lang3.StringUtils;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.sql.*;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.ArrayList;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.Collection;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.List;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.Set;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class PhoenixUtil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 定义数据库连接对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static Connection conn;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * 初始化 SQL 执行环境</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void initializeConnection() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 1. 注册驱动</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Class.forName("org.apache.phoenix.jdbc.PhoenixDriver");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 2. 获取连接对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            conn = DriverManager.getConnection("jdbc:phoenix:hadoop102,hadoop103,hadoop104:2181");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 3. 设置 Phoenix SQL 执行使用的 schema（对应 mysql 的 database）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            conn.setSchema(GmallConfig.HBASE_SCHEMA);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (ClassNotFoundException classNotFoundException) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("注册驱动异常");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            classNotFoundException.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (SQLException sqlException) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("获取连接对象异常");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sqlException.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Phoenix 表数据导入方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param sinkTable 写入数据的 Phoenix 目标表名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param data 待写入的数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void insertValues(String sinkTable, JSONObject data) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 双重校验锁初始化连接对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(conn == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            synchronized (PhoenixUtil.class) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(conn == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    initializeConnection();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 获取字段名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Set&lt;String&gt; columns = data.keySet();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 获取字段对应的值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Collection&lt;Object&gt; values = data.values();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 拼接字段名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String columnStr = StringUtils.join(columns, ",");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 拼接字段值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String valueStr = StringUtils.join(values, "','");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 拼接插入语句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sql = "upsert into " + GmallConfig.HBASE_SCHEMA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                + "." + sinkTable + "(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                columnStr + ") values ('" + valueStr + "')";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 为数据库操作对象赋默认值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PreparedStatement preparedSt = null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 执行 SQL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            System.out.println("插入语句为:" + sql);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            preparedSt = conn.prepareStatement(sql);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            preparedSt.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            conn.commit();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (SQLException sqlException) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sqlException.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw new RuntimeException("数据库操作对象获取或执行异常");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } finally {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(preparedSt != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    preparedSt.close();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } catch (SQLException sqlException) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    sqlException.printStackTrace();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    throw new RuntimeException("数据库操作对象释放异常");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）MyPhoenixSink</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">自定义 SinkFunction 子类 MyPhoenixSink，在其中调用 Phoenix 工具类的 insertValues(String sinkTable, JSONObject data) 方法，将维度数据写出到 Phoenix 的维度表中。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.func;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSONObject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.PhoenixUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.functions.sink.SinkFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class MyPhoenixSink implements SinkFunction&lt;JSONObject&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void invoke(JSONObject jsonObj, Context context) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 获取目标表表名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String sinkTable = jsonObj.getString("sinkTable");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 清除 JSON 对象中的 sinkTable 字段，以便可将该对象直接用于 HBase 表的数据写入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        jsonObj.remove("sinkTable");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PhoenixUtil.insertValues(sinkTable, jsonObj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5）主程序 DimSinkApp 中调用 MyPhoenixSink</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// TODO 9. 将数据写入 Phoenix 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        dimDS.addSink(new MyPhoenixSink());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6）测试</p><p>（1）启动HDFS、ZK、Kafka、Maxwell、HBase</p><p>（2）运行 IDEA 中的 DimSinkApp</p><p>（3）执行 mysql_to_kafka_init.sh 脚本</p><p>mysql_to_kafka_init.sh all</p><p>（6）通过phoenix查看hbase的schema以及表情况</p><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242537-b7d64239-fd24-4615-af0f-37dc0d4b4245.png" alt="img" class="img_ev3q"></p><h1>数仓开发之DWD层</h1><p>DWD层设计要点：</p><p>（1）DWD层的设计依据是维度建模理论，该层存储维度模型的事实表。</p><p>（2）DWD层表名的命名规范为dwd<em>数据域</em>表名</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="流量域未经加工的事务事实表">流量域未经加工的事务事实表<a class="hash-link" href="#流量域未经加工的事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-1">主要任务<a class="hash-link" href="#主要任务-1" title="标题的直接链接">​</a></h3><p>1）数据清洗（ETL）</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">数据传输过程中可能会出现部分数据丢失的情况，导致 JSON 数据结构不再完整，因此需要对脏数据进行过滤。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）新老访客状态标记修复</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">日志数据 common 字段下的 is_new 字段是用来标记新老访客状态的，1 表示新访客，2 表示老访客。前端埋点采集到的数据可靠性无法保证，可能会出现老访客被标记为新访客的问题，因此需要对该标记进行修复。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3）分流</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">本节将通过分流对日志数据进行拆分，生成五张事务事实表写入 Kafka</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">流量域页面浏览事务事实表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">流量域启动事务事实表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">流量域动作事务事实表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">流量域曝光事务事实表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">流量域错误事务事实表</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路">思路<a class="hash-link" href="#思路" title="标题的直接链接">​</a></h3></blockquote><p>1）数据清洗（ETL）</p><p>对流中数据进行解析，将字符串转换为 JSONObject，如果解析报错则必然为脏数据。定义侧输出流，将脏数据发送到侧输出流，写入 Kafka 脏数据主题</p><p>2）新老访客状态标记修复</p><p>（1）前端埋点新老访客状态标记设置规则</p><p>以神策提供的第三方埋点服务中新老访客状态标记设置规则为例</p><blockquote><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">- Web 端：用户第一次访问埋入神策 SDK 页面的当天（即第一天），JS SDK 会在网页的 cookie 中设置一个首日访问的标记，并设置第一天 24 点之前，该标记为 true，即第一天触发的网页端所有事件中，is_new = 1。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">第一天之后，该标记则为 false，即第一天之后触发的网页端所有事件中，is_new = 0；</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 小程序端：用户第一天访问埋入神策 SDK 的页面时，小程序 SDK 会在 storage 缓存中创建一个首日为 true 的标记，并且设置第一天 24 点之前，该标记均为 true。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">即第一天触发的小程序端所有事件中，is_new = 1。第一天之后，该标记则为 false，即第一天之后触发的小程序端所有事件中，is_new = 0；</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- APP 端：用户安装 App 后，第一次打开埋入神策 SDK 的 App 的当天，Android/iOS SDK 会在手机本地缓存内，创建一个首日为 true 的标记，并且设置第一天 24 点之前，该标记均为 true。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">即第一天触发的 APP 端所有事件中，is_new = 1。第一天之后，该标记则为 false，即第一天之后触发的 APP 端所有事件中，is_new = 0。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本项目模拟生成的是 APP 端日志数据。对于此类日志，如果首日之后用户清除了手机本地缓存中的标记，再次启动 APP 会重新设置一个首日为 true 的标记，导致本应为 0 的 is_new 字段被置为 1，可能会给相关指标带来误差。</p></blockquote><p>因此，有必要对新老访客状态标记进行修复。</p><p>（2）新老访客状态标记修复思路</p><p>运用 Flink 状态编程，为每个 mid 维护一个键控状态，记录首次访问日期。</p><p>①如果 is_new 的值为 1</p><p>a）如果键控状态为 null，认为本次是该访客首次访问 APP，将日志中 ts 对应的日期更新到状态中，不对 is_new 字段做修改；</p><p>b）如果键控状态不为 null，且首次访问日期不是当日，说明访问的是老访客，将 is_new 字段置为 0；</p><p>c）如果键控状态不为 null，且首次访问日期是当日，说明访问的是新访客，不做操作；</p><p>②如果 is_new 的值为 0</p><p>a）如果键控状态为 null，说明访问 APP 的是老访客但本次是该访客的页面日志首次进入程序。当前端新老访客状态标记丢失时，日志进入程序被判定为老访客，Flink 程序就可以纠正被误判的访客状态标记，只要将状态中的日期设置为今天之前即可。本程序选择将状态更新为昨日；</p><p>b）如果键控状态不为 null，说明程序已经维护了首次访问日期，不做操作。</p><p>3）利用侧输出流实现数据拆分</p><p>（1）埋点日志结构分析</p><p>前端埋点获取的 JSON 字符串（日志）可能存在 common、start、page、displays、actions、err 六种字段。其中</p><ul><li>common 对应的是公共信息，是所有日志都有的字段</li><li>err 对应的是错误信息，所有日志都可能有的字段</li><li>start 对应的是启动信息，启动日志才有的字段</li><li>page 对应的是页面信息，页面日志才有的字段</li><li>displays 对应的是曝光信息，曝光日志才有的字段，曝光日志可以归为页面日志，因此必然有 page 字段</li><li>actions 对应的是动作信息，动作日志才有的字段，同样属于页面日志，必然有 page 字段。动作信息和曝光信息可以同时存在。</li><li>ts 对应的是时间戳，单位：毫秒，所有日志都有的字段</li></ul><p>综上，我们可以将前端埋点获取的日志分为两大类：启动日志和页面日志。</p><p>二者都有 common 字段和 ts 字段，都可能有 err 字段。页面日志一定有 page 字段，一定没有 start 字段，可能有 displays 和 actions 字段；</p><p>启动日志一定有 start 字段，一定没有 page、displays 和 actions 字段。</p><p>（2）分流日志分类</p><p>本节将按照内容，将日志分为以下五类</p><ul><li>启动日志</li><li>页面日志</li><li>曝光日志</li><li>动作日志</li><li>错误日志
（3）分流思路</li></ul><p>①所有日志数据都可能拥有 err 字段，所有首先获取 err 字段，如果返回值不为 null 则将整条日志数据发送到错误侧输出流。然后删掉 JSONObject 中的 err 字段及对应值；</p><p>②判断是否有 start 字段，如果有则说明数据为启动日志，将其发送到启动侧输出流；如果没有则说明为页面日志，进行下一步；</p><p>③页面日志必然有 page 字段、 common 字段和 ts 字段，获取它们的值，ts 封装为包装类 Long，其余两个字段的值封装为 JSONObject；</p><p>④判断是否有 displays 字段，如果有，将其值封装为 JSONArray，遍历该数组，依次获取每个元素（记为 display），封装为JSONObject。创建一个空的 JSONObject，将 display、common、page和 ts 添加到该对象中，获得处理好的曝光数据，发送到曝光侧输出流。动作日志的处理与曝光日志相同（注意：一条页面日志可能既有曝光数据又有动作数据，二者没有任何关系，因此曝光数据不为 null 时仍要对动作数据进行处理）；</p><p>⑤动作日志和曝光日志处理结束后删除 displays 和 actions 字段，此时主流的 JSONObject 中只有 common 字段、 page 字段和 ts 字段，即为最终的页面日志。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">处理结束后，页面日志数据位于主流，其余四种日志分别位于对应的侧输出流，将五条流的数据写入 Kafka 对应主题即可。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解">图解<a class="hash-link" href="#图解" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242565-609d3749-447a-454f-880a-aad215e3763f.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码">代码<a class="hash-link" href="#代码" title="标题的直接链接">​</a></h3><p>1）在 KafkaUtil 工具类中补充 getKafkaProducer() 方法</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public static FlinkKafkaProducer&lt;String&gt; getKafkaProducer(String topic) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Properties prop = new Properties();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        prop.setProperty("bootstrap.servers", BOOTSTRAP_SERVERS);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        prop.setProperty(ProducerConfig.TRANSACTION_TIMEOUT_CONFIG, 60 * 15 * 1000 + "");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FlinkKafkaProducer&lt;String&gt; producer = new FlinkKafkaProducer&lt;String&gt;(DEFAULT_TOPIC, new KafkaSerializationSchema&lt;String&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            public ProducerRecord&lt;byte[], byte[]&gt; serialize(String jsonStr, @Nullable Long timestamp) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return new ProducerRecord&lt;byte[], byte[]&gt;(topic, jsonStr.getBytes());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }, prop,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                FlinkKafkaProducer.Semantic.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return producer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）创建 DateFormatUtil 工具类用于日期格式化</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.util;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.LocalDateTime;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.LocalTime;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneOffset;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.format.DateTimeFormatter;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.Date;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DateFormatUtil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static final DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static final DateTimeFormatter dtfFull = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static Long toTs(String dtStr, boolean isFull) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        LocalDateTime localDateTime = null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (!isFull) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            dtStr = dtStr + " 00:00:00";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        localDateTime = LocalDateTime.parse(dtStr, dtfFull);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return localDateTime.toInstant(ZoneOffset.of("+8")).toEpochMilli();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static Long toTs(String dtStr) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return toTs(dtStr, false);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static String toDate(Long ts) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Date dt = new Date(ts);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        LocalDateTime localDateTime = LocalDateTime.ofInstant(dt.toInstant(), ZoneId.systemDefault());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return dtf.format(localDateTime);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static String toYmdHms(Long ts) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Date dt = new Date(ts);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        LocalDateTime localDateTime = LocalDateTime.ofInstant(dt.toInstant(), ZoneId.systemDefault());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return dtfFull.format(localDateTime);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(toYmdHms(System.currentTimeMillis()));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3）主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.log;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSON;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSONArray;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSONObject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.DateFormatUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.state.ValueState;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.state.ValueStateDescriptor;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.configuration.Configuration;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.DataStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.DataStreamSource;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.KeyedStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.functions.KeyedProcessFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.functions.ProcessFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.util.Collector;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.util.OutputTag;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.concurrent.TimeUnit;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class BaseLogApp {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 初始化环境</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 启用状态后端</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .failureRateRestart(10,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        Time.of(3L, TimeUnit.DAYS),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        Time.of(1L, TimeUnit.MINUTES)));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage("hdfs://hadoop102:8020/gmall/ck");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取主流数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String topic = "topic_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String groupId = "base_log_consumer";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStreamSource&lt;String&gt; source = env.addSource(KafkaUtil.getKafkaConsumer(topic, groupId));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 数据清洗，转换结构</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 4.1 定义错误侧输出流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        OutputTag&lt;String&gt; dirtyStreamTag = new OutputTag&lt;String&gt;("dirtyStream") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;String&gt; cleanedStream = source.process(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new ProcessFunction&lt;String, String&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public void processElement(String jsonStr, Context ctx, Collector&lt;String&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            JSONObject jsonObj = JSON.parseObject(jsonStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            out.collect(jsonStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        } catch (Exception e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            ctx.output(dirtyStreamTag, jsonStr);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 4.2 将脏数据写出到 Kafka 指定主题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStream&lt;String&gt; dirtyStream = cleanedStream.getSideOutput(dirtyStreamTag);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String dirtyTopic = "dirty_data";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        dirtyStream.addSink(KafkaUtil.getKafkaProducer(dirtyTopic));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 4.3 转换主流数据结构 jsonStr -&gt; jsonObj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; mappedStream = cleanedStream.map(JSON::parseObject);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 新老访客状态标记修复</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 5.1 按照 mid 对数据进行分组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        KeyedStream&lt;JSONObject, String&gt; keyedStream = mappedStream.keyBy(r -&gt; r.getJSONObject("common").getString("mid"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 5.2 新老访客状态标记修复</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; fixedStream = keyedStream.process(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new KeyedProcessFunction&lt;String, JSONObject, JSONObject&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    ValueState&lt;String&gt; firstViewDtState;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public void open(Configuration param) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        super.open(param);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        firstViewDtState = getRuntimeContext().getState(new ValueStateDescriptor&lt;String&gt;(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                "lastLoginDt", String.class</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public void processElement(JSONObject jsonObj, Context ctx, Collector&lt;JSONObject&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        String isNew = jsonObj.getJSONObject("common").getString("is_new");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        String firstViewDt = firstViewDtState.value();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        Long ts = jsonObj.getLong("ts");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        String dt = DateFormatUtil.toDate(ts);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if ("1".equals(isNew)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            if (firstViewDt == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                firstViewDtState.update(dt);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                if (!firstViewDt.equals(dt)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    isNew = "0";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    jsonObj.getJSONObject("common").put("is_new", isNew);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            if (firstViewDt == null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                // 将首次访问日期置为昨日</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                String yesterday = DateFormatUtil.toDate(ts - 1000 * 60 * 60 * 24);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                firstViewDtState.update(yesterday);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        out.collect(jsonObj);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 分流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 6.1 定义启动、曝光、动作、错误侧输出流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        OutputTag&lt;String&gt; startTag = new OutputTag&lt;String&gt;("startTag") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        OutputTag&lt;String&gt; displayTag = new OutputTag&lt;String&gt;("displayTag") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        OutputTag&lt;String&gt; actionTag = new OutputTag&lt;String&gt;("actionTag") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        OutputTag&lt;String&gt; errorTag = new OutputTag&lt;String&gt;("errorTag") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 6.2 分流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;String&gt; separatedStream = fixedStream.process(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new ProcessFunction&lt;JSONObject, String&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public void processElement(JSONObject jsonObj, Context context, Collector&lt;String&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        // 6.2.1 收集错误数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        JSONObject error = jsonObj.getJSONObject("err");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if (error != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            context.output(errorTag, jsonObj.toJSONString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        // 剔除 "err" 字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        jsonObj.remove("err");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        // 6.2.2 收集启动数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        JSONObject start = jsonObj.getJSONObject("start");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if (start != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            context.output(startTag, jsonObj.toJSONString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            // 获取 "page" 字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            JSONObject page = jsonObj.getJSONObject("page");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            // 获取 "common" 字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            JSONObject common = jsonObj.getJSONObject("common");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            // 获取 "ts"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            Long ts = jsonObj.getLong("ts");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            // 6.2.3 收集曝光数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            JSONArray displays = jsonObj.getJSONArray("displays");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            if (displays != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                for (int i = 0; i &lt; displays.size(); i++) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    JSONObject display = displays.getJSONObject(i);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    JSONObject displayObj = new JSONObject();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    displayObj.put("display", display);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    displayObj.put("common", common);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    displayObj.put("page", page);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    displayObj.put("ts", ts);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    context.output(displayTag, displayObj.toJSONString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            // 6.2.4 收集动作数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            JSONArray actions = jsonObj.getJSONArray("actions");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            if (actions != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                for (int i = 0; i &lt; actions.size(); i++) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    JSONObject action = actions.getJSONObject(i);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    JSONObject actionObj = new JSONObject();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    actionObj.put("action", action);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    actionObj.put("common", common);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    actionObj.put("page", page);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    actionObj.put("ts", ts);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    context.output(actionTag, actionObj.toJSONString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            // 6.2.5 收集页面数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            jsonObj.remove("displays");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            jsonObj.remove("actions");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            out.collect(jsonObj.toJSONString());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 打印主流和各侧输出流查看分流效果</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//        separatedStream.print("page&gt;&gt;&gt;");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//        separatedStream.getSideOutput(startTag).print("start!!!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//        separatedStream.getSideOutput(displayTag).print("display@@@");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//        separatedStream.getSideOutput(actionTag).print("action###");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//        separatedStream.getSideOutput(errorTag).print("error$$$");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 将数据输出到 Kafka 的不同主题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 7.1 提取各侧输出流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStream&lt;String&gt; startDS = separatedStream.getSideOutput(startTag);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStream&lt;String&gt; displayDS = separatedStream.getSideOutput(displayTag);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStream&lt;String&gt; actionDS = separatedStream.getSideOutput(actionTag);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStream&lt;String&gt; errorDS = separatedStream.getSideOutput(errorTag);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 7.2 定义不同日志输出到 Kafka 的主题名称</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String page_topic = "dwd_traffic_page_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String start_topic = "dwd_traffic_start_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String display_topic = "dwd_traffic_display_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String action_topic = "dwd_traffic_action_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String error_topic = "dwd_traffic_error_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        separatedStream.addSink(KafkaUtil.getKafkaProducer(page_topic));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        startDS.addSink(KafkaUtil.getKafkaProducer(start_topic));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        displayDS.addSink(KafkaUtil.getKafkaProducer(display_topic));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        actionDS.addSink(KafkaUtil.getKafkaProducer(action_topic));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        errorDS.addSink(KafkaUtil.getKafkaProducer(error_topic));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="流量域独立访客事务事实表">流量域独立访客事务事实表<a class="hash-link" href="#流量域独立访客事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-2">主要任务<a class="hash-link" href="#主要任务-2" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">过滤页面数据中的独立访客访问记录。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析">思路分析<a class="hash-link" href="#思路分析" title="标题的直接链接">​</a></h3><p>1）过滤 last_page_id 不为 null 的数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">独立访客数据对应的页面必然是会话起始页面，last_page_id 必为 null。过滤 last_page_id != null 的数据，减小数据量，提升计算效率。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）筛选独立访客记录</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">运用 Flink 状态编程，为每个 mid 维护一个键控状态，记录末次登录日期。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">如果末次登录日期为 null 或者不是今日，则本次访问是该 mid 当日首次访问，保留数据，将末次登录日期更新为当日。否则不是当日首次访问，丢弃数据。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3）状态存活时间设置</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">如果保留状态，第二日同一 mid 再次访问时会被判定为新访客，如果清空状态，判定结果相同，所以只要时钟进入第二日状态就可以清空。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>设置状态的 TTL 为 1 天，更新模式为 OnCreateAndWrite，表示在创建和更新状态时重置状态存活时间。</p><p>如：2022-02-21 08:00:00 首次访问，若 2022-02-22 没有访问记录，则 2022-02-22 08:00:00 之后状态清空。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-1">图解<a class="hash-link" href="#图解-1" title="标题的直接链接">​</a></h3><p>  <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242617-99e9fac8-1ce0-480b-aeda-6166a13aa3bc.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-1">代码<a class="hash-link" href="#代码-1" title="标题的直接链接">​</a></h3><p>1）主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.log;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSON;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSONObject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.DateFormatUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.functions.MapFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.functions.RichFilterFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.state.StateTtlConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.state.ValueState;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.state.ValueStateDescriptor;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.configuration.Configuration;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.DataStreamSource;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.KeyedStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTrafficUniqueVisitorDetail {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(30 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 kafka dwd_traffic_page_log 主题读取日志数据，封装为流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String topic = "dwd_traffic_page_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String groupId = "dwd_traffic_user_jump_detail";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FlinkKafkaConsumer&lt;String&gt; kafkaConsumer = KafkaUtil.getKafkaConsumer(topic, groupId);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStreamSource&lt;String&gt; pageLog = env.addSource(kafkaConsumer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 转换结构</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; mappedStream = pageLog.map(JSON::parseObject);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 过滤 last_page_id 不为 null 的数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; firstPageStream = mappedStream.filter(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                jsonObj -&gt; jsonObj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .getJSONObject("page")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .getString("last_page_id") == null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 按照 mid 分组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        KeyedStream&lt;JSONObject, String&gt; keyedStream = firstPageStream</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .keyBy(jsonObj -&gt; jsonObj.getJSONObject("common").getString("mid"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 通过 Flink 状态编程过滤独立访客记录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; filteredStream = keyedStream.filter(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new RichFilterFunction&lt;JSONObject&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    private ValueState&lt;String&gt; lastVisitDt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public void open(Configuration paramenters) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        super.open(paramenters);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        ValueStateDescriptor&lt;String&gt; valueStateDescriptor =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                new ValueStateDescriptor&lt;&gt;("last_visit_dt", String.class);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        valueStateDescriptor.enableTimeToLive(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                StateTtlConfig</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        .newBuilder(Time.days(1L))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        // 设置在创建和更新状态时更新存活时间</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        .setUpdateType(StateTtlConfig.UpdateType.OnCreateAndWrite)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        .build()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        lastVisitDt = getRuntimeContext().getState(valueStateDescriptor);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public boolean filter(JSONObject jsonObj) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        String visitDt = DateFormatUtil.toDate(jsonObj.getLong("ts"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        String lastDt = lastVisitDt.value();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if (lastDt == null || !lastDt.equals(visitDt)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            lastVisitDt.update(visitDt);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 将独立访客数据写入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Kafka dwd_traffic_unique_visitor_detail 主题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String targetTopic = "dwd_traffic_unique_visitor_detail";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FlinkKafkaProducer&lt;String&gt; kafkaProducer = KafkaUtil.getKafkaProducer(targetTopic);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        filteredStream.map(JSONAware::toJSONString).addSink(kafkaProducer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 9. 启动任务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="流量域用户跳出事务事实表">流量域用户跳出事务事实表<a class="hash-link" href="#流量域用户跳出事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-3">主要任务<a class="hash-link" href="#主要任务-3" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">过滤用户跳出明细数据。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-1">思路分析<a class="hash-link" href="#思路分析-1" title="标题的直接链接">​</a></h3><p>1）筛选策略</p><p>跳出是指会话中只有一个页面的访问行为，如果能获取会话的所有页面，只要筛选页面数为 1 的会话即可获取跳出明细数据。</p><p>（1）离线数仓中我们可以获取一整天的数据，结合访问时间、page_id 和 last_page_id 字段对整体数据集做处理可以按照会话对页面日志进行划分，从而获得每个会话的页面数，只要筛选页面数为 1 的会话即可提取跳出明细数据；</p><p>（2）实时计算中无法考虑整体数据集，很难按照会话对页面访问记录进行划分。而本项目模拟生成的日志数据中没有 session_id（会话id）字段，也无法通过按照 session_id 分组的方式计算每个会话的页面数。</p><p>（3）因此，我们需要换一种解决思路。如果能判定首页日志之后没有同一会话的页面访问记录同样可以筛选跳出数据。如果日志数据完全有序，会话页面不存在交叉情况，则跳出页面的判定可以分为三种情况：</p><p>① 两条紧邻的首页日志进入算子，可以判定第一条首页日志所属会话为跳出会话；</p><p>② 第一条首页日志进入算子后，接收到的第二条日志为非首页日志，则第一条日志所属会话不是跳出会话；</p><p>③ 第一条首页日志进入算子后，没有收到第二条日志，此时无法得出结论，必须继续等待。但是无休止地等待显然是不现实的。</p><p>因此，人为设定超时时间，超时时间内没有第二条数据就判定为跳出行为，这是一种近似处理，存在误差，但若能结合业务场景设置合理的超时时间，误差是可以接受的。</p><p>本程序为了便于测试，设置超时时间为 10s，为了更快看到效果可以设置更小的超时时间，生产环境的设置结合业务需求确定。</p><p>由上述分析可知，情况 ① 的首页数据和情况 ③ 中的超时数据为跳出明细数据。</p><p>2）知识储备</p><p>（1）Flink CEP
跳出行为需要考虑会话中的两条页面日志数据（第一条为首页日志且超时时间内没有接收到第二条，或两条紧邻的首页日志到来可以判定第一条为跳出数据），要筛选的是组合事件，用 filter 无法实现这样的功能，由此引出 Flink CEP。</p><p>Flink CEP（Complex Event Processing 复杂事件处理）是在Flink上层实现的复杂事件处理库，可以在无界流中检测出特定的事件模型。</p><p>用户定义复杂规则（Pattern），将其应用到流上，即可从流中提取满足 Pattern 的一个或多个简单事件构成的复杂事件。</p><p>（2）Flink CEP 定义的规则之间的连续策略</p><ul><li>严格连续: 期望所有匹配的事件严格的一个接一个出现，中间没有任何不匹配的事件。对应方法为 next()；</li><li>松散连续: 忽略匹配的事件之间的不匹配的事件。对应方法为followedBy()；</li><li>不确定的松散连续: 更进一步的松散连续，允许忽略掉一些匹配事件的附加匹配。对应方法为followedByAny()。</li></ul><p>3）实现步骤</p><p>（1）按照 mid 分组</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">不同访客的浏览记录互不干涉，跳出行为的分析应在相同 mid 下进行，首先按照 mid 分组。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）定义 CEP 匹配规则</p><p>①规则一
跳出行为对应的页面日志必然为某一会话的首页，因此第一个规则判定 last_page_id 是否为 null，是则返回 true，否则返回 false；</p><p>②规则二
规则二和规则一之间的策略采用严格连续，要求二者之间不能有其它事件。</p><p>判断 last_page_id 是否为 null，在数据完整有序的前提下，如果不是 null 说明本条日志的页面不是首页，可以断定它与规则一匹配到的事件同属于一个会话，返回 false；</p><p>如果是 null 则开启了一个新的会话，此时可以判定上一条页面日志所属会话为跳出会话，是我们需要的数据，返回 true；</p><p>③超时时间
超时时间内规则一被满足，未等到第二条数据则会被判定为超时数据。</p><p>（3）把匹配规则（Pattern）应用到流上</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">根据 Pattern 定义的规则对流中数据进行筛选。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）提取超时流
提取超时流，超时流中满足规则一的数据即为跳出明细数据，取出。</p><p>（5）合并主流和超时流，写入 Kafka 调出明细主题</p><p>（6）结果分析
理论上 Flink 可以通过设置水位线保证数据严格有序（超时时间足够大），在此前提下，同一 mid 的会话之间不会出现交叉。</p><p>若假设日志数据没有丢失，按照上述匹配规则，我们可以获得两类明细数据</p><p>①两个规则都被满足，满足规则一的数据为跳出明细数据。在会话之间不会交叉且日志数据没有丢失的前提下，此时获取的跳出明细数据没有误差；</p><p>②第一条数据满足规则二，超时时间内没有接收到第二条数据，水位线达到超时时间，第一条数据被发送到超时侧输出流。</p><p>即便在会话之间不交叉且日志数据不丢失的前提下，此时获取的跳出明细数据仍有误差，因为超时时间之后会话可能并未结束，如果此时访客在同一会话内跳转到了其它页面，就会导致会话页面数大于 1 的访问被判定为跳出行为，下游计算的跳出率偏大。</p><p>误差大小和设置的超时时间呈负相关关系，超时时间越大，理论上误差越小。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-2">图解<a class="hash-link" href="#图解-2" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242665-cbab2fa8-9aca-4e02-8d09-55111af38e1c.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-2">代码<a class="hash-link" href="#代码-2" title="标题的直接链接">​</a></h3><p>1）添加 CEP 相关依赖</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;artifactId&gt;flink-cep_${scala.version}&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    version&gt;${flink.version}&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/dependency&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.log;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSON;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.alibaba.fastjson.JSONObject;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.eventtime.WatermarkStrategy;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.cep.CEP;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.cep.PatternFlatSelectFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.cep.PatternFlatTimeoutFunction;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.cep.PatternStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.cep.pattern.Pattern;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.cep.pattern.conditions.SimpleCondition;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.DataStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.DataStreamSource;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.KeyedStream;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.util.Collector;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.util.OutputTag;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.List;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.Map;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DwdTrafficUserJumpDetail {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(30 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 kafka dwd_traffic_page_log 主题读取日志数据，封装为流</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String topic = "dwd_traffic_page_log";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String groupId = "dwd_traffic_user_jump_detail";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FlinkKafkaConsumer&lt;String&gt; kafkaConsumer = KafkaUtil.getKafkaConsumer(topic, groupId);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStreamSource&lt;String&gt; pageLog = env.addSource(kafkaConsumer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 测试数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        /*DataStream&lt;String&gt; kafkaDS = env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .fromElements(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "{\"common\":{\"mid\":\"101\"},\"page\":{\"page_id\":\"home\"},\"ts\":10000} ",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "{\"common\":{\"mid\":\"102\"},\"page\":{\"page_id\":\"home\"},\"ts\":12000}",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "{\"common\":{\"mid\":\"102\"},\"page\":{\"page_id\":\"good_list\",\"last_page_id\":" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "\"home\"},\"ts\":15000} ",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "{\"common\":{\"mid\":\"102\"},\"page\":{\"page_id\":\"good_list\",\"last_page_id\":" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "\"detail\"},\"ts\":30000} "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            );*/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 转换结构</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; mappedStream = pageLog.map(JSON::parseObject);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 设置水位线，用于用户跳出统计</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; withWatermarkStream = mappedStream.assignTimestampsAndWatermarks(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                WatermarkStrategy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .&lt;JSONObject&gt;forMonotonousTimestamps()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .withTimestampAssigner(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                new SerializableTimestampAssigner&lt;JSONObject&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    public long extractTimestamp(JSONObject jsonObj, long recordTimestamp) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        return jsonObj.getLong("ts");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 按照 mid 分组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        KeyedStream&lt;JSONObject, String&gt; keyedStream = withWatermarkStream.keyBy(jsonOjb -&gt; jsonOjb.getJSONObject("common").getString("mid"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 定义 CEP 匹配规则</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Pattern&lt;JSONObject, JSONObject&gt; pattern = Pattern.&lt;JSONObject&gt;begin("first").where(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new SimpleCondition&lt;JSONObject&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public boolean filter(JSONObject jsonObj) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        String lastPageId = jsonObj.getJSONObject("page").getString("last_page_id");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return lastPageId == null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ).next("second").where(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new SimpleCondition&lt;JSONObject&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public boolean filter(JSONObject jsonObj) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        String lastPageId = jsonObj.getJSONObject("page").getString("last_page_id");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return lastPageId == null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // 上文调用了同名 Time 类，此处需要使用全类名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ).within(org.apache.flink.streaming.api.windowing.time.Time.seconds(10L));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 把 Pattern 应用到流上</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        PatternStream&lt;JSONObject&gt; patternStream = CEP.pattern(keyedStream, pattern);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 9. 提取匹配上的事件以及超时事件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        OutputTag&lt;JSONObject&gt; timeoutTag = new OutputTag&lt;JSONObject&gt;("timeoutTag") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        SingleOutputStreamOperator&lt;JSONObject&gt; flatSelectStream = patternStream.flatSelect(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                timeoutTag,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new PatternFlatTimeoutFunction&lt;JSONObject, JSONObject&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public void timeout(Map&lt;String, List&lt;JSONObject&gt;&gt; pattern, long timeoutTimestamp, Collector&lt;JSONObject&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        JSONObject element = pattern.get("first").get(0); </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        out.collect(element);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new PatternFlatSelectFunction&lt;JSONObject, JSONObject&gt;() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    public void flatSelect(Map&lt;String, List&lt;JSONObject&gt;&gt; pattern, Collector&lt;JSONObject&gt; out) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        JSONObject element = pattern.get("first").get(0); </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        out.collect(element);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStream&lt;JSONObject&gt; timeOutDStream = flatSelectStream.getSideOutput(timeoutTag);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 11. 合并两个流并将数据写出到 Kafka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DataStream&lt;JSONObject&gt; unionDStream = flatSelectStream.union(timeOutDStream);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String targetTopic = "dwd_traffic_user_jump_detail";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        FlinkKafkaProducer&lt;String&gt; kafkaProducer = KafkaUtil.getKafkaProducer(targetTopic);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          unionDStream .map(JSONAware::toJSONString)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.addSink(kafkaProducer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交易域加购事务事实表">交易域加购事务事实表<a class="hash-link" href="#交易域加购事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-4">主要任务<a class="hash-link" href="#主要任务-4" title="标题的直接链接">​</a></h3><p>提取加购操作生成加购表，并将字典表中的相关维度退化到加购表中，写出到 Kafka 对应主题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-2">思路分析<a class="hash-link" href="#思路分析-2" title="标题的直接链接">​</a></h3><p>1）维度关联（维度退化）实现策略分析</p><p>本章业务事实表的构建全部使用 FlinkSQL 实现，字典表数据存储在 MySQL 的业务数据库中，要做维度退化，就要将这些数据从 MySQL 中提取出来封装成 FlinkSQL 表，Flink 的 JDBC SQL Connector 可以实现我们的需求。</p><p>2）知识储备
（1）JDBC SQL Connector
JDBC 连接器可以让 Flink 程序从拥有 JDBC 驱动的任意关系型数据库中读取数据或将数据写入数据库。</p><p>如果在 Flink SQL 表的 DDL 语句中定义了主键，则会以 upsert 模式将流中数据写入数据库，此时流中可以存在 UPDATE/DElETE（更新/删除）类型的数据。否则，会以 append 模式将数据写出到数据库，此时流中只能有 INSERT（插入）类型的数据。</p><p>DDL 用法实例如下。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CREATE TABLE MyUserTable (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id BIGINT,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name STRING,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  age INT,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  status BOOLEAN,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  PRIMARY KEY (id) NOT ENFORCED</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">) WITH (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   'connector' = 'jdbc',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   'url' = 'jdbc:mysql://localhost:3306/mydatabase',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   'table-name' = 'users'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）Lookup Cache</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">JDBC 连接器可以作为时态表关联中的查询数据源（又称维表）。目前，仅支持同步查询模式。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">默认情况下，查询缓存（Lookup Cache）未被启用，需要设置 lookup.cache.max-rows 和 lookup.cache.ttl 参数来启用此功能。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Lookup 缓存是用来提升有 JDBC 连接器参与的时态关联性能的。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  默认情况下，缓存未启用，所有的请求会被发送到外部数据库。</p><p>  当缓存启用时，每个进程（即 TaskManager）维护一份缓存。收到请求时，Flink 会先查询缓存，如果缓存未命中才会向外部数据库发送请求，并用查询结果更新缓存。</p><p>  如果缓存中的记录条数达到了 lookup.cache.max-rows 规定的最大行数时将清除存活时间最久的记录。</p><p>  如果缓存中的记录存活时间超过了 lookup.cache.ttl 规定的最大存活时间，同样会被清除。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">缓存中的记录未必是最新的，可以将 lookup.cache.ttl 设置为一个更小的值来获得时效性更好的数据，但这样做会增加发送到数据库的请求数量。所以需要在吞吐量和正确性之间寻求平衡。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（3）Lookup Join</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Lookup Join 通常在 Flink SQL 表和外部系统查询结果关联时使用。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  这种关联要求一张表（主表）有处理时间字段，而另一张表（维表）由 Lookup 连接器生成。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Lookup Join 做的是维度关联，而维度数据是有时效性的，那么我们就需要一个时间字段来对数据的版本进行标识。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  因此，Flink 要求我们提供处理时间用作版本字段。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">此处选择调用 PROCTIME() 函数获取系统时间，将其作为处理时间字段。该函数调用示例如下</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tableEnv.sqlQuery("select PROCTIME() proc_time")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              .execute()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              .print();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 结果</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+----+-------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| op |               proc_time |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+----+-------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| +I | 2022-04-09 15:45:50.752 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+----+-------------------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 row in set</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">（4）JDBC SQL Connector 参数解读</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>connector：连接器类型，此处为 jdbc</li><li>url：数据库 url</li><li>table-name：数据库中表名</li><li>lookup.cache.max-rows：lookup 缓存中的最大记录条数</li><li>lookup.cache.ttl：lookup 缓存中每条记录的最大存活时间</li><li>username：访问数据库的用户名</li><li>password：访问数据库的密码</li><li>driver：数据库驱动，注意：通常注册驱动可以省略，但是自动获取的驱动是 com.mysql.jdbc.Driver，Flink CDC 2.1.0 要求 mysql 驱动版本必须为 8 及以上，在 mysql-connector -8.x 中该驱动已过时，新的驱动为 com.mysql.cj.jdbc.Driver。省略该参数控制台打印的警告如下
Loading class <code>com.mysql.jdbc.Driver'. This is deprecated. The new driver class is </code>com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.<!-- -->  5）Kafka Connector 相关知识需要结合 left join 的实现过程讲解，本节并未涉及 left join。二者将在交易域订单预处理一并介绍。
</li></ul><p>3）执行步骤</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">（1）读取购物车表数据。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  （2）建立 Mysql-LookUp 字典表。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">（3）关联购物车表和字典表，维度退化。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-3">图解<a class="hash-link" href="#图解-3" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242725-1b8b6830-26c8-4a57-87cb-a3493a5f2196.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-3">代码<a class="hash-link" href="#代码-3" title="标题的直接链接">​</a></h3><p>1）补充 Flink SQL 相关依赖</p><p>要执行 Flink SQL 程序，补充相关依赖。JDBC SQL Connector 需要的依赖包含在 Flink CDC 需要的依赖中，不可重复引入。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;dependency&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;groupId&gt;org.apache.flink&lt;/groupId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;artifactId&gt;flink-table-planner-blink_${scala.version}&lt;/artifactId&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;version&gt;${flink.version}&lt;/version&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/dependency&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）在 KafkaUtil 中补充 getKafkaDDL 方法和 getUpsertKafkaDDL 方法</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Kafka-Source DDL 语句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param topic   数据源主题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param groupId 消费者组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return 拼接好的 Kafka 数据源 DDL 语句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static String getKafkaDDL(String topic, String groupId) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return " with ('connector' = 'kafka', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                " 'topic' = '" + topic + "'," +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                " 'properties.bootstrap.servers' = '" + BOOTSTRAP_SERVERS + "', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                " 'properties.group.id' = '" + groupId + "', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                " 'format' = 'json', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                " 'scan.startup.mode' = 'group-offsets')";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Kafka-Sink DDL 语句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param topic 输出到 Kafka 的目标主题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return 拼接好的 Kafka-Sink DDL 语句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static String getUpsertKafkaDDL(String topic) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return "WITH ( " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "  'connector' = 'upsert-kafka', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "  'topic' = '" + topic + "', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "  'properties.bootstrap.servers' = '" + BOOTSTRAP_SERVERS + "', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "  'key.format' = 'json', " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "  'value.format' = 'json' " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3）创建 MysqlUtil 工具类</p><p>封装 mysqlLookUpTableDDL() 方法和 getBaesDicLookUpDDL() 方法，用于将 MySQL 数据库中的字典表读取为 Flink LookUp 表，以便维度退化。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.util;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class MysqlUtil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static String getBaseDicLookUpDDL() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return "create table `base_dic`(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`dic_code` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`dic_name` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`parent_code` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`create_time` timestamp,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`operate_time` timestamp,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(`dic_code`) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + MysqlUtil.mysqlLookUpTableDDL("base_dic");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static String mysqlLookUpTableDDL(String tableName) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String ddl = "WITH (\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'connector' = 'jdbc',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'url' = 'jdbc:mysql://hadoop102:3306/gmall',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'table-name' = '" + tableName + "',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'lookup.cache.max-rows' = '10',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'lookup.cache.ttl' = '1 hour',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'username' = 'root',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'password' = '000000',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "'driver' = 'com.mysql.cj.jdbc.Driver'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return ddl;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.MysqlUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTradeCartAdd {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 设定 Table 中的时区为本地时区</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.getConfig().setLocalTimeZone(ZoneId.of("GMT+8"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage("hdfs://hadoop102:8020/ck");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create table topic_db(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`proc_time` as PROCTIME()\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_trade_cart_add"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取购物车表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table cartAdd = tableEnv.sqlQuery("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_id'] sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['source_id'] source_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['source_type'] source_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "if(`type` = 'insert',\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_num'],cast((cast(data['sku_num'] as int) - cast(`old`['sku_num'] as int)) as string)) sku_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "proc_time\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from `topic_db` \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'cart_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and (`type` = 'insert'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "or (`type` = 'update' \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `old`['sku_num'] is not null \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and cast(data['sku_num'] as int) &gt; cast(`old`['sku_num'] as int)))");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("cart_add", cartAdd);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 建立 MySQL-LookUp 字典表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql(MysqlUtil.getBaseDicLookUpDDL());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 关联两张表获得加购明细表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table resultTable = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "cadd.id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "dic_name source_type_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from cart_add cadd\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join base_dic for system_time as of cadd.proc_time as dic\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on cadd.source_type=dic.dic_code");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("result_table", resultTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 建立 Upsert-Kafka dwd_trade_cart_add 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create table dwd_trade_cart_add(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_trade_cart_add"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 将关联结果写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_trade_cart_add select * from result_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交易域订单预处理表">交易域订单预处理表<a class="hash-link" href="#交易域订单预处理表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-5">主要任务<a class="hash-link" href="#主要任务-5" title="标题的直接链接">​</a></h3><p>经过分析，订单明细表和订单表的数据来源、表结构都相同，差别只在业务过程和过滤条件，为了减少重复计算，将两张表公共的关联过程提取出来，形成订单预处理表。</p><p>关联订单明细表、订单表、订单明细活动关联表、订单明细优惠券关联表四张事实业务表和字典表（维度业务表）形成订单预处理表，写入 Kafka 对应主题。</p><p>本节形成的预处理表中要保留订单表的 type 和 old 字段，用于过滤订单明细数据和取消订单明细数据。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-3">思路分析<a class="hash-link" href="#思路分析-3" title="标题的直接链接">​</a></h3><p>1）知识储备</p><p>（1）left join 实现过程</p><p>假设 A 表作为主表与 B 表做等值左外联。当 A 表数据进入算子，而 B 表数据未至时会先生成一条 B 表字段均为 null 的关联数据ab1，其标记为 +I。</p><p>其后，B 表数据到来，会先将之前的数据撤回，即生成一条与 ab1 内容相同，但标记为 -D 的数据，再生成一条关联后的数据，标记为 +I。这样生成的动态表对应的流称之为回撤流。</p><p>（2）Kafka SQL Connector</p><p>Kafka SQL Connector 分为 Kafka SQL Connector 和 Upsert Kafka SQL Connector</p><p>① 功能
Upsert Kafka Connector支持以 upsert 方式从 Kafka topic 中读写数据
Kafka Connector支持从 Kafka topic 中读写数据</p><p>② 区别</p><p>a）建表语句的主键</p><p>i）Kafka Connector 要求表不能有主键，如果设置了主键，报错信息如下</p><p>Caused by: org.apache.flink.table.api.ValidationException: The Kafka table 'default_catalog.default_database.normal_sink_topic' with 'json' format doesn't support defining PRIMARY KEY constraint on the table, because it can't guarantee the semantic of primary key.
ii）</p><p>而 Upsert Kafka Connector 要求表必须有主键，如果没有设置主键，报错信息如下</p><p>Caused by: org.apache.flink.table.api.ValidationException: 'upsert-kafka' tables require to define a PRIMARY KEY constraint. The PRIMARY KEY specifies which columns should be read from or write to the Kafka message key. The PRIMARY KEY also defines records in the 'upsert-kafka' table should update or delete on which keys.
iii）</p><p>语法： primary key(id) not enforced </p><p>注意：not enforced 表示不对来往数据做约束校验，Flink 并不是数据的主人，因此只支持 not enforced 模式</p><p>如果没有 not enforced，报错信息如下</p><p>Exception in thread "main" org.apache.flink.table.api.ValidationException: Flink doesn't support ENFORCED mode for PRIMARY KEY constaint. ENFORCED/NOT ENFORCED  controls if the constraint checks are performed on the incoming/outgoing data. Flink does not own the data therefore the only supported mode is the NOT ENFORCED mode</p><p>b）对表中数据操作类型的要求</p><p>i）Kafka Connector 不能消费带有 Upsert/Delete 操作类型数据的表，如 left join 生成的动态表。如果对这类表进行消费，报错信息如下</p><p>Exception in thread "main" org.apache.flink.table.api.TableException: Table sink 'default_catalog.default_database.normal_sink_topic' doesn't support consuming update and delete changes which is produced by node TableSourceScan(table=[<!-- -->[default_catalog, default_database, Unregistered_DataStream_Source_9]<!-- -->], fields=<!-- -->[l_id, tag_left, tag_right]<!-- -->)
ii）</p><p>Upsert Kafka Connector 将 INSERT/UPDATE_AFTER 数据作为正常的 Kafka 消息写入，并将 DELETE 数据以 value 为空的 Kafka 消息写入（表示对应 key 的消息被删除）。</p><p>Flink 将根据主键列的值对数据进行分区，因此同一主键的更新/删除消息将落在同一分区，从而保证同一主键的消息有序。</p><p>③ left join 结合 Upsert Kafka Connector 使用范例</p><p>说明：Kafka 并行度为 4</p><p>a）表结构</p><p>left表
id    tag
A    left
B    left
C    left </p><p>right 表
id    tag
A    right
B    right
C    right</p><p>b）查询语句</p><p>select
l.id l_id,
l.tag l_tag,
r.tag r_tag
from left l
left join
right r
on l.id = r.id</p><p>c）关联结果写入到 Upsert Kafka 表，消费 Kafka 对应主题数据结果展示</p><p>{"l_id":"A","tag_left":"left","tag_right":null}
null
{"l_id":"A","tag_left":"left","tag_right":"right"}
{"l_id":"C","tag_left":"left","tag_right":null}
null
{"l_id":"C","tag_left":"left","tag_right":"right"}
{"l_id":"B","tag_left":"left","tag_right":null}
null
{"l_id":"B","tag_left":"left","tag_right":"right"}</p><p>④ 参数解读
本节需要用到 Kafka 连接器的明细表数据来源于 topic_db 主题，于 Kafka 而言，该主题的数据的操作类型均为 INSERT，所以读取数据使用 Kafka Connector 即可。而由于 left join 的存在，流中存在修改数据，所以写出数据使用 Upsert Kafka Connector。</p><p>a）Kafka Connector 参数</p><ul><li>connector：指定使用的连接器，对于 Kafka，只用 'kafka'</li><li>topic：主题</li><li>properties.bootstrap.servers：以逗号分隔的 Kafka broker 列表。注意：可以通过 properties.<em> 的方式指定配置项，</em>的位置用 Kafka 官方规定的配置项的 key 替代。并不是所有的配置都可以通过这种方式配置，因为 Flink 可能会将它们覆盖，如：'key.deserializer' 和 'value.deserializer'</li><li>properties.group.id：消费者组 ID</li><li>format：指定 Kafka 消息中 value 部分的序列化的反序列化方式，'format' 和 'value.format' 二者必有其一</li><li>scan.startup.mode：Kafka 消费者启动模式，有四种取值</li><li>'earliest-offset'：从偏移量最早的位置开始读取数据</li><li>'latest-offset'：从偏移量最新的位置开始读取数据</li><li>'group-offsets'：从 Zookeeper/Kafka broker 中维护的消费者组偏移量开始读取数据</li><li>'timestamp'：从用户为每个分区提供的时间戳开始读取数据</li><li>'specific-offsets'：从用户为每个分区提供的偏移量开始读取数据</li></ul><p>默认值为 group-offsets。要注意：latest-offset 与 Kafka 官方提供的配置项 latest 不同， Flink 会将偏移量置为最新位置，覆盖掉 Zookeeper 或 Kafka 中维护的偏移量。</p><p>与官方提供的 latest 相对应的是此处的 group-offsets。</p><p>b）Upsert Kafka Connector 参数</p><ul><li>connector：指定使用的连接器，对于 Upsert Kafka，使用 'upsert-kafka'</li><li>topic：主题</li><li>properties.bootstrap.servers：以逗号分隔的 Kafka broker 列表</li><li>key.format：key 的序列化和反序列化格式</li><li>value.format：value 的序列化和反序列化格式</li></ul><p>2）执行步骤
预处理表与订单明细事务事实表的区别只在于前者不会按照订单数据的 type 和 old 字段做过滤，且在表中增加了这两个字段。二者的粒度、聚合逻辑都相同，因此按照订单明细表的思路对预处理表进行分析即可。</p><p>（1）从 Kafka topic_db 主题读取业务数据；
这一步要调用 PROCTIME() 函数获取系统时间作为与字典表做 Lookup Join 的处理时间字段。</p><p>（2）筛选订单明细表数据；
应尽可能保证事实表的粒度为最细粒度，在下单业务过程中，最细粒度的事件为一个订单的一个 SKU 的下单操作，订单明细表的粒度与最细粒度相同，将其作为主表。</p><p>（3）筛选订单表数据；
通过该表获取 user_id 和 province_id。保留 type 字段和 old 字段用于过滤订单明细数据和取消订单明细数据。</p><p>（4）筛选订单明细活动关联表数据；
通过该表获取活动 id 和活动规则 id。</p><p>（5）筛选订单明细优惠券关联表数据；
通过该表获取优惠券 id。</p><p>（6）建立 MySQL-Lookup 字典表；
通过字典表获取订单来源类型名称。</p><p>（7）关联上述五张表获得订单宽表，写入 Kafka 主题
主表与其余四张表的关联都为了获取维度信息，使用左外连接即可。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-4">图解<a class="hash-link" href="#图解-4" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242778-9c825356-7b33-4916-a436-fdc6475d9f1e.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-4">代码<a class="hash-link" href="#代码-4" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.MysqlUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTradeOrderPreProcess {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 启用状态后端</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                RestartStrategies.failureRateRestart(3, Time.days(1L), Time.minutes(3L))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage("hdfs://hadoop102:8020/ck");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.getConfig().setLocalTimeZone(ZoneId.of("GMT+8"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table topic_db(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` String,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` String,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` String,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;String, String&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;String, String&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`proc_time` as PROCTIME(),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_trade_order_pre_process"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取订单明细表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderDetail = tableEnv.sqlQuery("select \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_id'] order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_id'] sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_name'] sku_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['create_time'] create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['source_id'] source_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['source_type'] source_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_num'] sku_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "cast(cast(data['sku_num'] as decimal(16,2)) * " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "cast(data['order_price'] as decimal(16,2)) as String) split_original_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['split_total_amount'] split_total_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['split_activity_amount'] split_activity_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['split_coupon_amount'] split_coupon_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts od_ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "proc_time\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from `topic_db` where `table` = 'order_detail' " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_detail", orderDetail);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 读取订单表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderInfo = tableEnv.sqlQuery("select \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['province_id'] province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['operate_time'] operate_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_status'] order_status,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type`,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old`,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts oi_ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from `topic_db`\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'order_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and (`type` = 'insert' or `type` = 'update')");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_info", orderInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 读取订单明细活动关联表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderDetailActivity = tableEnv.sqlQuery("select \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_detail_id'] order_detail_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['activity_id'] activity_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['activity_rule_id'] activity_rule_id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from `topic_db`\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'order_detail_activity'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_detail_activity", orderDetailActivity);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 读取订单明细优惠券关联表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderDetailCoupon = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_detail_id'] order_detail_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['coupon_id'] coupon_id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from `topic_db`\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'order_detail_coupon'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_detail_coupon", orderDetailCoupon);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 建立 MySQL-LookUp 字典表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql(MysqlUtil.getBaseDicLookUpDDL());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 9. 关联五张表获得订单明细表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table resultTable = tableEnv.sqlQuery("select \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.order_status,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.sku_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "act.activity_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "act.activity_rule_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "cou.coupon_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(od.create_time, 'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(oi.operate_time, 'yyyy-MM-dd') operate_date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.operate_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.source_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.source_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "dic.dic_name source_type_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.sku_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_original_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_activity_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_coupon_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_total_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.`type`,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.`old`,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.od_ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.oi_ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "current_row_timestamp() row_op_ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from order_detail od \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "join order_info oi\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on od.order_id = oi.id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join order_detail_activity act\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on od.id = act.order_detail_id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join order_detail_coupon cou\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on od.id = cou.order_detail_id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join `base_dic` for system_time as of od.proc_time as dic\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on od.source_type = dic.dic_code");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("result_table", resultTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 10. 建立 Upsert-Kafka dwd_trade_order_pre_process 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create table dwd_trade_order_pre_process(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_status string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;string,string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od_ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi_ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_trade_order_pre_process"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 11. 将关联结果写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_trade_order_pre_process \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "select * from result_table")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .print();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.execute();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交易域下单事务事实表">交易域下单事务事实表<a class="hash-link" href="#交易域下单事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-6">主要任务<a class="hash-link" href="#主要任务-6" title="标题的直接链接">​</a></h3><p>从 Kafka 读取订单预处理表数据，筛选订单明细数据，写入 Kafka 对应主题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-4">思路分析<a class="hash-link" href="#思路分析-4" title="标题的直接链接">​</a></h3><p>实现步骤</p><p>（1）从 Kafka dwd_trade_order_pre_process 主题读取订单预处理数据；</p><p>（2）筛选订单明细数据：新增数据，即订单表操作类型为 insert 的数据即为订单明细数据；</p><p>（3）写入 Kafka 订单明细主题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-5">图解<a class="hash-link" href="#图解-5" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242807-36dcfafa-0ea0-4ee0-b3c9-e076a5b343a0.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-5">代码<a class="hash-link" href="#代码-5" title="标题的直接链接">​</a></h3><p>主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTradeOrderDetail {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 启用状态后端</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                RestartStrategies.failureRateRestart(3, Time.days(1L), Time.minutes(3L))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage("hdfs://hadoop102:8020/ck");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.getConfig().setLocalTimeZone(ZoneId.of("GMT+8"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 读取 Kafka dwd_trade_order_pre_process 主题数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create table dwd_trade_order_pre_process(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_status string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;string,string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od_ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi_ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3)\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "dwd_trade_order_pre_process", "dwd_trade_order_detail"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 过滤下单数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table filteredTable = tableEnv.sqlQuery("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "select " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type source_type_code,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od_ts ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from dwd_trade_order_pre_process " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `type`='insert'");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("filtered_table", filteredTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 创建 Kafka 下单明细表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create table dwd_trade_order_detail(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_trade_order_detail"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 将数据写出到 Kafka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("insert into dwd_trade_order_detail select * from filtered_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交易域取消订单事务事实表">交易域取消订单事务事实表<a class="hash-link" href="#交易域取消订单事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-7">主要任务<a class="hash-link" href="#主要任务-7" title="标题的直接链接">​</a></h3><p>从 Kafka 读取订单预处理表数据，筛选取消订单明细数据，写入 Kafka 对应主题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-5">思路分析<a class="hash-link" href="#思路分析-5" title="标题的直接链接">​</a></h3><p>实现步骤</p><p>（1）从 Kafka dwd_trade_order_pre_process 主题读取订单预处理数据；</p><p>（2）筛选取消订单明细数据：保留修改了 order_status 字段且修改后该字段值为 "1003" 的数据;</p><p>（3）写入 Kafka 取消订单主题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-6">图解<a class="hash-link" href="#图解-6" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242824-aeb7b7b9-afb7-407e-b5ab-3bd377c577e1.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-6">代码<a class="hash-link" href="#代码-6" title="标题的直接链接">​</a></h3><p>主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTradeCancelDetail  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 启用状态后端</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                RestartStrategies.failureRateRestart(3, Time.days(1L), Time.minutes(3L))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage("hdfs://hadoop102:8020/ck");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.getConfig().setLocalTimeZone(ZoneId.of("GMT+8"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 读取 Kafka dwd_trade_order_pre_process 主题数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create table dwd_trade_order_pre_process(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_status string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;string,string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od_ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi_ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3)\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "dwd_trade_order_pre_process", "dwd_trade_cancel_detail"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 筛选取消订单明细数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table filteredTable = tableEnv.sqlQuery("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_date_id date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "operate_time cancel_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type source_type_code,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi_ts ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from dwd_trade_order_pre_process\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `type` = 'update'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `old`['order_status'] is not null\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and order_status = '1003'");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("filtered_table", filteredTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 建立 Upsert-Kafka dwd_trade_cancel_detail 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_trade_cancel_detail(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "cancel_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_trade_cancel_detail"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 将数据写出到 Kafka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_trade_cancel_detail select * from filtered_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交易域支付成功事务事实表">交易域支付成功事务事实表<a class="hash-link" href="#交易域支付成功事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-8">主要任务<a class="hash-link" href="#主要任务-8" title="标题的直接链接">​</a></h3><p>从 Kafka topic_db主题筛选支付成功数据、从dwd_trade_order_detail主题中读取订单事实数据、MySQL-LookUp字典表，关联三张表形成支付成功宽表，写入 Kafka 支付成功主题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-6">思路分析<a class="hash-link" href="#思路分析-6" title="标题的直接链接">​</a></h3><p>1）获取订单明细数据</p><p>用户必然要先下单才有可能支付成功，因此支付成功明细数据集必然是订单明细数据集的子集。</p><p>2）筛选支付表数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">获取支付类型、回调时间（支付成功时间）、支付成功时间戳。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">生产环境下，用户支付后，业务数据库的支付表会插入一条数据，此时的回调时间和回调内容为空。通常底层会调用第三方支付接口，接口会返回回调信息，如果支付成功则回调信息不为空，此时会更新支付表，补全回调时间和回调内容字段的值，并将 payment_status 字段的值修改为支付成功对应的状态码（本项目为 1602）。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  支付成功之后，支付表数据不会发生变化。因此，只要操作类型为 update 且状态码为 1602 即为支付成功数据。</p><p>由上述分析可知，支付成功对应的业务数据库变化日志应满足两个条件：</p><p>（1）payment_status 字段的值为 1602；</p><p>（2）操作类型为 update。</p><p>注：1602 在字典表中并没有对应记录，且 payment_info 中 payment_status 字段的值均为 null，这是模拟数据的问题，并不影响业务逻辑，无须深究。</p><p>为了看到效果，注释对条件（1）的判断。</p><p>此外，模拟的 payment_info 表数据没有上述提到的变化，只在支付成功时插入一条数据，此时的 callback_time 字段值已经不为 null，即该表中的所有数据均为支付成功数据。</p><p>为了看到效果，注释对条件（2）的判断。</p><p>本程序为了去除重复数据，在关联后的宽表中补充了处理时间字段，DWS 层将进行详细介绍。</p><p>支付成功表是由支付成功数据与订单明细做内连接，而后与字典表做 LookUp Join 得来。</p><p>这个过程中不会出现回撤数据，关联后表的重复数据来源于订单明细表，所以应按照订单明细表的处理时间字段去重，故支付成功明细表的 row_op_ts 取自订单明细表。</p><p>3）构建 MySQL-LookUp 字典表</p><p>4）关联上述三张表形成支付成功宽表，写入 Kafka 支付成功主题</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-7">图解<a class="hash-link" href="#图解-7" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242855-0d3f0e7c-68d8-4445-ba81-d75ea6da16a1.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-7">代码<a class="hash-link" href="#代码-7" title="标题的直接链接">​</a></h3><p>主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.MysqlUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTradePayDetailSuc {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 基本环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.getConfig().setLocalTimeZone(ZoneId.of("GMT+8"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 读取 Kafka dwd_trade_order_detail 主题数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create table dwd_trade_order_detail(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_total_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3)\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("dwd_trade_order_detail", "dwd_trade_pay_detail_suc"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table topic_db(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` String,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` String,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` String,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;String, String&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;String, String&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`proc_time` as PROCTIME(),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_trade_pay_detail_suc"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 筛选支付成功数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table paymentInfo = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_id'] order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['payment_type'] payment_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['callback_time'] callback_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`proc_time`,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'payment_info'\n"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                "and `type` = 'update'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                "and data['payment_status']='1602'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("payment_info", paymentInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 建立 MySQL-LookUp 字典表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql(MysqlUtil.getBaseDicLookUpDDL());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 关联 3 张表获得支付成功宽表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table resultTable = tableEnv.sqlQuery("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.id order_detail_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.sku_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.activity_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.activity_rule_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.coupon_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "pi.payment_type payment_type_code,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "dic.dic_name payment_type_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "pi.callback_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.source_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.source_type_code,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.source_type_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.sku_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_original_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_activity_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_coupon_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.split_total_amount split_payment_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "pi.ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "od.row_op_ts row_op_ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from payment_info pi\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "join dwd_trade_order_detail od\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on pi.order_id = od.order_id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join `base_dic` for system_time as of pi.proc_time as dic\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on pi.payment_type = dic.dic_code");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("result_table", resultTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 创建 Kafka dwd_trade_pay_detail 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_trade_pay_detail_suc(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_detail_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "activity_rule_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "payment_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "payment_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "callback_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "source_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_original_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_activity_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_coupon_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "split_payment_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(order_detail_id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_trade_pay_detail_suc"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 9. 将关联结果写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_trade_pay_detail_suc select * from result_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交易域退单事务事实表">交易域退单事务事实表<a class="hash-link" href="#交易域退单事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-9">主要任务<a class="hash-link" href="#主要任务-9" title="标题的直接链接">​</a></h3><p>从 Kafka 读取业务数据，筛选退单表数据，筛选满足条件的订单表数据，建立 MySQL-Lookup 字典表，关联三张表获得退单明细宽表。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-7">思路分析<a class="hash-link" href="#思路分析-7" title="标题的直接链接">​</a></h3><p>1）筛选退单表数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">退单业务过程最细粒度的操作为一个订单中一个 SKU 的退单操作，退单表粒度与最细粒度相同，将其作为主表。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）筛选订单表数据并转化为流</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">获取 province_id。退单操作发生时，订单表的 order_status 字段值会由1002（已支付）更新为 1005（退款中）。订单表中的数据要满足三个条件：</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（1）order_status 为 1005（退款中）；</p><p>（2）操作类型为 update；</p><p>（3）更新的字段为 order_status。</p><p>该字段发生变化时，变更数据中 old 字段下 order_status 的值不为 null（为 1002）。</p><p>3）建立 MySQL-Lookup 字典表</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">获取退款类型名称和退款原因类型名称。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）关联这几张表获得退单明细宽表，写入 Kafka 退单明细主题</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">主表中的数据都与退单业务相关，因此所有关联均用左外联即可。第二步是否对订单表数据筛选并不影响查询结果，提前对数据进行过滤是为了减少数据量，减少性能消耗。下文同理，不再赘述。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-8">图解<a class="hash-link" href="#图解-8" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242887-d9848372-5e23-4e3e-9737-472fa67d50c4.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-8">代码<a class="hash-link" href="#代码-8" title="标题的直接链接">​</a></h3><p>主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.MysqlUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTradeOrderRefund {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取 topic_db 数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table topic_db(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`proc_time` as PROCTIME(),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_trade_order_refund"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取退单表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderRefundInfo = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_id'] order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_id'] sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['refund_type'] refund_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['refund_num'] refund_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['refund_amount'] refund_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['refund_reason_type'] refund_reason_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['refund_reason_txt'] refund_reason_txt,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['create_time'] create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "proc_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'order_refund_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_refund_info", orderRefundInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 读取订单表数据，筛选退单数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderInfoRefund = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['province_id'] province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old`\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'order_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'update'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and data['order_status']='1005'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `old`['order_status'] is not null");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_info_refund", orderInfoRefund);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 建立 MySQL-LookUp 字典表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql(MysqlUtil.getBaseDicLookUpDDL());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 关联三张表获得退单宽表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table resultTable = tableEnv.sqlQuery("select \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(ri.create_time,'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.refund_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "type_dic.dic_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.refund_reason_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "reason_dic.dic_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.refund_reason_txt,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.refund_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.refund_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "current_row_timestamp() row_op_ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from order_refund_info ri\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_info_refund oi\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on ri.order_id = oi.id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "base_dic for system_time as of ri.proc_time as type_dic\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on ri.refund_type = type_dic.dic_code\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "base_dic for system_time as of ri.proc_time as reason_dic\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on ri.refund_reason_type=reason_dic.dic_code");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("result_table", resultTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 建立 Upsert-Kafka dwd_trade_order_refund 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_trade_order_refund(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_reason_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_reason_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_reason_txt string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_trade_order_refund"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 9. 将关联结果写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_trade_order_refund select * from result_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交易域退款成功事务事实表">交易域退款成功事务事实表<a class="hash-link" href="#交易域退款成功事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-10">主要任务<a class="hash-link" href="#主要任务-10" title="标题的直接链接">​</a></h3><p>1）从退款表中提取退款成功数据，并将字典表的 dic_name 维度退化到表中</p><p>2）从订单表中提取退款成功订单数据</p><p>3）从退单表中提取退款成功的明细数据</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-8">思路分析<a class="hash-link" href="#思路分析-8" title="标题的直接链接">​</a></h3><p>1）建立 MySQL-Lookup 字典表</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">获取支付类型名称。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）读取退款表数据，筛选退款成功数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">退款表 refund_payment 的粒度为一个订单中一个 SKU 的退款记录，与退款业务过程的最细粒度相同，将其作为主表。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">退款操作发生时，业务数据库的退款表会先插入一条数据，此时 refund_status 状态码应为 0701（商家审核中），callback_time 为 null，而后经历一系列业务过程：商家审核、买家发货、退单完成。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  退单完成时会将状态码由 0701 更新为 0705（退单完成），同时将 callback_time 更新为退款支付成功的回调时间。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">由上述分析可知，退款成功记录应满足三个条件：</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  （1）数据操作类型为 update；</p><p>  （2）refund_status 为 0705；</p><p>  （3）修改的字段包含 refund_status。</p><p>注：本项目生成模拟数据的字典表中并没有与退单状态相关的状态码记录，且退款表的数据并没有上述分析提到的完整业务流程中多业务过程的变化，仅在退款操作完成时插入一条数据，此时的 refund_status 为 0702，callback_time 不为 null，因此要想观测到查询效果，查询条件应做修改：</p><p>（1）注释对操作类型的判断；</p><p>（2）where 子句中 refund_status 的值应为 0702；</p><p>（3）该条件的校验是通过判断 old<!-- -->['refund_status']<!-- --> 的值是否为 null 来实现的，模拟数据没有修改，old<!-- -->['refund_status']<!-- --> 必为 null，需要注释该条件。</p><p>模拟数据生成的问题并不影响我们对业务逻辑的分析，无须在意。</p><p>3）读取订单表数据，过滤退款成功订单数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">用于获取 user_id 和 province_id。退款操作完后时，订单表的 order_status 字段会更新为 1006（退款完成），因此退单成功对应的订单数据应满足三个条件：</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（1）操作类型为 update；</p><p>（2）order_status 为 1006；（3）修改了 order_status 字段。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">order_status 值更改为 1006 之后对应的订单表数据就不会再发生变化，所以只要满足前两个条件，第三个条件必定满足。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  本项目 order_info 表并没有退款成功时应有的变化，没有 order_status 取值为 1006 的记录。</p><p>  为了看到效果注释掉所有过滤条件。order_info 表的关联是为了获取 user_id 和 province_id，没有过滤条件会把 order_info 表的所有变更操作保留，可能会导致数据重复，但下游会进行去重，不会影响最终结果。</p><p>4）筛选退款成功的退单明细数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">用于获取退单件数 refund_num。退单成功时 order_refund_info 表中的 refund_status 字段会修改为0705（退款成功状态码）。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  因此筛选条件有三：</p><p>  （1）操作类型为 update；</p><p>  （2）refund_status 为 0705；</p><p>  （3）修改了 refund_status 字段。筛选方式同上。</p><p>注：本项目模拟数据的字典表并未维护退单相关的状态码（暂未发布的数据生成文件补充了相关状态码，退款成功状态码为 0705）。</p><p>当前业务数据库中 order_refund_info 表所有记录的 refund_status 字段值均为 null。</p><p>此外，order_refund_info 表只有 insert 操作，即模拟数据的业务逻辑是退单操作和退款完成同时发生。</p><p>因此要想看到效果，需要对过滤条件做特殊处理：</p><p>（1）注释对 refund_status 的判断；</p><p>（2）注释对操作类型的判断；</p><p>（3）注释对修改字段的判断。</p><p>5）关联四张表并写出到 Kafka 退款成功主题</p><p>主表数据筛选完成后已经获取了全部、准确的退款成功数据，与另外两张表的关联只是为了补充字段，因此使用 left join 即可。之所以提前过滤是为了减小数据量，提升计算效率。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-9">图解<a class="hash-link" href="#图解-9" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242919-007d7af2-34bf-4be2-b9c8-a11f87814317.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-9">代码<a class="hash-link" href="#代码-9" title="标题的直接链接">​</a></h3><p>主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.MysqlUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdTradeRefundPaySuc {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取 topic_db 数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table topic_db(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`proc_time` as PROCTIME(),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_trade_refund_pay_suc"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 建立 MySQL-LookUp 字典表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql(MysqlUtil.getBaseDicLookUpDDL());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 读取退款表数据，并筛选退款成功数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table refundPayment = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['order_id'] order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['sku_id'] sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['payment_type'] payment_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['callback_time'] callback_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['total_amount'] total_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "proc_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "where `table` = 'refund_payment'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                "and `type` = 'update'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "and data['refund_status'] = '0702'\n"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                        +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                "and `old`['refund_status'] is not null"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("refund_payment", refundPayment);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 读取订单表数据并过滤退款成功订单数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderInfo = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['province_id'] province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old`\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'order_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'update'\n"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                "and data['order_status']='1006'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                "and `old`['order_status'] is not null"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_info", orderInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 读取退单表数据并过滤退款成功数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table orderRefundInfo = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['order_id'] order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['sku_id'] sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "data['refund_num'] refund_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "`old`\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "where `table` = 'order_refund_info'\n"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                        +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                        "and `type` = 'update'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                        "and data['refund_status']='0705'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//                        "and `old`['refund_status'] is not null"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // order_refund_info 表的 refund_status 字段值均为 null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("order_refund_info", orderRefundInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 关联四张表获得退款成功表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table resultTable = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "rp.id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "rp.order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "rp.sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "oi.province_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "rp.payment_type,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "dic.dic_name payment_type_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(rp.callback_time,'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "rp.callback_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ri.refund_num,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "rp.total_amount,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "rp.ts,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "current_row_timestamp() row_op_ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from refund_payment rp \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_info oi\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on rp.order_id = oi.id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_refund_info ri\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on rp.order_id = ri.order_id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and rp.sku_id = ri.sku_id\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "base_dic for system_time as of rp.proc_time as dic\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on rp.payment_type = dic.dic_code\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("result_table", resultTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 9. 创建 Upsert-Kafka dwd_trade_refund_pay_suc 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_trade_refund_pay_suc(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "province_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "payment_type_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "payment_type_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "callback_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_num string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "refund_amount string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "row_op_ts timestamp_ltz(3),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_trade_refund_pay_suc"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 10. 将关联结果写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_trade_refund_pay_suc select * from result_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具域优惠券领取事务事实表">工具域优惠券领取事务事实表<a class="hash-link" href="#工具域优惠券领取事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-11">主要任务<a class="hash-link" href="#主要任务-11" title="标题的直接链接">​</a></h3><p>读取优惠券领用数据，写入 Kafka 优惠券领用主题</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-9">思路分析<a class="hash-link" href="#思路分析-9" title="标题的直接链接">​</a></h3><p>用户领取优惠券后，业务数据库的优惠券领用表会新增一条数据，因此操作类型为 insert 的数据即为优惠券领取数据。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-10">图解<a class="hash-link" href="#图解-10" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242954-7fe50475-454e-40a1-a871-d41039e98830.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-10">代码<a class="hash-link" href="#代码-10" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdToolCouponGet {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table `topic_db`(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_tool_coupon_get"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取优惠券领用数据，封装为表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table resultTable = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'],\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['coupon_id'],\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'],\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(data['get_time'],'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['get_time'],\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'coupon_use'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("result_table", resultTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 建立 Upsert-Kafka dwd_tool_coupon_get 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_tool_coupon_get (\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "get_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_tool_coupon_get"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 将数据写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_tool_coupon_get select * from result_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具域优惠券使用下单事务事实表">工具域优惠券使用（下单）事务事实表<a class="hash-link" href="#工具域优惠券使用下单事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-12">主要任务<a class="hash-link" href="#主要任务-12" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">读取优惠券领用表数据，筛选优惠券下单数据，写入 Kafka 优惠券下单主题。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-10">思路分析<a class="hash-link" href="#思路分析-10" title="标题的直接链接">​</a></h3><p>1）知识储备
用户使用优惠券下单时，优惠券领用表的 using_time 字段会更新为下单时间，因此优惠券下单数据应满足两个条件：</p><p>① 操作类型为 update；</p><p>② 修改了 using_time 字段。</p><p>① 条件一的判断非常简单，只须在 SQL 语句中补充 where 条件；</p><p>② 条件二需要判断 Maxwell 封装的 JSON 字符串中 <code>old</code> 字段下是否有 using_time 字段，<code>old</code> 字段的数据类型是 Map，它的 key 是发生变更的字段名称，value 是字段旧值。</p><p>在离线数仓中我们将 Maxwell 封装的 JSON 字符串定义为 HIVE 表中的结构体字段，用 map_keys() 函数获取了所有的 key，该函数的返回值是个 array（数组），数组中保存了所有发生变更的字段名称，最后用 array_contains() 方法判断该数组中是否包含 order_status 字段即可完成条件二的判断。</p><p>而 Flink SQL 并没有提供类似的 API，我们无法获取发生变更的字段名称。</p><p>所以需要换一种思路，此处将 Flink SQL 动态表转化为流，通过流处理筛选满足条件二的数据，再将流转换为动态表。此处涉及流和动态表的转化，我们有必要先了解相关 API。</p><p>（1）环境准备</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">业务场景：left、right 两张表做 left join，然后将获取的 Table 类型变量（动态表）转换为流，再将流转换为 Table 变量。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">① left、right 表如下</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>left表</p><p>id    tag
A    left
B    left
C    left </p><p>right 表</p><p>id    tag
A    right
B    right
C    right</p><p>② SQL 如下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Table joinTable = tableEnv.sqlQuery(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "select \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "l.id l_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "l.tag l_tag,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "r.tag r_tag\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "from left l \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "left join \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "right r \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "on l.id = r.id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>③ 实体类 JoinBean 如下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class JoinBean {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String l_id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String tag_left;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String tag_right;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）Flink SQL 的 Table 类型变量转化为 DataStream 有四类 API</p><p>① toAppendStream</p><p>② toDataStream</p><p>③ toChangelogStream</p><p>④ toRetractStream</p><p>其中，Table 变量中包含更新和删除数据时调用 ① 和 ② 转化为流会报错，报错信息如下</p><p>// toAppendStream 报错信息</p><p>toAppendStream doesn't support consuming update and delete changes which is produced by node Join(joinType=<!-- -->[LeftOuterJoin]<!-- -->, where=<!-- -->[(id = id0)]<!-- -->, select=<!-- -->[id, tag, id0, tag0]<!-- -->, leftInputSpec=<!-- -->[NoUniqueKey]<!-- -->, rightInputSpec=<!-- -->[NoUniqueKey]<!-- -->)</p><p>// toDataStream 报错信息</p><p>Table sink 'default_catalog.default_database.Unregistered_DataStream_Sink_2' doesn't support consuming update and delete changes which is produced by node Join(joinType=<!-- -->[LeftOuterJoin]<!-- -->, where=<!-- -->[(id = id0)]<!-- -->, select=<!-- -->[id, tag, id0, tag0]<!-- -->, leftInputSpec=<!-- -->[NoUniqueKey]<!-- -->, rightInputSpec=<!-- -->[NoUniqueKey]<!-- -->)</p><p>调用 ③ 和 ④ 可以将包含更新和删除数据的表转化为流。需要指定表结构时用法如下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">DataStream&lt;Row&gt; changelogStream = tableEnv.toChangelogStream(joinTable, Schema.newBuilder()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .column("l_id", "STRING")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .column("tag_left", "STRING")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .column("tag_right", "STRING")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.build());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DataStream&lt;Tuple2&lt;Boolean, JoinBean&gt;&gt; retractS = tableEnv.toRetractStream(joinTable, JoinBean.class); </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream.print("changelogStream&gt;&gt;&gt;");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS.print("retractS");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>流打印结果如下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; +I[A, left, null]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; -D[A, left, null]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; +I[A, left, right]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; +I[B, left, null]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; -D[B, left, null]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; +I[B, left, right]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; +I[C, left, null]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; -D[C, left, null]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream&gt;&gt;&gt;&gt; +I[C, left, right]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (true,JoinBean(l_id=A, tag_left=left, tag_right=null))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (false,JoinBean(l_id=A, tag_left=left, tag_right=null))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (true,JoinBean(l_id=A, tag_left=left, tag_right=right))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (true,JoinBean(l_id=B, tag_left=left, tag_right=null))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (false,JoinBean(l_id=B, tag_left=left, tag_right=null))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (true,JoinBean(l_id=B, tag_left=left, tag_right=right))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (true,JoinBean(l_id=C, tag_left=left, tag_right=null))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (false,JoinBean(l_id=C, tag_left=left, tag_right=null))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">retractS&gt; (true,JoinBean(l_id=C, tag_left=left, tag_right=right))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）将流转化为动态表</p><p>① 目前版本 Flink 只提供了两种 API </p><ul><li>fromChangelogStream</li><li>fromDataStream</li></ul><p>② 应用场景</p><p>a）fromDataStream 不可用于包含删除和更新数据的流向 Table 的转化，否则报错，报错信息如下</p><p>Error during input conversion. Conversion expects insert-only records but DataStream API record contains: DELETE</p><p>b）fromChangelogStream 可用于包含删除和更新数据流向 Table 的转化</p><p>③ 用法</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Table changelogTable = tableEnv.fromChangelogStream(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelogStream,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Schema.newBuilder()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .column("l_id", "STRING")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .column("tag_left", "STRING")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .column("tag_right", "STRING")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .build()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）本项目 DWD 层涉及到的流和表转化</p><p>INSERT 操作的流和表没有回撤数据，不需要考虑去重问题。</p><p>① 从 Kafka 读取的 ODS 层数据操作类型均为 INSERT；</p><p>② 只含 INSERT 操作的数据和 Lookup 表关联后的数据同样只有 INSERT 操作</p><p>所以，本项目中流和表的转化不用考虑去重，无须额外处理。</p><p>2）执行步骤
（1）筛选优惠券领用数据封装为表。</p><p>筛选操作类型为 update 的数据。</p><p>（2）在流中筛选优惠券领取数据。</p><p>判断是否修改了 using_time 字段。</p><p>（3）封装为表，写入 Kafka 优惠券使用（下单）事实主题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-11">图解<a class="hash-link" href="#图解-11" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242981-19c9ef18-45a2-4d94-8d1f-ac529014bb35.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-11">代码<a class="hash-link" href="#代码-11" title="标题的直接链接">​</a></h3><p>1）创建实体类 CouponUseOrderBean</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.bean;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import lombok.Data;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class CouponUseOrderBean {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 优惠券领用记录 id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 优惠券 id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String coupon_id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 用户 id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String user_id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 订单 id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String order_id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 优惠券使用日期（下单）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String date_id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 优惠券使用时间（下单）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String using_time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 历史数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String old;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 时间戳</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    String ts;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）主程序</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">com</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">atguigu</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">gmall</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">realtime</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">app</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">dwd</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">db</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">com</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">alibaba</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">fastjson</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">JSON</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">com</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">atguigu</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">gmall</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">realtime</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">bean</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">CouponUseOrderBean</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">com</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">atguigu</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">gmall</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">realtime</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">KafkaUtil</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">common</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">restartstrategy</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">RestartStrategies</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">common</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">time</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Time</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">runtime</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">state</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">hashmap</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">HashMapStateBackend</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">streaming</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">CheckpointingMode</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">streaming</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">datastream</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">DataStream</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">streaming</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">datastream</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">SingleOutputStreamOperator</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">streaming</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">environment</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">CheckpointConfig</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">streaming</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">environment</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">StreamExecutionEnvironment</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">table</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Table</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">apache</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">flink</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">table</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">api</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">bridge</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">StreamTableEnvironment</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Map</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Set</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DwdToolCouponOrder</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">Exception</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// TODO 1. 环境准备</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">StreamExecutionEnvironment</span><span class="token plain"> env </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">StreamExecutionEnvironment</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getExecutionEnvironment</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setParallelism</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">StreamTableEnvironment</span><span class="token plain"> tableEnv </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">StreamTableEnvironment</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">env</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// TODO 2. 状态后端设置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">enableCheckpointing</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3000L</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">CheckpointingMode</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">EXACTLY_ONCE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCheckpointConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setCheckpointTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">60</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000L</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCheckpointConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setMinPauseBetweenCheckpoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3000L</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCheckpointConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">enableExternalizedCheckpoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token class-name">CheckpointConfig</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">ExternalizedCheckpointCleanup</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">RETAIN_ON_CANCELLATION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setRestartStrategy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">RestartStrategies</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">failureRateRestart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">days</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">minutes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setStateBackend</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HashMapStateBackend</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCheckpointConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setCheckpointStorage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"hdfs://hadoop102:8020/ck"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"HADOOP_USER_NAME"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"atguigu"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">executeSql</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"create table `topic_db` (\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"`database` string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"`table` string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"`data` map&lt;string, string&gt;,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"`type` string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"`old` string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"`ts` string\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">")"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token class-name">KafkaUtil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getKafkaDDL</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"topic_db"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dwd_tool_coupon_order"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// TODO 4. 读取优惠券领用表数据，封装为流</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">Table</span><span class="token plain"> couponUseOrder </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tableEnv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sqlQuery</span><span class="token punctuation" style="color:#393A34">(</span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                select</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                data['id'] id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                data['coupon_id'] coupon_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                data['user_id'] user_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                data['order_id'] order_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                date_format(data['using_time'],'yyyy-MM-dd') date_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                data['using_time'] using_time,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                `old`,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                from topic_db</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                where `table` = 'coupon_use'</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                and `type` = 'update'</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                """</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">DataStream</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">CouponUseOrderBean</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> couponUseOrderDS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tableEnv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toAppendStream</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">couponUseOrder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">CouponUseOrderBean</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">class</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// TODO 5. 过滤满足条件的优惠券下单数据，封装为表</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">SingleOutputStreamOperator</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">CouponUseOrderBean</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> filteredDS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> couponUseOrderDS</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                couponUseOrderBean </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token class-name">String</span><span class="token plain"> old </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> couponUseOrderBean</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getOld</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">old </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token class-name">Map</span><span class="token plain"> oldMap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">parseObject</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">old</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">class</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token class-name">Set</span><span class="token plain"> changeKeys </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> oldMap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">keySet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> changeKeys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">contains</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"using_time"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">Table</span><span class="token plain"> resultTable </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tableEnv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">fromDataStream</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filteredDS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createTemporaryView</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"result_table"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> resultTable</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// TODO 6. 建立 Upsert-Kafka dwd_tool_coupon_order 表</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">executeSql</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"create table dwd_tool_coupon_order(\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"id string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"coupon_id string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"user_id string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"order_id string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"date_id string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"order_time string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"ts string,\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"primary key(id) not enforced\n"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">")"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token class-name">KafkaUtil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getUpsertKafkaDDL</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"dwd_tool_coupon_order"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// TODO 7. 将数据写入 Upsert-Kafka 表</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">executeSql</span><span class="token punctuation" style="color:#393A34">(</span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                insert into dwd_tool_coupon_order select id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                coupon_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                user_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                order_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                date_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                using_time order_time,</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">                ts from result_table"""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">execute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具域优惠券使用支付事务事实表">工具域优惠券使用(支付)事务事实表<a class="hash-link" href="#工具域优惠券使用支付事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-13">主要任务<a class="hash-link" href="#主要任务-13" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">读取优惠券领用表数据，筛选优惠券支付数据，写入 Kafka 优惠券支付主题。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-11">思路分析<a class="hash-link" href="#思路分析-11" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">用户使用优惠券支付时，优惠券领用表的 used_time 字段会更新为支付时间，因此优惠券支付数据应满足两个条件：</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  （1）操作类型为 update；</p><p>  （2）修改了 used_time 字段。使用优惠券支付后，优惠券领用表数据就不会再发生变化，所以在操作类型为 update 的前提下，只要 used_time 不为 null，就可以断定本次操作修改的是 used_time 字段。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-12">图解<a class="hash-link" href="#图解-12" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167242998-8443ee23-a92f-4581-98a3-5d50a8b83edf.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-12">代码<a class="hash-link" href="#代码-12" title="标题的直接链接">​</a></h3><p>主程序</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdToolCouponPay {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table `topic_db` (\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_tool_coupon_pay"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取优惠券领用表数据，筛选优惠券使用（支付）数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table couponUsePay = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['coupon_id'] coupon_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_id'] order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(data['used_time'],'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['used_time'] used_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`old`,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'coupon_use'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'update'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and data['used_time'] is not null");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("coupon_use_pay", couponUsePay);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 建立 Upsert-Kafka dwd_tool_coupon_order 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_tool_coupon_pay(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "payment_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_tool_coupon_pay"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 将数据写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_tool_coupon_pay select " +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "coupon_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "used_time payment_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts from coupon_use_pay");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="互动域收藏商品事务事实表">互动域收藏商品事务事实表<a class="hash-link" href="#互动域收藏商品事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-14">主要任务<a class="hash-link" href="#主要任务-14" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">读取收藏数据，写入 Kafka 收藏主题</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-12">思路分析<a class="hash-link" href="#思路分析-12" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">用户收藏商品时业务数据库的收藏表会插入一条数据，因此筛选操作类型为 update 的数据即可。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-13">图解<a class="hash-link" href="#图解-13" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167243018-facb2ce6-7b89-47d1-841c-74283d7d1c99.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-13">代码<a class="hash-link" href="#代码-13" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdInteractionFavorAdd {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table topic_db(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_interaction_favor_add"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取收藏表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table favorInfo = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_id'] sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(data['create_time'],'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['create_time'] create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'favor_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("favor_info", favorInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 创建 Upsert-Kafka dwd_interaction_favor_add 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_interaction_favor_add (\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_interaction_favor_add"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 将数据写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_interaction_favor_add select * from favor_info");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="互动域评价事务事实表">互动域评价事务事实表<a class="hash-link" href="#互动域评价事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-15">主要任务<a class="hash-link" href="#主要任务-15" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">建立 MySQL-Lookup 字典表，读取评论表数据，关联字典表以获取评价（好评、中评、差评、自动），将结果写入 Kafka 评价主题。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-13">思路分析<a class="hash-link" href="#思路分析-13" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">用户提交评论时评价表会插入一条数据，筛选操作类型为 insert 的数据即可。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-14">图解<a class="hash-link" href="#图解-14" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167243041-aff42c3e-c8b1-46db-ba56-ffb07c1e56da.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-14">代码<a class="hash-link" href="#代码-14" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.MysqlUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdInteractionComment {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 状态后端设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(RestartStrategies.failureRateRestart(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                3, Time.days(1), Time.minutes(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "hdfs://hadoop102:8020/ck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table topic_db(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`proc_time` as PROCTIME(),\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_interaction_comment"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取评论表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table commentInfo = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['user_id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['sku_id'] sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['order_id'] order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['create_time'] create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['appraise'] appraise,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "proc_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'comment_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("comment_info", commentInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 建立 MySQL-LookUp 字典表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql(MysqlUtil.getBaseDicLookUpDDL());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 关联两张表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table resultTable = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ci.id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ci.user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ci.sku_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ci.order_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(ci.create_time,'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ci.create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ci.appraise,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "dic.dic_name,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from comment_info ci\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "left join\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "base_dic for system_time as of ci.proc_time as dic\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "on ci.appraise = dic.dic_code");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("result_table", resultTable);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 7. 建立 Upsert-Kafka dwd_interaction_comment 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table dwd_interaction_comment(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "sku_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "order_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_id string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "appraise_code string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "appraise_name string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(id) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_interaction_comment"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 8. 将关联结果写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "insert into dwd_interaction_comment select * from result_table");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="用户域用户注册事务事实表">用户域用户注册事务事实表<a class="hash-link" href="#用户域用户注册事务事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="主要任务-16">主要任务<a class="hash-link" href="#主要任务-16" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">读取用户表数据，获取注册时间，将用户注册信息写入 Kafka 用户注册主题。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="思路分析-14">思路分析<a class="hash-link" href="#思路分析-14" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">用户注册时会在用户表中插入一条数据，筛选操作类型为 insert 的数据即可。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="图解-15">图解<a class="hash-link" href="#图解-15" title="标题的直接链接">​</a></h3><p>   <img loading="lazy" src="https://user-images.githubusercontent.com/34996528/167243060-268080b2-fc92-4bd5-aa94-c896fa5043bb.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码-15">代码<a class="hash-link" href="#代码-15" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">package com.atguigu.gmall.realtime.app.dwd.db;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import com.atguigu.gmall.realtime.util.KafkaUtil;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.restartstrategy.RestartStrategies;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.api.common.time.Time;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.runtime.state.hashmap.HashMapStateBackend;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.CheckpointingMode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.CheckpointConfig;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.Table;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.ZoneId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class DwdUserRegister {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public static void main(String[] args) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 1. 环境准备</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setParallelism(4);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.getConfig().setLocalTimeZone(ZoneId.of("GMT+8"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 2. 启用状态后端</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.enableCheckpointing(3000L, CheckpointingMode.EXACTLY_ONCE);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointTimeout(60 * 1000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().enableExternalizedCheckpoints(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                CheckpointConfig.ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setMinPauseBetweenCheckpoints(3000L);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setRestartStrategy(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                RestartStrategies.failureRateRestart(3, Time.days(1L), Time.minutes(3L))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.setStateBackend(new HashMapStateBackend());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        env.getCheckpointConfig().setCheckpointStorage("hdfs://hadoop102:8020/ck");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.setProperty("HADOOP_USER_NAME", "atguigu");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 3. 从 Kafka 读取业务数据，封装为 Flink SQL 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table topic_db(" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`database` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`table` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`type` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`data` map&lt;string, string&gt;,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getKafkaDDL("topic_db", "dwd_trade_order_detail"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 4. 读取用户表数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Table userInfo = tableEnv.sqlQuery("select\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['id'] user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "data['create_time'] create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from topic_db\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "where `table` = 'user_info'\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "and `type` = 'insert'\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.createTemporaryView("user_info", userInfo);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 5. 创建 Upsert-Kafka dwd_user_register 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("create table `dwd_user_register`(\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`user_id` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`date_id` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`create_time` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "`ts` string,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "primary key(`user_id`) not enforced\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ")" + KafkaUtil.getUpsertKafkaDDL("dwd_user_register"));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // TODO 6. 将输入写入 Upsert-Kafka 表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tableEnv.executeSql("insert into dwd_user_register\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "select \n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "user_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "date_format(create_time, 'yyyy-MM-dd') date_id,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "create_time,\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "ts\n" +</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "from user_info");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="数据仓库" term="数据仓库"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[实时数仓理论基础]]></title>
        <id>/实时数仓理论基础</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/实时数仓理论基础"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[数据仓库概述]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库概述">数据仓库概述<a class="hash-link" href="#数据仓库概述" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库概念">数据仓库概念<a class="hash-link" href="#数据仓库概念" title="标题的直接链接">​</a></h3><p>数据仓库是一个为数据分析而设计的企业级数据管理系统。数据仓库可集中、整合多个信息源的大量数据，借助数据仓库的分析能力，企业可从数据中获得宝贵的信息进而改进决策。同时，随着时间的推移，数据仓库中积累的大量历史数据对于数据科学家和业务分析师也是十分宝贵的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库核心架构">数据仓库核心架构<a class="hash-link" href="#数据仓库核心架构" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153501-915f456b-b22c-4810-95b4-209239568655.png" alt="img" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库建模概述">数据仓库建模概述<a class="hash-link" href="#数据仓库建模概述" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库建模的意义">数据仓库建模的意义<a class="hash-link" href="#数据仓库建模的意义" title="标题的直接链接">​</a></h3><p>如果把数据看作图书馆里的书，我们希望看到它们在书架上分门别类地放置；如果把数据看作城市的建筑，我们希望城市规划布局合理；如果把数据看作电脑文件和文件夹，我们希望按照自己的习惯有很好的文件夹组织方式，而不是糟糕混乱的桌面，经常为找一个文件而不知所措。
数据模型就是数据组织和存储方法，它强调从业务、数据存取和使用角度合理存储数据。只有将数据有序的组织和存储起来之后，数据才能得到高性能、低成本、高效率、高质量的使用。</p><ul><li>高性能：良好的数据模型能够帮助我们快速查询所需要的数据。</li><li>低成本：良好的数据模型能减少重复计算，实现计算结果的复用，降低计算成本。</li><li>高效率：良好的数据模型能极大的改善用户使用数据的体验，提高使用数据的效率。</li><li>高质量：良好的数据模型能改善数据统计口径的混乱，减少计算错误的可能性</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库建模方法论">数据仓库建模方法论<a class="hash-link" href="#数据仓库建模方法论" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="er模型">ER模型<a class="hash-link" href="#er模型" title="标题的直接链接">​</a></h4><p>数据仓库之父Bill Inmon提出的建模方法是从全企业的高度，用实体关系（Entity Relationship，ER）模型来描述企业业务，并用规范化的方式表示出来，在范式理论上符合3NF。
1）实体关系模型
实体关系模型将复杂的数据抽象为两个概念——实体和关系。实体表示一个对象，例如学生、班级，关系是指两个实体之间的关系，例如学生和班级之间的从属关系。
2）数据库规范化
数据库规范化是使用一系列范式设计数据库（通常是关系型数据库）的过程，其目的是减少数据冗余，增强数据的一致性。
这一系列范式就是指在设计关系型数据库时，需要遵从的不同的规范。关系型数据库的范式一共有六种，分别是第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF）。遵循的范式级别越高，数据冗余性就越低。
3）三范式
（1）函数依赖</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153683-7dec074a-908e-4300-b5c5-e2bbcecca226.png" alt="img" class="img_ev3q"></p><p>（2）第一范式</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153729-fb85329b-75d2-4898-bcb0-bd24d73b304e.png" alt="img" class="img_ev3q"></p><p>（3）第二范式</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153754-b30c4bd1-b4d9-4010-889c-1c1818f13f78.png" alt="img" class="img_ev3q"></p><p>（4）第三范式</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153773-bf01a21b-57b1-4e74-b83e-8f1f9dcd8d92.png" alt="img" class="img_ev3q"></p><p>下图为一个采用Bill Inmon倡导的建模方法构建的模型，从图中可以看出，较为松散、零碎，物理表数量多。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153789-a9bbf3a5-b194-489f-9441-7b68ed305c4a.png" alt="img" class="img_ev3q"></p><p>这种建模方法的出发点是整合数据，其目的是将整个企业的数据进行组合和合并，并进行规范处理，减少数据冗余性，保证数据的一致性。这种模型并不适合直接用于分析统计。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="维度模型">维度模型<a class="hash-link" href="#维度模型" title="标题的直接链接">​</a></h4><p>数据仓库领域的令一位大师——Ralph Kimball倡导的建模方法为维度建模。维度模型将复杂的业务通过事实和维度两个概念进行呈现。事实通常对应业务过程，而维度通常对应业务过程发生时所处的环境。
注：业务过程可以概括为一个个不可拆分的行为事件，例如电商交易中的下单，取消订单，付款，退单等，都是业务过程。
下图为一个典型的维度模型，其中位于中心的SalesOrder为事实表，其中保存的是下单这个业务过程的所有记录。位于周围每张表都是维度表，包括Date（日期），Customer（顾客），Product（产品），Location（地区）等，这些维度表就组成了每个订单发生时所处的环境，即何人、何时、在何地下单了何种产品。从图中可以看出，模型相对清晰、简洁。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153809-7085f05c-211b-4913-afb2-e09269acadf5.png" alt="img" class="img_ev3q"></p><p>维度建模以数据分析作为出发点，为数据分析服务，因此它关注的重点的用户如何更快的完成需求分析以及如何实现较好的大规模复杂查询的响应性能。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="维度建模理论之事实表">维度建模理论之事实表<a class="hash-link" href="#维度建模理论之事实表" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="事实表概述">事实表概述<a class="hash-link" href="#事实表概述" title="标题的直接链接">​</a></h3><p>事实表作为数据仓库维度建模的核心，紧紧围绕着业务过程来设计。其包含与该业务过程有关的维度引用（维度表外键）以及该业务过程的度量（通常是可累加的数字类型字段）。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="事实表特点">事实表特点<a class="hash-link" href="#事实表特点" title="标题的直接链接">​</a></h4><p>事实表通常比较“细长”，即列较少，但行较多，且行的增速快。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="事实表分类">事实表分类<a class="hash-link" href="#事实表分类" title="标题的直接链接">​</a></h4><p>事实表有三种类型：分别是事务事实表、周期快照事实表和累积快照事实表，每种事实表都具有不同的特点和适用场景，下面逐个介绍。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="事务型事实表">事务型事实表<a class="hash-link" href="#事务型事实表" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="概述">概述<a class="hash-link" href="#概述" title="标题的直接链接">​</a></h4><p>事务事实表用来记录各业务过程，它保存的是各业务过程的原子操作事件，即最细粒度的操作事件。粒度是指事实表中一行数据所表达的业务细节程度。
事务型事实表可用于分析与各业务过程相关的各项统计指标，由于其保存了最细粒度的记录，可以提供最大限度的灵活性，可以支持无法预期的各种细节层次的统计需求。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="设计流程">设计流程<a class="hash-link" href="#设计流程" title="标题的直接链接">​</a></h4><p>设计事务事实表时一般可遵循以下四个步骤：
选择业务过程→声明粒度→确认维度→确认事实</p><p>1）选择业务过程
在业务系统中，挑选我们感兴趣的业务过程，业务过程可以概括为一个个不可拆分的行为事件，例如电商交易中的下单，取消订单，付款，退单等，都是业务过程。通常情况下，一个业务过程对应一张事务型事实表。</p><p>2）声明粒度
业务过程确定后，需要为每个业务过程声明粒度。即精确定义每张事务型事实表的每行数据表示什么，应该尽可能选择最细粒度，以此来应各种细节程度的需求。
典型的粒度声明如下：
订单事实表中一行数据表示的是一个订单中的一个商品项。</p><p>3）确定维度
确定维度具体是指，确定与每张事务型事实表相关的维度有哪些。
确定维度时应尽量多的选择与业务过程相关的环境信息。因为维度的丰富程度就决定了维度模型能够支持的指标丰富程度。</p><p>4）确定事实
此处的“事实”一词，指的是每个业务过程的度量值（通常是可累加的数字类型的值，例如：次数、个数、件数、金额等）。
经过上述四个步骤，事务型事实表就基本设计完成了。第一步选择业务过程可以确定有哪些事务型事实表，第二步可以确定每张事务型事实表的每行数据是什么，第三步可以确定每张事务型事实表的维度外键，第四步可以确定每张事务型事实表的度量值字段。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="不足">不足<a class="hash-link" href="#不足" title="标题的直接链接">​</a></h4><p>事务型事实表可以保存所有业务过程的最细粒度的操作事件，故理论上其可以支撑与各业务过程相关的各种统计粒度的需求。但对于某些特定类型的需求，其逻辑可能会比较复杂，或者效率会比较低下。例如：</p><p>1）存量型指标
例如商品库存，账户余额等。此处以电商中的虚拟货币为例，虚拟货币业务包含的业务过程主要包括获取货币和使用货币，两个业务过程各自对应一张事务型事实表，一张存储所有的获取货币的原子操作事件，另一张存储所有使用货币的原子操作事件。</p><p>假定现有一个需求，要求统计截至当日的各用户虚拟货币余额。由于获取货币和使用货币均会影响到余额，故需要对两张事务型事实表进行聚合，且需要区分两者对余额的影响（加或减），另外需要对两张表的全表数据聚合才能得到统计结果。
可以看到，不论是从逻辑上还是效率上考虑，这都不是一个好的方案。</p><p>2）多事务关联统计
例如，现需要统计最近30天，用户下单到支付的时间间隔的平均值。统计思路应该是找到下单事务事实表和支付事务事实表，过滤出最近30天的记录，然后按照订单id对两张事实表进行关联，之后用支付时间减去下单时间，然后再求平均值。</p><p>逻辑上虽然并不复杂，但是其效率较低，应为下单事务事实表和支付事务事实表均为大表，大表join大表的操作应尽量避免。
可以看到，在上述两种场景下事务型事实表的表现并不理想。下面要介绍的另外两种类型的事实表就是为了弥补事务型事实表的不足的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="周期型快照事实表">周期型快照事实表<a class="hash-link" href="#周期型快照事实表" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="概述-1">概述<a class="hash-link" href="#概述-1" title="标题的直接链接">​</a></h4><p>周期快照事实表以具有规律性的、可预见的时间间隔来记录事实，主要用于分析一些存量型（例如商品库存，账户余额）或者状态型（空气温度，行驶速度）指标。</p><p>对于商品库存、账户余额这些存量型指标，业务系统中通常就会计算并保存最新结果，所以定期同步一份全量数据到数据仓库，构建周期型快照事实表，就能轻松应对此类统计需求，而无需再对事务型事实表中大量的历史记录进行聚合了。
对于空气温度、行驶速度这些状态型指标，由于它们的值往往是连续的，我们无法捕获其变动的原子事务操作，所以无法使用事务型事实表统计此类需求。而只能定期对其进行采样，构建周期型快照事实表。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="设计流程-1">设计流程<a class="hash-link" href="#设计流程-1" title="标题的直接链接">​</a></h4><p>1）确定粒度
周期型快照事实表的粒度可由采样周期和维度描述，故确定采样周期和维度后即可确定粒度。
采样周期通常选择每日。
维度可根据统计指标决定，例如指标为统计每个仓库中每种商品的库存，则可确定维度为仓库和商品。
确定完采样周期和维度后，即可确定该表粒度为每日-仓库-商品。</p><p>2）确认事实
事实也可根据统计指标决定，例如指标为统计每个仓库中每种商品的库存，则事实为商品库存。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="事实类型">事实类型<a class="hash-link" href="#事实类型" title="标题的直接链接">​</a></h4><p>此处的事实类型是指度量值的类型，而非事实表的类型。事实（度量值）共分为三类，分别是可加事实，半可加事实和不可加事实。</p><p>1）可加事实
可加事实是指可以按照与事实表相关的所有维度进行累加，例如事务型事实表中的事实。</p><p>2）半可加事实
半可加事实是指只能按照与事实表相关的一部分维度进行累加，例如周期型快照事实表中的事实。以上述各仓库中各商品的库存每天快照事实表为例，这张表中的库存事实可以按照仓库或者商品维度进行累加，但是不能按照时间维度进行累加，因为将每天的库存累加起来是没有任何意义的。</p><p>3）不可加事实
不可加事实是指完全不具备可加性，例如比率型事实。不可加事实通常需要转化为可加事实，例如比率可转化为分子和分母。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="累积型快照事实表">累积型快照事实表<a class="hash-link" href="#累积型快照事实表" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="概述-2">概述<a class="hash-link" href="#概述-2" title="标题的直接链接">​</a></h4><p>累计快照事实表是基于一个业务流程中的多个关键业务过程联合处理而构建的事实表，如交易流程中的下单、支付、发货、确认收货业务过程。
累积型快照事实表通常具有多个日期字段，每个日期对应业务流程中的一个关键业务过程（里程碑）。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166153894-25418c7d-1ef2-4000-bdf2-f3fe2ef65ec5.png" alt="img" class="img_ev3q"></p><p>累积型快照事实表主要用于分析业务过程（里程碑）之间的时间间隔等需求。例如前文提到的用户下单到支付的平均时间间隔，使用累积型快照事实表进行统计，就能避免两个事务事实表的关联操作，从而变得十分简单高效。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="设计流程-2">设计流程<a class="hash-link" href="#设计流程-2" title="标题的直接链接">​</a></h4><p>累积型快照事实表的设计流程同事务型事实表类似，也可采用以下四个步骤，下面重点描述与事务型事实表的不同之处。
选择业务过程→声明粒度→确认维度→确认事实。</p><p>1）选择业务过程
选择一个业务流程中需要关联分析的多个关键业务过程，多个业务过程对应一张累积型快照事实表。</p><p>2）声明粒度
精确定义每行数据表示的是什么，尽量选择最小粒度。</p><p>3）确认维度
选择与各业务过程相关的维度，需要注意的是，每各业务过程均需要一个日期维度。</p><p>4）确认事实
选择各业务过程的度量值。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="维度建模理论之维度表">维度建模理论之维度表<a class="hash-link" href="#维度建模理论之维度表" title="标题的直接链接">​</a></h2><p>在电商离线数仓中，普通维度表是通过主维表和相关维表做关联查询生成的。与之对应的业务数表数据是通过每日一次全量同步导入到 HDFS 的，只须每日做一次全量数据的关联查询即可。而实时数仓中，系统上线后我们采集的是所有表的变化数据，这样就会导致一旦主维表或相关维表中的某张表数据发生了变化，就需要和其它表的历史数据做关联。
此时我们会面临一个问题：如何获取历史数据？</p><p>对于这个问题，一种思路是在某张与维度表相关的业务表数据发生变化时，执行一次 maxwell-bootstrap 命令，将相关业务表的数据导入 Kafka。但是这样做又会面临三个问题：</p><p>a）Kafka 中存储冗余数据；</p><p>b）maxwell-bootstrap 命令交给谁去执行？必然会面临谁去调度的问题；</p><p>c）实时数仓中的数据是以流的形式存在的，如果不同流中数据进入程序的机器时间差异过大就会出现 join 不上的情况。</p><p>如何保证导入的历史数据和变化数据可以关联上？势必要尽可能及时地执行历史数据导入命令且在 Flink 程序中设置足够的延迟。而前者难以保证，后者又会影响整个实时数仓的时效性。
基于上述分析，对业务表做 join 形成维度表的方式并不适用于实时数仓。</p><p>因此，在实时数仓中，我们不再对业务数据库中的维度表进行合并，仅对一些不需要的字段进行过滤，然后将维度数据写入 HBase 的维度表中，业务数据库的维度表和 HBase 的维度表是一一对应的。
写入维度数据使用 HBase 的 Phoenix 客户端提供的 upsert 语法，实现幂等写入。当维度数据发生变化时，程序会用变化后的新数据覆盖 Phoenix 维表中相同主键的旧数据。从而保证 Phoenix 表中保存的是一份全量最新的维度数据。</p><p>这样做会产生一个问题：实时数仓没有保存历史维度数据，与数仓特征（保存历史数据）相悖。那么，维度表可以按照上述思路设计吗？</p><p>首先，我们要明确：数仓之所以要保存历史数据，是为了运用历史数据做一些相关指标的计算，而实时数仓本就是对最新的业务数据做分析计算，不涉及历史数据，因此无须保存历史数据。</p><p>此外，生产环境中实时数仓的上线通常不会早于离线数仓，如果有涉及到历史数据的指标，在离线数仓中计算即可。因此，实时数仓中只需要保留一份最新的维度数据，上述方案是切实可行的。</p><p>特别地，对于字典表，我们至多只会用到 dic_code，dic_name 和 parent_code 三个字段，建立单独的维度表意义不大，选择将维度字段退化到事实表中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库设计">数据仓库设计<a class="hash-link" href="#数据仓库设计" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库分层规划">数据仓库分层规划<a class="hash-link" href="#数据仓库分层规划" title="标题的直接链接">​</a></h3><p>优秀可靠的数仓体系，需要良好的数据分层结构。合理的分层，能够使数据体系更加清晰，使复杂问题得以简化。以下是该项目的分层规划。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154067-ad7ffff4-3213-4a06-8c97-50815d18204c.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="数据仓库构建流程">数据仓库构建流程<a class="hash-link" href="#数据仓库构建流程" title="标题的直接链接">​</a></h3><p>以下是构建数据仓库的完整流程。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154106-daec46b5-4a4b-43ed-896e-80cdd6363d57.png" alt="img" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="数据调研">数据调研<a class="hash-link" href="#数据调研" title="标题的直接链接">​</a></h4><p>数据调研重点要做两项工作，分别是业务调研和需求分析。这两项工作做的是否充分，直接影响着数据仓库的质量。</p><p>1）业务调研
业务调研的主要目标是熟悉业务流程、熟悉业务数据。</p><p>熟悉业务流程要求做到，明确每个业务的具体流程，需要将该业务所包含的每个业务过程一一列举出来。</p><p>熟悉业务数据要求做到，将数据（包括埋点日志和业务数据表）与业务过程对应起来，明确每个业务过程会对哪些表的数据产生影响，以及产生什么影响。产生的影响，需要具体到，是新增一条数据，还是修改一条数据，并且需要明确新增的内容或者是修改的逻辑。</p><p>下面业务电商中的交易为例进行演示，交易业务涉及到的业务过程有买家下单、买家支付、卖家发货，买家收货，具体流程如下图。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154147-9bde9ec9-9b9d-4a24-a5cc-263a15d68ef6.png" alt="img" class="img_ev3q"></p><p>2）需求分析
典型的需求指标如，最近一天各省份手机品类订单总额。</p><p>分析需求时，需要明确需求所需的业务过程及维度，例如该需求所需的业务过程就是买家下单，所需的维度有日期，省份，商品品类。</p><p>3）总结</p><p>做完业务分析和需求分析之后，要保证每个需求都能找到与之对应的业务过程及维度。若现有数据无法满足需求，则需要和业务方进行沟通，例如某个页面需要新增某个行为的埋点。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="明确数据域">明确数据域<a class="hash-link" href="#明确数据域" title="标题的直接链接">​</a></h4><p>数据仓库模型设计除横向的分层外，通常也需要根据业务情况进行纵向划分数据域。</p><p>划分数据域的意义是便于数据的管理和应用。</p><p>通常可以根据业务过程或者部门进行划分，本项目根据业务过程进行划分，需要注意的是一个业务过程只能属于一个数据域。</p><p>下面是本数仓项目所需的所有业务过程及数据域划分详情。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154195-f9be05e5-dc11-41f0-893b-f85a5b4b04a2.png" alt="img" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="构建业务总线矩阵">构建业务总线矩阵<a class="hash-link" href="#构建业务总线矩阵" title="标题的直接链接">​</a></h4><p>业务总线矩阵中包含维度模型所需的所有事实（业务过程）以及维度，以及各业务过程与各维度的关系。矩阵的行是一个个业务过程，矩阵的列是一个个的维度，行列的交点表示业务过程与维度的关系。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154224-b030d3f7-ce3d-4709-9509-788662abd7f5.png" alt="img" class="img_ev3q"></p><p>一个业务过程对应维度模型中一张事务型事实表，一个维度则对应维度模型中的一张维度表。所以构建业务总线矩阵的过程就是设计维度模型的过程。但是需要注意的是，总线矩阵中通常只包含事务型事实表，另外两种类型的事实表需单独设计。</p><p>按照事务型事实表的设计流程，选择业务过程 -&gt; 声明粒度 -&gt; 确认维度 -&gt; 确认事实，得到的最终的业务总线矩阵见以下表格。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154270-1bb0f57b-b5ff-4052-8539-00ee54a4c9de.png" alt="img" class="img_ev3q"></p><p>后续的DWD层以及DIM层的搭建需参考业务总线矩阵。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="明确统计指标">明确统计指标<a class="hash-link" href="#明确统计指标" title="标题的直接链接">​</a></h4><p>明确统计指标具体的工作是，深入分析需求，构建指标体系。构建指标体系的主要意义就是指标定义标准化。所有指标的定义，都必须遵循同一套标准，这样能有效的避免指标定义存在歧义，指标定义重复等问题。</p><p>1）指标体系相关概念</p><p>（1）原子指标
原子指标基于某一业务过程的度量值，是业务定义中不可再拆解的指标，原子指标的核心功能就是对指标的聚合逻辑进行了定义。我们可以得出结论，原子指标包含三要素，分别是业务过程、度量值和聚合逻辑。</p><p>例如订单总额就是一个典型的原子指标，其中的业务过程为用户下单、度量值为订单金额，聚合逻辑为sum()求和。需要注意的是原子指标只是用来辅助定义指标一个概念，通常不会对应有实际统计需求与之对应。</p><p>（2）派生指标
派生指标基于原子指标，其与原子指标的关系如下图所示。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154319-60edb2e6-43f9-4765-a280-9987ecbab8b1.png" alt="img" class="img_ev3q"></p><p>与原子指标不同，派生指标通常会对应实际的统计需求。请从图中的例子中，体会指标定义标准化的含义。</p><p>（3）衍生指标</p><p>衍生指标是在一个或多个派生指标的基础上，通过各种逻辑运算复合而成的。例如比率、比例等类型的指标。衍生指标也会对应实际的统计需求。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154343-e131d5b0-4257-4e48-a9c7-257928db5d82.png" alt="img" class="img_ev3q"></p><p>2）指标体系对于数仓建模的意义</p><p>通过上述两个具体的案例可以看出，绝大多数的统计需求，都可以使用原子指标、派生指标以及衍生指标这套标准去定义。同时能够发现这些统计需求都直接的或间接的对应一个或者是多个派生指标。</p><p>当统计需求足够多时，必然会出现部分统计需求对应的派生指标相同的情况。这种情况下，我们就可以考虑将这些公共的派生指标保存下来，这样做的主要目的就是减少重复计算，提高数据的复用性。</p><p>这些公共的派生指标统一保存在数据仓库的DWS层。因此DWS层设计，就可以参考我们根据现有的统计需求整理出的派生指标。</p><p>从上述指标体系中抽取出来的所有派生指标见如下表格。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154478-0a00e798-4fc0-4692-bf54-28d20f39f277.png" alt="img" class="img_ev3q"></p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/166154433-e3ad4e78-1b9d-4fde-be6c-b60a52e78dda.png" alt="img" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="维度模型设计">维度模型设计<a class="hash-link" href="#维度模型设计" title="标题的直接链接">​</a></h4><p>维度模型的设计参照上述得到的业务总线矩阵即可。事实表存储在DWD层，维度表存储在DIM层。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="汇总模型设计">汇总模型设计<a class="hash-link" href="#汇总模型设计" title="标题的直接链接">​</a></h4><p>汇总模型的设计参考上述整理出的指标体系（主要是派生指标）即可。</p><p>汇总表与派生指标的对应关系是，一张汇总表通常包含业务过程相同、统计周期相同、统计粒度相同的多个派生指标。</p><p>请思考：汇总表与事实表的对应关系是？</p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="数据仓库" term="数据仓库"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[数仓架构体系]]></title>
        <id>/数仓架构体系</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/数仓架构体系"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[分层定义]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="分层定义">分层定义<a class="hash-link" href="#分层定义" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="为什么要分层">为什么要分层？<a class="hash-link" href="#为什么要分层" title="标题的直接链接">​</a></h3><ul><li>清晰数据结构</li><li>数据血缘追踪</li><li>减少重复开发</li><li>把复杂问题简单化</li><li>屏蔽原始数据的异常</li><li>屏蔽业务的影响</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="层级划分">层级划分<a class="hash-link" href="#层级划分" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="ods-数据来源层">ODS 数据来源层<a class="hash-link" href="#ods-数据来源层" title="标题的直接链接">​</a></h4><p>数据来源层，主要包含业务数据库快照数据（db）、埋点数据(data)、其他业务等数据。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="数仓模型层">数仓模型层：<a class="hash-link" href="#数仓模型层" title="标题的直接链接">​</a></h4><p>TMP：临时层， 数据处理的辅助处理层，服务于DW、DM层，主要是一些临时存储的数据,根据实际情况选择创建与不创建，包括：计算任务的中间结果数据、RAW层每日增量数据抽取临时落地等，一般最多保存1-2天即可清理。</p><p>DIM：维度数据层，主要包含一些字典表、维度数据。实例：品类字典表、城市字典表、渠道字典表、终端类型表、支付状态表、圈子列表</p><p>DW：data warehouse，存储经过标准规范化处理（即数据清洗）后的运营数据，是基础事实数据明细层。实例：后端日志明细表、前端埋点日志明细表、mysql各业务数据经过ETL处理后的表。</p><p>DWS：轻度汇总层，基于单事实表进行指标轻度加工。</p><p>DM：data market(也叫DWS：data warehouse service)，数据主题层或者宽表层，按部门按专题进行划分，支持OLAP分析、数据分发等，其信息主要来源于DW 或TMP层汇总数据。实例：新激活用户业务分析表、日活用户业务分析表、历史激活用户业务分析表、用户行为轨迹表、红包业务表、交易品类来源多维表、商业广告多维分析报表</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="应用数据层">应用数据层<a class="hash-link" href="#应用数据层" title="标题的直接链接">​</a></h4><p>ADS：application database service,应用数据层, 面向具体应用的表，要创建在这层，可导入hbase或mysql等使用。实例：按天、小时、5分钟粒度计算汇总的结果存入mysql、hbase的报表</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据流向">数据流向<a class="hash-link" href="#数据流向" title="标题的直接链接">​</a></h2><ul><li>数据单向加工不可逆</li><li>除图里标注的流向外数据不可跨层调用</li></ul><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/160243905-4ceb72ea-ca09-4807-95c5-4b371c0bccfd.png" alt="image" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数仓搭建思路">数仓搭建思路<a class="hash-link" href="#数仓搭建思路" title="标题的直接链接">​</a></h2><ul><li>所有数据的贴源层表都存放在 业务global 即可，业务线不需要单独维护业务线自己的贴源层。</li><li>所有数据源进数仓首要要落地到ods层，不可跳过贴源层在其他层直接落地和使用(手工配置表除外) 。</li><li>所有从数仓出去的表必须在ads首先落地，才能对外输出。</li><li>全局基础数据放在 global（如订单、商品、用户模型表等）下，功能包括：全局数据、清洗脏数据等</li><li>根据实际业务情况，业务线数据库重新定义B2C/B2B/C2C/C2B 4条，数据仓库的库单独维护，即 dw_b2c/b2b/c2c/c2b，其他业务线放在GLOBAL下即可（搜索推荐、商业等有自主搭建数仓能力的仍然是自己维护，暂时不做管控）</li><li>全局/业务线的沉淀大宽表、专题表、指标表放在 dm_global/b2c/b2b/c2b/c2c</li><li>dm_global不可用不同业务线的数据的dm层，需global自己加工（目的是为了让全局有业务沉淀，有自主数据加工能力）</li><li>分析结果表放在 ads_global/b2c/b2b/c2b/c2c</li><li>ads_global可组合不同业务线的数据的dm,ads层（为的是快速响应业务需求，同时个性化业务需求没必要在全局层面保留）</li><li>注意：对于已固化的业务：先放在global,业务线从global获取数据；对于新业务或探索性业务：先在业务线数仓满足诉求或搭建模型，待业务稳定后再完善global）</li></ul><h1>业务板块划分</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="业务分全局业务和各业务线">业务分全局业务和各业务线<a class="hash-link" href="#业务分全局业务和各业务线" title="标题的直接链接">​</a></h2><ul><li><p>建设要求 优先建设全局业务板块，特殊场景下可以按业务线建设具体的业务线板块</p></li><li><p>命名规则</p></li></ul><p>全局为 global</p><p>各业务线 b2b c2c等</p><p>具体如下：</p><p>odsdb_global  从公司各业务mysql表以及其他数据源 同步的快照信息；从日志读取的原始日志数据
dw_global     包含公司各业务经过ETL后的基础事实明细表和轻度汇总表
dim_global    包含公司所有的字典信息和维度表
dm_global   面向公司的不同主题业务的公共分析数据（日活、交易、用户标签等）
ads_global	面向公司的不同主题业务的结果分析数据，可用于BI展示、推送、分析等使用
tmp_global  包含基于公司层面分析产生的一些临时表</p><p>各业务线类似</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="总线矩阵划分规则dw">总线矩阵划分规则(DW)<a class="hash-link" href="#总线矩阵划分规则dw" title="标题的直接链接">​</a></h2><ul><li>总线矩阵：在企业范围内具有统一解释的标准化维度与事实的一整套数据体系，所有业务创建的维度模型共享一组具有一致性的共用综合维度。</li><li>一致性维度：维度同一，具有一致的维度关键字、一致的属性列名字、一致的属性定义以及一致的属性值。</li><li>数据域：将所有的业务过程进行聚类，高度抽象后形成的一个分析主题。主要参考2个原则1个思想设计：</li><li>第一原则：高内聚低耦合，将概念接近，关联度高的放在一类。</li><li>第二原则：保证抽象逻辑的一致性，形成最终的数据域和相关业务过程。</li><li>一个思想：螺旋递进，数据域的划分没有完美的状态，只有接近完美，在实践过程中以螺旋递进的方式迭代优化。
常见的抽象方法：</li><li>按业务或业务过程划分：比如销售、回收、租赁。</li><li>按需求方划分：比如需求方为财务部，就可以设定对应的财务主题域，而财务主题域里面可能就会有员工工资分析，投资回报比分析等主题；</li><li>按功能或应用划分：比如履约能力、营销活动等</li><li>按部门划分：比如商业广告、风控</li></ul><p>一致性维度 ： 日期 平台 终端 终端版本号 渠道 业务线 品类 品牌 型号 城市 设备id 用户id 商品id 销售id 等</p><p>数据域(一级子域（二级子域）) ： </p><p>交易 (交易( 线上，线下 ))
履约 (客服( 会话，外呼，直播 ))
商品 (供给( 线下))
营销 (私域，新媒体，红包)</p><p>业务过程举例 </p><p>客服 --- 会话 ---- 用户进线，机器人接待，用户转人工，用户评价，客服创建工单，处理工单</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据主题域划分规则dm">数据主题域划分规则(DM)<a class="hash-link" href="#数据主题域划分规则dm" title="标题的直接链接">​</a></h2><p>DM层用于建设跨主题宽表、跨主题汇总表、项目或专题级基础表</p><p>DM数据主题域是根据业务看数据的方式制定，如需新增联系对应负责人</p><p>一级主题</p><p>channel 渠道  	finance	财务  price	价格系统  user	用户  scm	供应链  recommend	搜索推荐  	afs	售后  	spam	风控</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="应用主题域划分规则ads">应用主题域划分规则(ADS)<a class="hash-link" href="#应用主题域划分规则ads" title="标题的直接链接">​</a></h2><p>ADS层是应用层，基于应用层的多样化，此处制定ADS层的应用主题命名规范，便于快速识别数据的使用形式。</p><p>bi	分析报表使用  ads_bi_ei_type_pur_online_sum_inc_1d  “bi”占据第二位，如有数据域，数据域放在第三位</p><p>ana	分析师自主分析专用</p><p>app
app客户端推送使用，其他业务部门数据库推送使用。</p><h1>开发流程规范</h1><p>开发流程需遵循 开发流程规范，新建表规范，表权限规范，脚本规范，调度规范，监控规范，报表下线规范，生命周期管理规范</p><p>总体流程为</p><p>业务调研 -&gt; 模型设计 -&gt; 模型评审 -&gt; 模型开发 -&gt; 模型自测 -&gt; 上线审核</p><p>业务调研： 业务调研重点在于搞清楚涉及到的业务板块、数据域、业务过程，以及梳理需要看数据的维度和重点关注的指标。为后续模型设计提供参考。可酌情产出mrd文档、prd文档，暂不做强制要求。</p><p>模型设计： 模型设计应遵循数仓架构体系中对数据加工流向，结合业务调研的结果和总线矩阵的规划，优先进行DW层的事实表和DIM维表设计，其次进行DM层模型设计。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/160246308-4f0422f7-b80d-488a-b7ea-8d5ad86dbcb1.png" alt="image" class="img_ev3q"></p><p>模型评审：
重点对规范执行情况、是否重复建设、设计是否全面富有前瞻性、维度设计是否合理进行评审，是模型开发前的第一道把控。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/160246346-0c8dd841-863b-4bb8-b2ae-7efdc9aa53c4.png" alt="image" class="img_ev3q"></p><p>模型开发：
模型开发应遵循建表规范、表权限规范、脚本规范、调度规范、监控规范、报表下线规范、生命周期管理规范等规范。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/160246371-c4f27e8e-4c9f-4637-880a-f9691d899854.png" alt="image" class="img_ev3q"></p><p>模型自测：
模型自测是上线前对模型的数据质量、粒度等进行检验，是必须执行的一个环节，自测文档暂不做强制要求，二期再补充完善。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/160246401-7fa25ad5-3a5c-420f-a0ab-0526b98e74e0.png" alt="image" class="img_ev3q"></p><p>模型上线：
模型上线需要在数仓地图进行注册，注册需维护模型的基本信息，如所属业务板块、数据域、业务过程、粒度、事实属性、维度、度量、使用说明等等。数仓地图作为模型对外的出口，解决找表难问题的同时，注册审核通过方能上线的机制，也是数仓规范落地情况的最后一道屏障。</p><p>详细模型注册规范可查看 数仓地图模型注册规范。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/160246438-717448bf-6b7f-4859-81e9-0b2e98c6e342.png" alt="image" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="设计文档模板">设计文档模板<a class="hash-link" href="#设计文档模板" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dw事实表示例说明">DW事实表示例说明<a class="hash-link" href="#dw事实表示例说明" title="标题的直接链接">​</a></h3><p>模型表
表中文名
业务板块
数据域
业务过程
模型表注释
表主键/粒度
生命周期
使用说明
跑数方式
主要来源表    表名   别名   关联条件 备注</p><ul><li>每个字段说明如下：</li></ul><p>序号	分类	目标字段	字段类型	字段注释	数据逻辑</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dw维度表示例说明如上">DW维度表示例说明如上<a class="hash-link" href="#dw维度表示例说明如上" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dm集市表同上">DM集市表同上<a class="hash-link" href="#dm集市表同上" title="标题的直接链接">​</a></h3><h2 class="anchor anchorWithStickyNavbar_LWe7" id="新建表规范">新建表规范<a class="hash-link" href="#新建表规范" title="标题的直接链接">​</a></h2><p>每层是一个单独库</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="分层库库名xxxx">分层库库名：xxxx<a class="hash-link" href="#分层库库名xxxx" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="各层存储形式">各层存储形式：<a class="hash-link" href="#各层存储形式" title="标题的直接链接">​</a></h3><p>数仓层级	表类型	存储格式
ods	默认（管理表）	默认（TEXTFILE）
dim	外部表	PARQUET
dw	外部表	PARQUET
dm	外部表	PARQUET
tmp	默认（管理表）	默认（TEXTFILE）
ads	默认（管理表）	默认（TEXTFILE）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="贴源层表命名规范">贴源层表命名规范<a class="hash-link" href="#贴源层表命名规范" title="标题的直接链接">​</a></h3><p>1 数据源是mysql，使用sqoop离线抽数的：</p><p>表命名规则：ods<em>mysql</em>{源数据库名}<em>{源数据库表名}</em>{增全量}_{调度频率} 。命名分为四部分：</p><p>第一部分为数据仓库分层的区分，数据准备区命名为raw；</p><p>第二部分为数据源类型；</p><p>第三部分{源数据库名}为源数据库名，可以保证数据准备区库的相对稳定，建立与源库库名对应关系。此项避免不同源数据库存在相同表名情况</p><p>第四部分{源数据库表名}为源数据库表名，所有表表名与源表表名保持一致</p><p>第五部分对应表名后缀规则，见 建表规范。</p><p>比如panda库pdi_product表对应ods库命名为：ods_mysql_panda_pdi_product_full_1d 。</p><p>2 数据源是mysql，使用实时平台抽取的：</p><p>hdfs元数据全部存放在 odsdb_global.ods_cdc_binlog_ori_inc_1h ，需要从该表抽取解析出单表的小时分区数据，如需要，再次加工为全量表。</p><p>表命名规则：raw<em>mysql</em>{源数据库名}<em>{源数据库表名}</em>{增全量}_{调度频率} 。</p><p>比如 odsdb_global.ods_cdc_binlog_ori_inc_1h → ods_mysql_panda_pdi_product_inc_1h (dt='yyyy-MM-dd')(当天数据做merge)→ ods_mysql_panda_pdi_product_full_1h  (dt='yyyy-MM-dd')(当天数据和历史所有数据做merge)。</p><p>3 数据源是Tidb库：</p><p>表命名规则：ods<em>tidb</em>{源数据库名}<em>{源数据库表名}</em>{增全量}_{调度频率} 。</p><p>比如: ods_tidb_tdb_zzinfoarchived_t_info_ext_archived_full_1d 。</p><p>4 数据源是日志：</p><p>表命名规则：ods<em>log</em>日志平台或来源<em>{自定义表名}</em>{增全量}_{调度频率} 。</p><p>比如 ods_log_sensors_bury_cold_inc_1d 。</p><p>5 数据源是es/mongo/redis/hbase/mq：</p><p>表命名规则：ods<em>es/mongo/redis/hbase/mq</em>{自定义表名}<em>{增全量}</em>{调度频率} 。</p><p>比如 ods_es_pdi_product_full_1d 。</p><p>6 数据源是外部的（如excel）：</p><p>表命名规则：ods<em>outside</em>{自定义表名}<em>{增全量}</em>{调度频率} 。</p><p>比如 ods_outside_pdi_product_full_1d 。</p><p>4 数仓表命名规范：</p><p>1 分层域命名规范：</p><p>dw<em>global/b2c/b2b/c2b/c2c . dw|dws</em>{一级数据域}<em>{二级数据域}</em>{业务过程}<em>XXXXX</em>{增全量}_{跑数频率}   </p><p>dim<em>global/b2c/b2b/c2b/c2c . dim</em>({一级数据域}<em>{二级数据域})_XXXXX</em>{增全量}_{跑数频率}</p><p>dm<em>global/b2c/b2b/c2b/c2c . dm</em>{数据主题域}<em>XXXXX</em>{增全量}_{跑数频率}</p><p>ads<em>global/b2c/b2b/c2b/c2c/afs/media/core. ads</em>{应用主题域}<em>XXXXX</em>{增全量}_{跑数频率}</p><p>tmp<em>global/b2c/b2b/c2b/c2c . tmp</em>目标表名<em>oa账号</em>[01...99]<!-- -->_yyyyMMdd</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">       临时表使用：按情况灵活考虑，建议优先使用with as语法（如果结果不占用太大内存情况下）代替临时表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       临时表清理：任务中默认清理2天前创建临时表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       临时表注意点：任务中使用临时表如果没有清理机制，发现一次，值班一次</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>***业务主题域 业务主题域划分规则(DW)’</p><p>***数据主题域  数据主题域划分规则(DM)’</p><p>***应用主题域  应用主题域划分规则(ADS)’</p><p>2 增全量更新方式命名规范：</p><p>增量：inc
全量：full
……
3 分区表调度频率命名规范：</p><p>秒、分钟：1s
小时(hour)：1h
天(day)：1d
周(week)：1w
月(month)：1m
季度(quarter)：1q
年(year)：1y
......
注意：单张表的分区每日新增不宜超过200个，分区太多导致文件分布太细，对集群namenode压力过大</p><p>4 非分区表表名时间粒度后面加：统一为”_0p”</p><p>示例</p><p>分区表</p><p>增量&amp;小时 更新	xxx_inc_1h	dt=yyyy-MM-dd-HH</p><p>全量&amp;小时 更新	xxx_full_1h	 dt=yyyy-MM-dd</p><p>增量&amp;天 更新	xxx_inc_1d	dt=yyyy-MM-dd</p><p>全量&amp;天 更新	xxx_full_1d	dt=yyyy-MM-dd</p><p>增量&amp;周 更新	xxx_inc_1w	dt=yyyy-MM-dd</p><p>全量&amp;周 更新	xxx_full_1w	dt=yyyy-MM-dd</p><p>5 分区字段</p><p>ods 、dw、dm、dim、ads 可视情况建分区表，分区字段统一为dt  。</p><p>ods 可视情况建分区表，非分区表无需保留dt字段。</p><p>dim不建议使用分区表，保留一份最新数据即可。</p><p>dw、dm建议使用分区表，不是分区表的，表中仍然需要保留dt字段，作用和分区字段dt同理，格式也同dt。</p><p>ads 是否使用分区表取决于每天的计算结果量， 每天跑批计算结果数据量千条以内的，ads不使用分区，其他可考虑分区。</p><p>ads 不管是不是分区 都需要加 stat_date ，作用和分区字段dt同理，格式也同dt。（主要是为了和回导mysql规范一致）</p><p>建表语句示例：</p><p>partitioned by (dt string comment '时间分区字段，形式yyyy-MM-dd')</p><p>partitioned by (dt string comment '时间分区字段，形式yyyy-MM-dd-HH')</p><p>partitioned by (dt string comment '时间分区字段，形式yyyy-MM')</p><p>partitioned by (dt string comment '时间分区字段，形式yyyy')</p><p>6 表注释规范</p><p>1、所有表(不区分hive表或ysql表)和字段的注释都必须使用comment语句增加注释,原则是简单明了且完整，能反映真实数据的。</p><p>2、字段单位注释规范，如：</p><p>金额举例 ：销售额(元)
价格举例：回收价(分)
重量举例：包裹重量(kg)
时间举例：发货时长(毫秒)</p><p>7 字段默认值规范</p><p>数仓内部的字段要求全部清洗，清洗以后除有意义值以外，全部使用默认值。</p><p>度量数值类型默认值：0</p><p>其他数值类型默认值：-9</p><p>字符串类型字段默认值：''</p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="数据仓库" term="数据仓库"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[离线数仓、实时数仓与 DataLakeHouse]]></title>
        <id>/离线数仓、实时数仓与 Data Lakehouse</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/离线数仓、实时数仓与 Data Lakehouse"/>
        <updated>2022-12-10T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[什么是数据仓库]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是数据仓库">什么是数据仓库<a class="hash-link" href="#什么是数据仓库" title="标题的直接链接">​</a></h2><p>数据仓库是一个为数据分析而设计的企业级数据管理系统。</p><blockquote><p>数据仓库可集中、整合多个信息源的大量数据，借助数据仓库的分析能力，企业可从数据中获得宝贵的信息进而改进决策。</p></blockquote><p>同时，随着时间的推移，数据仓库中积累的大量历史数据对于数据科学家和业务分析师也是十分宝贵的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是数据湖">什么是数据湖<a class="hash-link" href="#什么是数据湖" title="标题的直接链接">​</a></h2><p>数据湖（Data Lake）和数据库、数据仓库一样，都是数据存储的设计模式。</p><blockquote><p>数据库和数据仓库会以关系型的方式来设计存储、处理数据。但数据湖的设计理念是相反的，数据仓库是为了保障数据的质量、数据的一致性、数据的重用性等对数据进行结构化处理。</p></blockquote><p>数据湖是一个数据存储库，可以使用数据湖来存储大量的原始数据。</p><blockquote><p>现在企业的数据仓库都会通过分层的方式将数据存储在文件夹、文件中，而数据湖使用的是平面架构来存储数据。</p></blockquote><p>我们需要做的只是给每个数据元素分配一个唯一的标识符，并通过元数据标签来进行标注。</p><blockquote><p>当企业中出现业务问题时，可以从数据湖中查询数据，然后分析业务对应的那一小部分数据集来解决业务问题。</p></blockquote><p>了解过 Hadoop 的同学知道，基于 Hadoop 可以存储任意形式的数据。</p><blockquote><p>所以，很多时候数据湖会和 Hadoop 关联到一起。</p></blockquote><p>例如：把数据加载 Hadoop 中，然后将数据分析、和数据挖掘的工具基于 Hadoop 进行处理。</p><blockquote><p>数据湖越来越多的用于描述任何的大型数据池，数据都是以原始数据方式存储，知道需要查询应用数据的时候才会开始分析数据需求和应用架构。</p><p>数据湖是描述数据存储策略的方式，并不与具体的某个技术框架关联。数据库、数据仓库也一样。它们都是数据的管理策略。</p><p>数据湖是专注于原始数据保真以及低成本长期存储的存储设计模式，它相当于是对数据仓库的补充。</p><p>数据湖是用于长期存储数据容器的集合，通过数据湖可以大规模的捕获、加工、探索任何形式的原始数据。</p><p>通过使用一些低成本的技术，可以让下游设施可以更好地利用，下游设施包括像数据集市、数据仓库或者是机器学习模型。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据湖的优点">数据湖的优点<a class="hash-link" href="#数据湖的优点" title="标题的直接链接">​</a></h2><p>（1）提供不限数据类型的存储。</p><p>（2）开发人员和数据科学家可以快速动态建立数据模型、构建应用、查询数据，非常灵活。</p><p>（3）因为数据湖没有固定的结构，所以更易于访问。</p><p>（4）长期存储数据的成本低廉，数据湖可以安装在低成本的硬件在，例如：在一般的 X86 机器上部署 Hadoop。</p><p>（5）因为数据湖是非常灵活的，它允许使用多种不同的处理、分析方式来让数据发挥价值，例如：数据分析、实时分析、机器学习以及 SQL 查询都可以。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据湖与数据仓库对比">数据湖与数据仓库对比<a class="hash-link" href="#数据湖与数据仓库对比" title="标题的直接链接">​</a></h2><p>数据湖和数据仓库是用于存储大数据的两种不同策略，最大区别是：数据仓库是提前设计好模式（schema）的，因为数据仓库中存储的都是结构化数据。</p><p>而在数据湖中，不一定是这样的。数据湖中可以存储结构化和非结构化的数据，是无法预先定义好结构的。</p><p>我们来进一步进行对比：</p><p>（1）数据的存储位置不同</p><blockquote><p>数据仓库因为是要有结构的，在企业中很多都是基于关系型模型。而数据湖通常位于分布式存储例如 Hadoop 或者类似的大数据存储中。</p></blockquote><p>（2）数据源不同</p><blockquote><p>数据仓库的数据来源很多时候来自于 OLTP 应用的结构化数据库中提取的，用于支持内部的业务部门（例如：销售、市场、运营等部门）进行业务分析。</p><p>而数据湖的数据来源可以是结构化的、也可以是非结构化的，例如：业务系统数据库、IOT 设备、社交媒体、移动 APP 等。</p></blockquote><p>（3）用户不同</p><blockquote><p>数据仓库主要是业务系统的大量业务数据进行统计分析，所以会应用数据分析的部门是数据仓库的主要用户，例如：销售部、市场部、运营部、总裁办等等。</p><p>而当需要一个大型的存储，而当前没有明确的数据应用用户或者是目标，将来想要使用这些数据的人可以在使用时开始设计架构，此时，数据湖更适合。</p><p>但数据湖中的数据都是原始数据，是未经整理的，这对于普通的用户几乎是不可用的。</p><p>数据湖更适合数据科学家，因为数据科学家可以应用模型、技术发觉数据中的价值，去解决企业中的业务问题。</p></blockquote><p>（4）数据质量</p><blockquote><p>数据仓库是非常重数据质量的，大家现在经常听说的数据中台，其中有一大块是数据质量管理、数据资产管理等。</p><p>数据仓库中的数据都是经过处理的。</p><p>而数据湖中的数据可靠性是较差的，这些数据可能是任意状态、形态的数据。</p></blockquote><p>（5）数据模式</p><blockquote><p>数据仓库在数据写入之前就要定义好模式（schema），例如：我们会先建立模型、建立表结构，然后导入数据。</p><p>我们可以把它称之为 write-schema。</p><p>而数据湖中的数据是没有模式的，直到有用户要访问数据、使用数据才会建立 schema。</p><p>我们可以把它称之为 read-schema。</p></blockquote><p>（6）敏捷扩展性</p><blockquote><p>数据仓库的模式一旦建立，要重新调整模式，往往代价很大，牵一发而动全身，所有相关的 ETL 程序可能都需要调整。</p><p>而数据湖是非常灵活的，可以根据需要重新配置结构或者模式。</p><p>基于上述内容，我们可以了解到，数据湖和数据仓库的应用点是不一样的。他们是两种相对独立的数据设计模式。</p><p>在一些企业中，可能会既有数据湖、又有数据仓库。数据湖并不是要替代数据仓库，而是对企业的数据管理模式进行补充。</p></blockquote><p>（7）应用</p><blockquote><p>数据仓库一般用于做批处理报告、BI、可视化。</p><p>而数据湖主要用于机器学习、预测分析、数据探索和分析。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据湖应用">数据湖应用<a class="hash-link" href="#数据湖应用" title="标题的直接链接">​</a></h2><p>数据湖是用于数据存储的设计模式，但最终数据肯定是需要一种介质存储下来的。</p><blockquote><p>我们可以自己来选择数据湖的物理存储引擎。</p></blockquote><p>例如：使用 Hadoop 作为数据湖的物理存储引擎、或者使用 AWS 的 S3 作为存储引擎等。</p><blockquote><p>但架构数据湖时，需要注意几点原则，这几点原则也将和其他数据存储方法区别开来。</p></blockquote><p>可以加载各种源系统中的数据，并存储。</p><blockquote><p>任意类型的数据都可以存储。</p></blockquote><p>数据是以原始状态保存在数据湖中的，是几乎不需要做任何转换的。</p><blockquote><p>数据可以根据应用、分析的要求，进行转换成适合分析的模式</p></blockquote><p>构建数据湖时，为了方便数据的管理。我们可以建立一些管理办法，例如：</p><blockquote><p>将数据进行合理分类，例如：按照数据类型分类、按照业务内容分类、按照应用场景分类或者按照可能的用户来分类。</p></blockquote><p>为了方便数据湖的数据存取，要提前定义好命名规则和固定的文件目录结构。</p><blockquote><p>如果出现数据质量问题也可以解决掉。</p></blockquote><p>建立数据访问标准，可以追踪到哪些用户正在访问数据。</p><blockquote><p>让数据目录可以被检索到。</p></blockquote><p>提供一些加密、监控、授权、警报等功能。</p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="数据仓库" term="数据仓库"/>
        <category label="数据湖" term="数据湖"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac M1 Datasophon 安装]]></title>
        <id>/Mac M1 Datasophon 安装</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/Mac M1 Datasophon 安装"/>
        <updated>2022-11-21T18:41:11.000Z</updated>
        <summary type="html"><![CDATA[国产大数据运维部署系统]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是-datasophon">什么是 Datasophon<a class="hash-link" href="#什么是-datasophon" title="标题的直接链接">​</a></h2><p>DataSophon 是致力于自动化监控、运维、管理大数据基础组件和节点的，帮助您快速构建起稳定，高效的大数据集群服务。</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/203275795-397bdfb2-5510-4764-8948-9655016e8449.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="网络要求">网络要求<a class="hash-link" href="#网络要求" title="标题的直接链接">​</a></h3><p>要求各机器各组件正常运行提供如下的网络端口配置：</p><table><thead><tr><th><strong>组件</strong></th><th><strong>默认端口</strong></th><th align="center"><strong>说明</strong></th></tr></thead><tbody><tr><td>DDHApplicationServer</td><td>8081、2551、8586</td><td align="center">8081 为http server 端口，2551 为rpc 通信端口，8586 为 jmx 端口</td></tr><tr><td>WorkerApplicationServer</td><td>2552、9100、8585</td><td align="center">2552 rpc 通信端口，8585 为 jmx 端口，9100 为主机数据采集器端口</td></tr><tr><td>nginx</td><td>8888</td><td align="center">提供 UI 端通信端口</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="客户端浏览器要求">客户端浏览器要求<a class="hash-link" href="#客户端浏览器要求" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">推荐 Chrome 以及使用 Chrome 内核的较新版本浏览器访问前端可视化操作界面。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="关闭防火墙">关闭防火墙<a class="hash-link" href="#关闭防火墙" title="标题的直接链接">​</a></h3><p>各主机防火墙需关闭。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置主机-host">配置主机 host<a class="hash-link" href="#配置主机-host" title="标题的直接链接">​</a></h3><p>大数据集群所有机器需配置主机 host。</p><p>配置主机名： hostnamectl set-hostname  主机名</p><p>配置 /etc/hosts 文件</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="免密登录配置">免密登录配置<a class="hash-link" href="#免密登录配置" title="标题的直接链接">​</a></h3><p>部署机器中，DataSophon 节点以及大数据服务主节点与从节点之间需免密登录。</p><p>生成ssh 秘钥： ssh-keygen -m PEM -t rsa ，一路回车。</p><p>执行 ssh-copy-id 目标主机。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="环境要求">环境要求<a class="hash-link" href="#环境要求" title="标题的直接链接">​</a></h3><p>Jdk环境需安装。建议 mysql 版本为 5.7.X，并关闭 ssl。</p><p>(本机为 mysql 8)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="组件介绍">组件介绍<a class="hash-link" href="#组件介绍" title="标题的直接链接">​</a></h3><p>DDHApplicationServer 为 API 接口层即 web 后端，主要负责处理前端 UI 层的请求。该服务统一提供 RESTful api 向外部提供请求服务。 </p><p>WorkerApplicationServer 负责执行 DDHApplicationServer 发送的指令，包括服务安装、启动、停止、重启等指令。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="快速部署">快速部署<a class="hash-link" href="#快速部署" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="部署-mysql">部署 mysql<a class="hash-link" href="#部署-mysql" title="标题的直接链接">​</a></h3><p>mac m1 需尽可能先配置国内 yum 源否则容易出错例如配置华为云，做好用户 datasophon 用户授权(远程访问等权限)</p><p>注意需关闭 mysql ssl 功能。在部署过程中，部分组件会执行 sql 生成库表，不同环境的 mysql 在配置上存在差异，可根据 sql 执行情况，变更 mysql 配置。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="执行数据脚本">执行数据脚本<a class="hash-link" href="#执行数据脚本" title="标题的直接链接">​</a></h3><blockquote><p>mysql 5.7</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DATABASE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">IF</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">EXISTS</span><span class="token plain"> datasophon </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">CHARACTER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"> utf8</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">all</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">privileges</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> datasophon</span><span class="token variable" style="color:#36acaa">@"%"</span><span class="token plain"> identified </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'datasophon'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">option</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">GRANT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ALL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">PRIVILEGES</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ON</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TO</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'datasophon'</span><span class="token variable" style="color:#36acaa">@'%'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FLUSH </span><span class="token keyword" style="color:#00009f">PRIVILEGES</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>mysql 8</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">create</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">user</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'datasophon'</span><span class="token variable" style="color:#36acaa">@"localhost"</span><span class="token plain"> IDENTIFIED </span><span class="token keyword" style="color:#00009f">BY</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'datasophon'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">all</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">on</span><span class="token plain"> datasophon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"datasophon"</span><span class="token variable" style="color:#36acaa">@"localhost"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">grant</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">option</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FLUSH </span><span class="token keyword" style="color:#00009f">PRIVILEGES</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></blockquote><p>执行 datasophon-manager 安装目录 sql 目录下 datasophon.sql，创建数据表。</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">use</span><span class="token plain"> datasophon</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">source </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">opt</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">datasophon</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">manager</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1.0</span><span class="token number" style="color:#36acaa">.0</span><span class="token operator" style="color:#393A34">/</span><span class="token keyword" style="color:#00009f">sql</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">datasophon</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1.0</span><span class="token number" style="color:#36acaa">.0</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">sql</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装-nginx">安装 nginx<a class="hash-link" href="#安装-nginx" title="标题的直接链接">​</a></h2><p>提供 nginx.conf 的 server 配置。</p><p>vi /etc/nginx/nginx.conf </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                listen 8888;# 访问端口(自行修改)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                server_name localhost;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                #charset koi8-r;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                #access_log /var/log/nginx/host.access.log main;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                location / {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        root /usr/local/nginx/dist; # 前端解压的 dist 目录地址(自行修改，我这里是 yum 直接 install 了，这个目录需要自己创建)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        index index.html index.html;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                location /ddh {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_pass http://hadoop102:8081; # 接口地址(自行修改)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_set_header Host $host;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_set_header X-Real-IP $remote_addr;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_set_header x_real_ipP $remote_addr;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_set_header remote_addr $remote_addr;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_http_version 1.1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_connect_timeout 4s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_read_timeout 30s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_send_timeout 12s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_set_header Upgrade $http_upgrade;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        proxy_set_header Connection "upgrade";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                #error_page 404 /404.html;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                # redirect server error pages to the static page /50x.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                #</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                error_page 500 502 503 504 /50x.html;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                location = /50x.html {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        root /usr/share/nginx/html;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将 dist.zip 解压到 nginx 目录下，启动 nginx (前面配置 yum 源之后，这里很好安装)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="下载ddp部署包">下载DDP部署包<a class="hash-link" href="#下载ddp部署包" title="标题的直接链接">​</a></h2><p>DDP部署包下载地址：</p><p>链接: <a href="https://pan.baidu.com/s/1PMtFWOaYYR0X50X1E_618w?pwd=2t8h" target="_blank" rel="noopener noreferrer">https://pan.baidu.com/s/1PMtFWOaYYR0X50X1E_618w?pwd=2t8h</a> 提取码: 2t8h</p><p>在 /opt/datasophon 目录下创建目录</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p /opt/datasophon/DDP/packages</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将下载的部署包上传到 /opt/datasophon/DDP/packages 目录下，作为项目部署包仓库地址。(所有包都上传，软件的 arm 包并不特指 arrch64，jdk 可以使用自己的&lt;需在 /etc/profile 配置 java_home&gt;，也可以用包内的)</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/203034308-60047d40-663a-4850-8e02-3bb62895d98e.png" alt="img" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="部署-datasophon">部署 DataSophon<a class="hash-link" href="#部署-datasophon" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-部署目录介绍">1 部署目录介绍<a class="hash-link" href="#1-部署目录介绍" title="标题的直接链接">​</a></h3><p>在安装目录下解压 datasophon-manager-{version}.tar.gz，解压后可以看到如下安装目录：</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/203034500-d2b91aed-80f3-4aa5-b340-d19fd977f77c.png" alt="img" class="img_ev3q"> </p><p>bin：启动脚本 git</p><p>conf：配置文件</p><p>lib：项目依赖的 jar 包</p><p>logs: 项目日志存放目录</p><p>jmx：jmx 插件</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-修改配置">2 修改配置<a class="hash-link" href="#2-修改配置" title="标题的直接链接">​</a></h3><p>修改 conf 目录下的 application.yml 配置文件中数据库链接配置：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  datasource:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type: com.alibaba.druid.pool.DruidDataSource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    url: jdbc:mysql://hadoop102:3306/datasophon?useUnicode=true&amp;characterEncoding=utf-8&amp;allowPublicKeyRetrieval=true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    username: datasophon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    password: datasophon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将 mysql 8 驱动 cp 至 /opt/datasophon/datasophon-manager-1.0.0/lib/</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-启动服务">3 启动服务<a class="hash-link" href="#3-启动服务" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">启动：sh bin/datasophon-api.sh start api</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">停止：sh bin/datasophon-api.sh stop api</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">重启：sh bin/datasophon-api.sh restart api</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>部署成功后，可以进行日志查看，日志统一存放于 logs 文件夹内:</p><p> logs/</p><p>  ├── ddh-api.log</p><p>  ├── ddh-api-error.log</p><p>  |—— api-{hostname}.out</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="访问页面">访问页面<a class="hash-link" href="#访问页面" title="标题的直接链接">​</a></h3><p>访问前端页面地址,接口 ip (自行修改) <a href="http://192.168.xx.xx:12345/dolphinscheduler" target="_blank" rel="noopener noreferrer">http://172.16.69.202:8888</a> 默认用户名和密码为admin/admin123</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/34996528/203197828-89280ea2-b4ed-4678-93c6-44537308d10a.png" alt="img" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装服务">安装服务<a class="hash-link" href="#安装服务" title="标题的直接链接">​</a></h3><p>初始化配置集群先选择部署 AlertManager,Grafana 和 Prometheus 三个组件。DataSophon 依赖此三个组件实现系统监控告警管理。</p><p>然后优先安装 zk(高可用) 再安装其他服务</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="目前存在的问题">目前存在的问题<a class="hash-link" href="#目前存在的问题" title="标题的直接链接">​</a></h2><ol><li>文档尚不完善</li><li>log 日志不算齐全</li><li>工作进程关闭不顺畅(我这边测试关闭服务，部分服务节点还在，需手动 kill 掉。。。)</li></ol>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="管理平台" term="管理平台"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flink CDC 2.3.0 Announce]]></title>
        <id>/Flink CDC 2.3.0 Announce</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/Flink CDC 2.3.0 Announce"/>
        <updated>2022-11-18T21:47:11.000Z</updated>
        <summary type="html"><![CDATA[Flink CDC 2.3.0 近期发布]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" src="https://img-blog.csdnimg.cn/4ac4fbb159234e04acd3b6fe865ce53f.png" alt="在这里插入图片描述" class="img_ev3q"></p><h1>新连接器</h1><p>2.3.0 新增了 DB2 CDC 连接器</p><h1>增量快照迎来新的连接器成员</h1><p>2.3.0 版本MongoDB CDC，Oracle CDC 两大连接器均支持了增量快照，实现无锁读取+并发读取+断点续传</p><h1>优化</h1><p>2.3.0 版本 MySQL CDC 连接器性能和稳定性大幅提升</p><h1>Flink 支持</h1><p>2.3.0 版本一口气兼容了Flink 1.13 &amp; 1.14 &amp; 1.15 &amp; 1.16 四个版本</p><h1>更多细节</h1><p>MySQL CDC 支持指定位点/指定时间戳/earliest位点启动</p><p>MySQL CDC 支持异步分片，支持checkpoint期间分片暂停</p><p>MySQL CDC 支持全部字符集，支持宽容默认值，支持自动获取数据库时区</p><p>MySQL CDC JM内存和TM内存优化，binlog读取性能优化</p><p>OceanBase CDC 修复了时区问题，支持全类型对接到 Flink SQL</p><p>MongoDB CDC 支持了更多的数据类型，优化了捕获表的筛选过程</p><p>TiDB CDC 修复了全增量切换时数据丢失问题，支持读取时 region切换</p><p>Postgres CDC 支持的更多的类型，开放了更多配置项</p><p>SqlServer CDC 支持了更多的版本，完善了文档</p><p>MySQL CDC 和 OceanBase CDC 提供了中文文档，OceanBase CDC 提供了视频教程</p><p>详细 release note 在这里，可以查看所有issue 细节</p><p><a href="https://github.com/ververica/flink-cdc-connectors/releases" target="_blank" rel="noopener noreferrer">https://github.com/ververica/flink-cdc-connectors/releases</a></p><p>Flink cdc 钉钉群</p><p>群号：33121212</p><p>二维码：
<img loading="lazy" src="https://user-images.githubusercontent.com/9601882/158350201-a1de35e6-0399-4a91-b5b0-e2fd5d33e33c.png" alt="扫码加入" class="img_ev3q"></p><p>内容参考 flink cdc 发布群公告</p><p>鸣谢 雪尽老师</p>]]></content>
        <author>
            <name>skylines</name>
            <uri>https://github.com/rookiegao</uri>
        </author>
        <category label="数据集成" term="数据集成"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[debezium to oracle 11g 实时同步]]></title>
        <id>/debezium to oracle 11g 实时同步</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/debezium to oracle 11g 实时同步"/>
        <updated>2021-11-21T09:24:31.000Z</updated>
        <summary type="html"><![CDATA[使用 debezium 对 oracle 数据进行采集]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="第1章-debezium概述">第1章 debezium概述<a class="hash-link" href="#第1章-debezium概述" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="11-debezium是什么">1.1 debezium是什么<a class="hash-link" href="#11-debezium是什么" title="标题的直接链接">​</a></h3><p> Debezium 是一组分布式服务，用于捕获数据库中的更改，以便您的应用程序可以查看这些更改并对其做出响应。 Debezium 在更改事件流中记录每个数据库表中的所有行级更改，应用程序只需读取这些流以查看更改事件发生的相同顺序。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="12-debezium的依赖">1.2 debezium的依赖<a class="hash-link" href="#12-debezium的依赖" title="标题的直接链接">​</a></h3><p>Debezium 构建在 Apache Kafka 之上，并提供与 Kafka Connect 兼容的连接器，用于监控特定的数据库管理系统。 Debezium 在 Kafka 日志中记录数据更改的历史记录，从您的应用程序使用它们的位置。 这使您的应用程序可以轻松正确且完整地使用所有事件。 即使您的应用程序意外停止，它也不会错过任何内容：当应用程序重新启动时，它将继续使用它停止的事件。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第2章-环境搭建">第2章 环境搭建<a class="hash-link" href="#第2章-环境搭建" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="21-所需软件及测试版本">2.1 所需软件及测试版本<a class="hash-link" href="#21-所需软件及测试版本" title="标题的直接链接">​</a></h3><p>jdk-8u211-linux-x64.tar.gz</p><p>apache-zookeeper-3.5.7-bin.tar.gz</p><p>kafka_2.11-2.4.0.tgz</p><p>debezium-connector-oracle-1.7.0.Final-plugin.tar.gz</p><p>instantclient-basic-linux.x64-21.3.0.0.0.zip (oracle客户端)</p><p>oracle 11g R2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="22-数据库准备">2.2 数据库准备<a class="hash-link" href="#22-数据库准备" title="标题的直接链接">​</a></h3><p>（1）设置Oracle LogMiner所需的配置</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 config]# su - oracle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[oracle@tDataAnalysis01 config]$ sqlplus / as sysdba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; alter system set db_recovery_file_dest_size = 10G;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; shutdown immediate;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; startup mount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; alter database archivelog;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; alter database open;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）保证Database log mode显示为Archive Mode</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; archive log list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）启用补充日志记录,（所有表都得执行，表里须至少一条数据）</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; ALTER DATABASE add SUPPLEMENTAL LOG DATA ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; ALTER TABLE 库.表 ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Debezium Oracle连接器要求使用特定权限设置用户账号，以便连接器捕获更多事件。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CREATE TABLESPACE logminer_tbs DATAFILE '/opt/oracle/oradata/ORCLCDB/logminer_tbs.dbf'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SIZE 25M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CREATE USER debezium IDENTIFIED BY 123456</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DEFAULT TABLESPACE TEST0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    QUOTA UNLIMITED ON TEST0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT CREATE SESSION TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$DATABASE to debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT FLASHBACK ANY TABLE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ANY TABLE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT_CATALOG_ROLE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT EXECUTE_CATALOG_ROLE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ANY TRANSACTION TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT CREATE TABLE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT LOCK ANY TABLE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT ALTER ANY TABLE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT CREATE SEQUENCE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT EXECUTE ON DBMS_LOGMNR TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT EXECUTE ON DBMS_LOGMNR_D TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$LOG TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$LOG_HISTORY TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$LOGMNR_LOGS TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$LOGMNR_CONTENTS TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$LOGMNR_PARAMETERS TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$LOGFILE TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$ARCHIVED_LOG TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  GRANT SELECT ON V_$ARCHIVE_DEST_STATUS TO debezium ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  exit;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="23部署连接器">2.3部署连接器<a class="hash-link" href="#23部署连接器" title="标题的直接链接">​</a></h3><p>（1）进入到oracle客户端目录中，将xstreams.jar和ojbc8.jar复制到kafka lib下，并分发给02，03两台机器。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 ~]# cd /opt/oracle/ instantclient_21_3/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# cp xstreams.jar /opt/module/kafka_2.11-2.4.0/libs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# cp ojdbc8.jar /opt/module/kafka_2.11-2.4.0/libs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# scp xstreams.jar tDataAnalysis02:/opt/module/kafka_2.11-2.4.0/libs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# scp ojdbc8.jar tDataAnalysis02:/opt/module/kafka_2.11-2.4.0/libs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# scp xstreams.jar tDataAnalysis03:/opt/module/kafka_2.11-2.4.0/libs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# scp ojdbc8.jar tDataAnalysis03:/opt/module/kafka_2.11-2.4.0/libs/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）增加LD_LIBRARY_PATH环境变量，指向oracle client路径(每个节点都配置)</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# vim /etc/profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 instantclient_21_3]# source /etc/profile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）创建kafka plugins文件夹</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 software]# mkdir -p /usr/local/share/kafka/plugins/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）上传debezium-connector-oracle-1.7.0.Final-plugin.tar.gz
，解压到kafka plugins目录</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 software]# tar -zxvf debezium-connector-oracle-1.7.0.Final-plugin.tar.gz -C /usr/local/share/kafka/plugins/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（5）再次修改kafka下的connect-distributed.properties文件，添加plugins路径</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 software]# cd /opt/module/kafka_2.11-2.4.0/config/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 config]# vim connect-distributed.properties </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">plugin.path=/usr/local/share/kafka/plugins/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（6）分发plugins文件夹,分发connect-distributed.properties</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 config]# scp -r /usr/local/share/kafka/  tDataAnalysis02:/usr/local/share/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 config]# scp -r /usr/local/share/kafka/  tDataAnalysis03:/usr/local/share/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 config]# scp connect-distributed.properties  tDataAnalysis02:/opt/module/kafka_2.11-2.4.0/config/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 config]# scp connect-distributed.properties  tDataAnalysis03:/opt/module/kafka_2.11-2.4.0/config/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（7）启动kafka connector</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis01 kafka_2.11-2.4.0]# bin/connect-distributed.sh -daemon config/connect-distributed.properties</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis02 kafka_2.11-2.4.0]# bin/connect-distributed.sh -daemon config/connect-distributed.properties</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@tDataAnalysis03 kafka_2.11-2.4.0]# bin/connect-distributed.sh -daemon config/connect-distributed.properties</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（8）查看进程</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">25010 Kafka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">25555 ConnectDistributed</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第3章启动debezium">第3章启动Debezium<a class="hash-link" href="#第3章启动debezium" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="31-测试任务启动">3.1 测试任务启动<a class="hash-link" href="#31-测试任务启动" title="标题的直接链接">​</a></h3><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl -H "Content-Type: application/json" -X POST -d  '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       "name" : "oracle-connector",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       "config" : {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "connector.class" : "io.debezium.connector.oracle.OracleConnector",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.hostname" : "xxx.xxx.16.53",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.port" : "1522",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.user" : "debezium",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.password" : "123456",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.dbname": "ORCL",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.server.name" : "orcl6",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.history.kafka.topic" : "schema-changes.inventory5",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.history.kafka.bootstrap.servers" : "tDataAnalysis01:9092,tDataAnalysis02:9092,tDataAnalysis03:9092",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "snapshot.mode" : "initial",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "schema.include.list" : "c##HAHA123",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "table.include.list" : "c##HAHA123.CIRCLE",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.oracle.version": "11", </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "database.tablename.case.insensitive": "false",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "decimal.handling.mode" : "string"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}' http://tDataAnalysis01:8083/connectors</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>测试任务这里我使用了初始化快照</strong></p><p>查看kafka topic</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bin/kafka-topics.sh --bootstrap-server tDataAnalysis01:9092 --list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FlinkError</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">__consumer_offsets</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">connect-oracle-configs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">connect-oracle-offsets</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">connect-oracle-status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">flumeError</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myTest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">orcl6.C__HAHA123.CIRCLE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">schema-changes.inventory5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看connect状态</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -H </span><span class="token string" style="color:#e3116c">"Accept:application/json"</span><span class="token plain"> tDataAnalysis01:8083/connectors/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"oracle-connector"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@tDataAnalysis02 kafka</span><span class="token punctuation" style="color:#393A34">]</span><span class="token comment" style="color:#999988;font-style:italic">#</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>插入数据后</p><p>消费topic</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bin/kafka-console-consumer.sh --bootstrap-server tDataAnalysis01:9092 --topic orcl6.C__HAHA123.CIRCLE --from-beginning</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>数据格式</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"schema"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"struct"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"fields"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"struct"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"fields"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SERIALNO"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"FILEPATH"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PARTID"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"STAFFNO"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"int64"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"io.debezium.time.Timestamp"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"version"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"RECORDTIME"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"orcl6.C__HAHA123.CIRCLE.Value"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"before"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"struct"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"fields"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SERIALNO"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"FILEPATH"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PARTID"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"STAFFNO"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"int64"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"io.debezium.time.Timestamp"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"version"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"RECORDTIME"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"orcl6.C__HAHA123.CIRCLE.Value"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"after"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"struct"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"fields"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"version"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"connector"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"int64"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ts_ms"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"io.debezium.data.Enum"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"version"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"parameters"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token string" style="color:#e3116c">"allowed"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true,last,false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"default"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"false"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"snapshot"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"db"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sequence"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"schema"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"table"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"txId"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"scn"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"commit_scn"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"lcr_position"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"io.debezium.connector.oracle.Source"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"source"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"op"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"int64"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ts_ms"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"struct"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"fields"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"int64"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"total_order"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"int64"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"data_collection_order"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> true, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"field"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"transaction"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"optional"</span><span class="token builtin class-name">:</span><span class="token plain"> false, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"orcl6.C__HAHA123.CIRCLE.Envelope"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"payload"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"before"</span><span class="token builtin class-name">:</span><span class="token plain"> null, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"after"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"SERIALNO"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"1209"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"FILEPATH"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"vqrouj"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"PARTID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"5606"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"STAFFNO"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"YTCZ060002"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"RECORDTIME"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1329061915000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"source"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"version"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"1.7.0.Final"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"connector"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"oracle"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"orcl6"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"ts_ms"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1634660571000</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"snapshot"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"false"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"db"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ORCL"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"sequence"</span><span class="token builtin class-name">:</span><span class="token plain"> null, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"schema"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"C##HAHA123"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"table"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CIRCLE"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"txId"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"05000300282e0000"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"scn"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"19202446"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"commit_scn"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"19202478"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"lcr_position"</span><span class="token builtin class-name">:</span><span class="token plain"> null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"op"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"c"</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"ts_ms"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1634631840937</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"transaction"</span><span class="token builtin class-name">:</span><span class="token plain"> null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>删除connect </p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -v -X DELETE http://tDataAnalysis01:8083/connectors/oracle-connector</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>访问 8083端口可查看 connect状态</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tDataAnalysis03:8083/connectors/oracle-connector/status</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="32-oracle归档日志过多解决磁盘很大可以忽略">3.2 Oracle归档日志过多解决(磁盘很大可以忽略)<a class="hash-link" href="#32-oracle归档日志过多解决磁盘很大可以忽略" title="标题的直接链接">​</a></h3><p>测试中因为日志写入过快问题导致磁盘被写满，使得Oracle数据库极不稳定</p><p>日志不允许物理删除，应通过rman target /</p><p>执行 </p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">delete noprompt archivelog </span><span class="token keyword" style="color:#00009f">until</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">time</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'sysdate-1/24'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>脚本处理</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 由于连接器是依赖于Oracle的归档日志做的实时同步</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 存在归档日志撑爆磁盘的问题</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#! /bin/bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">exec</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> /xxx/oracle/oracle_log/del_arch</span><span class="token variable" style="color:#36acaa">`</span><span class="token variable function" style="color:#d73a49">date</span><span class="token variable" style="color:#36acaa"> +%F-%H</span><span class="token variable" style="color:#36acaa">`</span><span class="token plain">.log </span><span class="token comment" style="color:#999988;font-style:italic">#记录脚本日志</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$ORACLE_HOME</span><span class="token plain">/bin/rman target / </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">#检查归档日志</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">crosscheck archivelog all;</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">#删除所有过期日志</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">delete noprompt expired archivelog all;</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">#删除一个小时前的归档日志</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">delete noprompt archivelog until time 'sysdate-1/24';</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">exit;</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="33-新增表问题">3.3 新增表问题<a class="hash-link" href="#33-新增表问题" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="331-第一种解决方案">3.3.1 第一种解决方案<a class="hash-link" href="#331-第一种解决方案" title="标题的直接链接">​</a></h4><p>第一次安装Debezium,可以监控到数据库中表的初始表，但是后续再建表并且增加SUPPLEMENTAL LOG DATA，Connector是无法捕获到的。
解决方案：
再提交一个新的connecotr,用来监控后续创建的表</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -H </span><span class="token string" style="color:#e3116c">"Content-Type: application/json"</span><span class="token plain"> -X POST -d  </span><span class="token string" style="color:#e3116c">'{</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">       "name" : "oracle-connector2",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">       "config" : {</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "connector.class" : "io.debezium.connector.oracle.OracleConnector",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.hostname" : "xxx.xxx.16.53",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.port" : "1522",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.user" : "debezium",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.password" : "123456",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.dbname": "ORCL",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.server.name" : "orcl7",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.history.kafka.topic" : "schema-changes.inventory6",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.history.kafka.bootstrap.servers" : "tDataAnalysis01:9092,tDataAnalysis02:9092,tDataAnalysis03:9092",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "snapshot.mode" : "initial",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "schema.include.list" : "c##HAHA123",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "table.include.list" : "c##HAHA123.CIRCLE2",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.oracle.version": "11", </span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "database.tablename.case.insensitive": "false",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">           "decimal.handling.mode" : "string"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"> }</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">}'</span><span class="token plain"> http://tDataAnalysis01:8083/connectors</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>那么可以使用参数table.include.list指定所需的监控的表，或者使用table.exclude.list指定不需要监控的表，二者只能选一个使用(这个方案实测通过，可以正常收数据)</p><p>查看连接器状态：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -H </span><span class="token string" style="color:#e3116c">"Accept:application/json"</span><span class="token plain"> tDataAnalysis01:8083/connectors/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"oracle-connector2"</span><span class="token plain">,</span><span class="token string" style="color:#e3116c">"oracle-connector"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">root@tDataAnalysis02 kafka</span><span class="token punctuation" style="color:#393A34">]</span><span class="token comment" style="color:#999988;font-style:italic">#</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="332第二种解决方案">3.3.2第二种解决方案<a class="hash-link" href="#332第二种解决方案" title="标题的直接链接">​</a></h4><p>*最新测试 根据社区回复</p><p><img loading="lazy" src="https://img-blog.csdnimg.cn/910a6a1d318d4c11b557b36d2a0a91b0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6I-c6bifQ29kZXJz,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" class="img_ev3q">
<strong>新表可通过停止原有任务，修改配置参数，重新启动任务，旧表数据不受影响，底层存有偏移量，数据同步可以追溯 快照方式为 schema_only</strong></p><p>建议： 我们的oracle数据库本身数据量存储量应该是不小的，我在测试中为方便快照为初始化，生产中建议schema_only 为增量读取以避免任务长时间运行造成失败。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="34-注意事项">3.4 注意事项<a class="hash-link" href="#34-注意事项" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="341配置-debezium-主题">3.4.1配置 Debezium 主题<a class="hash-link" href="#341配置-debezium-主题" title="标题的直接链接">​</a></h4><p>Debezium 使用（通过 Kafka Connect 或直接）多个主题来存储数据。 这些主题必须由管理员或 Kafka 本身通过启用主题的自动创建来创建。
有一些适用于主题的限制和建议：</p><p>数据库历史主题（适用于 MySQL 和 SQL Server 的 Debezium 连接器）
无限（或非常长）保留（无压缩！）
生产的复制因子至少为 3
单分区</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="342其他主题">3.4.2其他主题<a class="hash-link" href="#342其他主题" title="标题的直接链接">​</a></h4><p>可选地，启用日志压缩（如果您希望只保留给定记录的最后一个更改事件）； 在这种情况下，应配置 Apache Kafka 中的 min.compaction.lag.ms 和 delete.retention.ms 主题级别设置，以便消费者有足够的时间接收所有事件并删除标记； 具体来说，这些值应大于您预期的接收器连接器的最大停机时间，例如 更新它们时
在生产中复制</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="343单分区">3.4.3单分区<a class="hash-link" href="#343单分区" title="标题的直接链接">​</a></h4><p>您可以放宽单分区规则，但您的应用程序必须处理数据库中不同行的乱序事件（单行的事件仍然是完全有序的）。 如果使用多个分区，Kafka默认会通过对key进行hash来确定分区。 其他分区策略需要使用 SMT 为每个记录设置分区号。
有关可自定义的主题自动创建（自 Kafka Connect 2.6.0 起可用），请参阅自定义主题自动创建</p><p><strong>官网对于数据库历史主题虽只提到MySQL，SQL server，但是实际测试中如果schema-changes.inventory5 主题被误删，connect将报错，只有将ddl语句重新插入进去，才可以恢复正常，且oracle 连接器快照目前只支持schema_only，initial 。临时快照和增量快照尚在孵化中</strong></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="344关于对oracle-数据库压力的问题">3.4.4关于对oracle 数据库压力的问题<a class="hash-link" href="#344关于对oracle-数据库压力的问题" title="标题的直接链接">​</a></h4><p><img loading="lazy" src="https://img-blog.csdnimg.cn/286d681d969542f88248bd3c5e622794.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6I-c6bifQ29kZXJz,size_20,color_FFFFFF,t_70,g_se,x_16" alt="社区大佬的回复" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="35-错误处理">3.5 错误处理<a class="hash-link" href="#35-错误处理" title="标题的直接链接">​</a></h3><p>如出现不能识别oracle版本或其他错误，请前往xx01(post请求后缀为01)节点所在Kafka logs目录
执行</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">tail</span><span class="token plain"> -200 connectDistributed.out</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看具体日志</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="351不能识别jdbc驱动">3.5.1不能识别jdbc驱动？<a class="hash-link" href="#351不能识别jdbc驱动" title="标题的直接链接">​</a></h4><p>先去看oracle配置，确保host，port，sid等无误，另外判断ojdbc8.jar是否被识别到，可以尝试重启Kafka 以及Kafka connect 或直接新装一套Kafka集群进行验证。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="352-kafka以及kafka-connect重启问题">3.5.2 Kafka以及Kafka connect重启问题<a class="hash-link" href="#352-kafka以及kafka-connect重启问题" title="标题的直接链接">​</a></h4><p>Kafka(暴力杀死，重启会有冲突) 不允许kill -9 杀掉进程 应使用命令停止，Kafka通常关闭较慢，确认集群Kafka关闭后再重启 各个节点执行停止或重启，cdh版在控制台启停即可。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/opt/module/kafka/bin/kafka-server-stop.sh -daemon /opt/module/kafka/config/server.properties</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如需重启 Kafka connect服务
Kafka connect kill -9 杀掉所有节点即可
启动命令</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/opt/module/kafka/bin/connect-distributed.sh -daemon /opt/module/kafka/config/connect-distributed.properties </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="标题的直接链接">​</a></h2><p><a href="https://debezium.io/documentation/reference/1.7/connectors/oracle.html#oracle-overview%20%20%E5%B0%9A%E7%A1%85%E8%B0%B7%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E4%B9%8BOracle%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88.doc%20%28debezium%20to%20oracle%2019%20c%29%20%20https://blog.51cto.com/tiany/1552783%20%20https://www.codeleading.com/article/64945986138/%20%20https://my.oschina.net/dacoolbaby/blog/4320036%20%20https://my.oschina.net/dacoolbaby/blog/3191882%20%20https://www.cnblogs.com/yaowentao/p/14944739.html" target="_blank" rel="noopener noreferrer">https://debezium.io/documentation/reference/1.7/connectors/oracle.html#oracle-overview</a></p><p>尚硅谷大数据技术之Oracle实时同步方案.doc (debezium to oracle 19 c)</p><p><a href="https://blog.51cto.com/tiany/1552783" target="_blank" rel="noopener noreferrer">https://blog.51cto.com/tiany/1552783</a></p><p><a href="https://www.codeleading.com/article/64945986138/" target="_blank" rel="noopener noreferrer">https://www.codeleading.com/article/64945986138/</a></p><p><a href="https://my.oschina.net/dacoolbaby/blog/4320036" target="_blank" rel="noopener noreferrer">https://my.oschina.net/dacoolbaby/blog/4320036</a></p><p><a href="https://my.oschina.net/dacoolbaby/blog/3191882" target="_blank" rel="noopener noreferrer">https://my.oschina.net/dacoolbaby/blog/3191882</a></p><p><a href="https://www.cnblogs.com/yaowentao/p/14944739.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/yaowentao/p/14944739.html</a></p>]]></content>
        <author>
            <name>青涩的芒果汁</name>
            <uri>https://blog.csdn.net/weixin_40898246/article/details/120880414?spm=1001.2014.3001.5501</uri>
        </author>
        <category label="数据集成" term="数据集成"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ambari 入门及安装]]></title>
        <id>/Ambari 入门及安装</id>
        <link href="https://sophiadata.github.io/Bigdata_Blog_Website/blog/Ambari 入门及安装"/>
        <updated>2020-11-07T18:11:11.000Z</updated>
        <summary type="html"><![CDATA[使用 Ambari 对 apache 框架进行管理]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是-ambari">什么是 Ambari<a class="hash-link" href="#什么是-ambari" title="标题的直接链接">​</a></h2><p>Apache Ambari 项目旨在通过开发用于配置，管理和监控 Apache Hadoop 集群的软件来简化 Hadoop 管理。Ambari 提供了一个直观，易用的 Hadoop 管理 Web UI。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ambari-的功能">Ambari 的功能<a class="hash-link" href="#ambari-的功能" title="标题的直接链接">​</a></h2><p>提供了跨任意数量的主机安装 Hadoop 服务的分步向导。</p><p>处理群集的 Hadoop 服务配置。</p><p>提供集中管理，用于在整个集群中启动，停止和重新配置 Hadoop 服务。</p><p>提供了一个仪表板，用于监控 Hadoop 集群的运行状况和状态。</p><p>利用 Ambari 指标系统进行指标收集。</p><p>利用 Ambari Alert Framework 进行系统警报，并在需要您注意时通知您（例如，节点出现故障，剩余磁盘空间不足等）。</p><h1>环境准备</h1><p>注意：以下操作三台机器都需要进行</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="虚拟机准备">虚拟机准备<a class="hash-link" href="#虚拟机准备" title="标题的直接链接">​</a></h2><p>克隆三台虚拟机（hadoop102、hadoop103、hadoop104），配置好对应主机的网络 IP、主机名称、关闭防火墙。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# chkconfig iptables off</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# service iptables stop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# chkconfig --list iptables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iptables        0:关闭  1:关闭  2:关闭  3:关闭  4:关闭  5:关闭  6:关闭</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="关闭-selinux">关闭 SELINUX<a class="hash-link" href="#关闭-selinux" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# vim /etc/sysconfig/selinux</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将 SELINUX=enforcing 改为 SELINUX=disabled
执行该命令后重启机器生效</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装-jdk">安装 JDK<a class="hash-link" href="#安装-jdk" title="标题的直接链接">​</a></h2><p>1）在 hadoop102 的 /opt 目录下创建 module 和 software 文件夹</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 opt]# mkdir module</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 opt]# mkdir software</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）用 SecureCRT 将 jdk-8u144-linux-x64.tar.gz 导入到 hadoop102 的 /opt/software 目录下
3）在 Linux 系统下的 opt 目录中查看软件包是否导入成功</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]$ ls</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jdk-8u144-linux-x64.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）解压 JDK 到 /opt/module 目录下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]$ tar -zxvf jdk-8u144-linux-x64.tar.gz -C /opt/module/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5）配置 JDK 环境变量</p><p>（1）先获取 JDK 路径</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 jdk1.8.0_144]$ pwd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/opt/module/jdk1.8.0_144</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）打开 /etc/profile 文件</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]$ vi /etc/profile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在 profile 文件末尾添加JDK路径</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#JAVA_HOME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export JAVA_HOME=/opt/module/jdk1.8.0_144</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$JAVA_HOME/bin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）保存后退出</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">:wq</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）让修改后的文件生效</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 jdk1.8.0_144]$ source /etc/profile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6）测试 JDK 是否安装成功</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 jdk1.8.0_144]# java -version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">java version "1.8.0_144"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>7）将 hadoop102 中的 JDK 和环境变量分发到 hadoop103、hadoop104 两台主机</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 opt]# xsync /opt/module/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 opt]# xsync /etc/profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">分别在hadoop103、hadoop104上source一下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop103 ~]$ source /etc/profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop104 ~]# source /etc/profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ssh免密登录">SSH免密登录<a class="hash-link" href="#ssh免密登录" title="标题的直接链接">​</a></h2><p>配置 hadoop102 对 hadoop102、hadoop103、hadoop104 三台主机的免密登陆。</p><p>1）生成公钥和私钥：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 .ssh]$ ssh-keygen -t rsa</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后敲（三个回车），就会生成两个文件 id_rsa（私钥）、id_rsa.pub（公钥）</p><p>2）将公钥拷贝到要免密登录的目标机器上</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 .ssh]$ ssh-copy-id hadoop102</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 .ssh]$ ssh-copy-id hadoop103</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 .ssh]$ ssh-copy-id hadoop104</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="修改-yum-源为阿里云镜像">修改 yum 源为阿里云镜像<a class="hash-link" href="#修改-yum-源为阿里云镜像" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 yum.repos.d]# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 yum.repos.d]# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//把服务器的包下载到本地缓存</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 yum.repos.d]# yum makecache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装-ntp">安装 ntp<a class="hash-link" href="#安装-ntp" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# yum install -y ntp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# chkconfig --list ntpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# chkconfig ntpd on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# service ntpd start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="关闭-linux-的-thp-服务">关闭 Linux 的 THP 服务<a class="hash-link" href="#关闭-linux-的-thp-服务" title="标题的直接链接">​</a></h2><p>如果不关闭 transparent_hugepage，HDFS 会因为这个性能严重受影响。
关闭 transparent_hugepage 方法是：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# vim /etc/grub.conf </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">添加 transparent_hugepage=never</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]#     vim /etc/rc.local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">添加：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if test -f /sys/kernel/mm/transparent_hugepage/defrag; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if test -f /sys/kernel/mm/transparent_hugepage/enabled; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exit 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>重启之后，用下面的命令检查：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 yum.repos.d]# </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat /sys/kernel/mm/redhat_transparent_hugepage/enabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">always madvise [never]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>有 <!-- -->[never]<!-- --> 则表示 THP 被禁用</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置-umask">配置 UMASK<a class="hash-link" href="#配置-umask" title="标题的直接链接">​</a></h2><p>设定用户所创建目录的初始权限</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# umask 0022</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="禁止离线更新">禁止离线更新<a class="hash-link" href="#禁止离线更新" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vim /etc/yum/pluginconf.d/refresh-packagekit.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>修改：enabled=0</p><h1>安装 Ambari 集群</h1><p>注意：以下操作主节点操作即可</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="制作本地源">制作本地源<a class="hash-link" href="#制作本地源" title="标题的直接链接">​</a></h2><p>制作本地源是因为在线安装Ambari太慢。制作本地源只需在主节点上进行。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置-httpd-服务">配置 HTTPD 服务<a class="hash-link" href="#配置-httpd-服务" title="标题的直接链接">​</a></h3><p>配置 HTTPD 服务到系统层使其随系统自动启动</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# chkconfig httpd on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# service httpd start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装工具">安装工具<a class="hash-link" href="#安装工具" title="标题的直接链接">​</a></h3><p>安装本地源制作相关工具</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# yum install yum-utils createrepo yum-plugin-priorities -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# vim /etc/yum/pluginconf.d/priorities.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>添加 gpgcheck=0</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="将下载的-3-个-tar包-解压">将下载的 3 个 tar包 解压<a class="hash-link" href="#将下载的-3-个-tar包-解压" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# tar -zxvf /opt/software/ambari-2.5.0.3-centos6.tar.gz -C /var/www/html/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]mkdir /var/www/html/hdp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# tar -zxvf /opt/software/HDP-2.6.0.3-centos6-rpm.tar.gz -C /var/www/html/hdp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# tar -zxvf /opt/software/HDP-UTILS-1.1.0.21-centos6.tar.gz -C /var/www/html/hdp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="创建本地源">创建本地源<a class="hash-link" href="#创建本地源" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# cd /var/www/html/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 html]# createrepo  ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="将-ambari-存储库文件下载到安装主机上的目录中">将 Ambari 存储库文件下载到安装主机上的目录中<a class="hash-link" href="#将-ambari-存储库文件下载到安装主机上的目录中" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 yum.repos.d]# wget -nv http://public-repo-1.hortonworks.com/ambari/centos6/2.x/updates/2.6.1.5/ambari.repo -O /etc/yum.repos.d/ambari.repo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修改配置文件配置为本地源">修改配置文件，配置为本地源<a class="hash-link" href="#修改配置文件配置为本地源" title="标题的直接链接">​</a></h3><p>修改 ambari.repo，配置为本地源</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 html]# vim /etc/yum.repos.d/ambari.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#VERSION_NUMBER=2.6.1.5-3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ambari-2.6.1.5]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name=ambari Version - ambari-2.6.1.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">baseurl=http://hadoop102/ambari/centos6/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgcheck=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgkey=http://hadoop102/ambari/centos6/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enabled=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>修改 hdp-util.repo，配置为本地源</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 hdp]# vim /var/www/html/hdp/hdp-util.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[HDP-UTILS-1.1.0.21]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name=Hortonworks Data Platform Version - HDP-UTILS-1.1.0.21</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">baseurl=http://hadoop102/hdp/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgcheck=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enabled=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>修改 hdp.repo，配置为本地源</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 centos6]# </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vim /var/www/html/hdp/HDP/centos6/hdp.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#VERSION_NUMBER=2.6.0.3-8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[HDP-2.6.0.3]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name=HDP Version - HDP-2.6.0.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">baseurl=http://hadoop102/hdp/HDP/centos6/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgcheck=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgkey=http://hadoop102/hdp/HDP/centos6/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enabled=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[HDP-UTILS-1.1.0.21]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name=HDP-UTILS Version - HDP-UTILS-1.1.0.21</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">baseurl=http://hadoop102/hdp/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgcheck=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gpgkey=http://hadoop102/hdp/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enabled=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# yum clean all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# yum makecache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">查看是否有 Ambari</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 ~]# yum repolist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看 Ambari 与 HDP 资源的资源库。
也可以打开浏览器查看一下：
http://hadoop102/ambari/centos6/
http://hadoop102/hdp/HDP/centos6/
http://hadoop102/hdp/</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装-mysql">安装 MySQL<a class="hash-link" href="#安装-mysql" title="标题的直接链接">​</a></h2><p>Ambari使用的默认数据库是PostgreSQL，用于存储安装元数据，可以使用自己安装MySQL数据库作为Ambari元数据库。
注意：一定要用root用户操作如下步骤；先卸载MySQL再安装</p><p>1）安装包准备
（1）查看 MySQL 是否安装</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 桌面]# rpm -qa|grep mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql-libs-5.1.73-7.el6.x86_64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）如果安装了 MySQL，就先卸载</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 桌面]# rpm -e --nodeps mysql-libs-5.1.73-7.el6.x86_64</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）解压 mysql-libs.zip 文件到当前目录</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# unzip mysql-libs.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# ls</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql-libs.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql-libs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）进入到 mysql-libs 文件夹下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> [root@hadoop102 mysql-libs]# ll</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">总用量 76048</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r--. 1 root root 18509960 3月  26 2015 MySQL-client-5.6.24-1.el6.x86_64.rpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r--. 1 root root  3575135 12月  1 2013 mysql-connector-java-5.1.27.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r--. 1 root root 55782196 3月  26 2015 MySQL-server-5.6.24-1.el6.x86_64.rpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）安装 MySQL 服务器</p><p>（1）安装 MySQL 服务端</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 mysql-libs]# rpm -ivh MySQL-server-5.6.24-1.el6.x86_64.rpm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）查看产生的随机密码</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 mysql-libs]# cat /root/.mysql_secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">XrBwJEENp2yhVe4O</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）查看 MySQL 状态</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 mysql-libs]# service mysql status</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）启动 MySQL</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 mysql-libs]# service mysql start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3）安装 MySQL 客户端
（1）安装 MySQL 客户端</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 mysql-libs]# rpm -ivh MySQL-client-5.6.24-1.el6.x86_64.rpm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）链接 MySQL </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 mysql-libs]# mysql -uroot -pXrBwJEENp2yhVe4O</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）修改密码</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;SET PASSWORD=PASSWORD('000000');</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）退出 MySQL</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;exit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）MySQL 中 user 表中主机配置</p><p>配置只要是root用户+密码，在任何主机上都能登录 MySQL 数据库。</p><p>（1）进入 MySQL</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 mysql-libs]# mysql -uroot -p000000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（2）显示数据库</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;show databases;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（3）使用 MySQL 数据库</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;use mysql;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（4）展示 MySQL 数据库中的所有表</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;show tables;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（5）展示 user 表的结构</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;desc user;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（6）查询 user 表</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;select User, Host, Password from user;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（7）修改 user 表，把 Host 表内容修改为 %</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;update user set host='%' where host='localhost';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（8）删除 root 用户的其他 host</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">delete from user where Host='hadoop102';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">delete from user where Host='127.0.0.1';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">delete from user where Host='::1';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（9）刷新</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;flush privileges;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（10）退出</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;quit;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装-ambari">安装 Ambari<a class="hash-link" href="#安装-ambari" title="标题的直接链接">​</a></h2><p>1）安装 ambari-server</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> [root@hadoop102 hdp]# yum install ambari-server</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2） 拷贝 mysql 驱动
将 mysql-connector-java.jar 复制到 /usr/share/java 目录下并改名为 mysql-connector-java.jar</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 hdp]# mkdir /usr/share/java</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 hdp]# cp /opt/software/mysql-libs/mysql-connector-java-5.1.27/mysql-connector-java-5.1.27-bin.jar /usr/share/java/mysql-connector-java.jar</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将 mysql-connector-java.jar 复制到 /var/lib/ambari-server/resources 目录下并改名为 mysql-jdbc-driver.jar</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 hdp]# cp /usr/share/java/mysql-connector-java.jar /var/lib/ambari-server/resources/mysql-jdbc-driver.jar</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>修改 ambari.properties 文件</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 hdp]#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vim  /etc/ambari-server/conf/ambari.properties</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>添加</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">server.jdbc.driver.path=/usr/share/java/mysql-connector-java.jar</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="在-mysql中-创建数据库">在 MySQL中 创建数据库<a class="hash-link" href="#在-mysql中-创建数据库" title="标题的直接链接">​</a></h2><p>1）创建 ambari 库</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 hdp]# mysql -u root -p000000 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql &gt;create database ambari; </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）使用 Ambari 自带脚本创建表</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql &gt;use ambari; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3）赋予用户 root 权限：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; grant all privileges on *.* to 'root'@'%' identified by '000000'; </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）刷新</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; flush privileges;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置-ambari">配置 Ambari<a class="hash-link" href="#配置-ambari" title="标题的直接链接">​</a></h2><p>执行</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 hdp]# ambari-server setup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>下面是配置执行流程，按照提示操作
1） 提示是否自定义设置。输入：y</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Customize user account for ambari-server daemon [y/n] (n)? y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2）ambari-server 账号。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Enter user account for ambari-server daemon (root):</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果直接回车就是默认选择 root 用户
3）设置 JDK 。输入：3</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Checking JDK...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Do you want to change Oracle JDK [y/n] (n)? y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[3] Custom JDK</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==============================================================================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter choice (1): 3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果上面选择 3 自定义 JDK ,则需要设置 JAVA_HOME 。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">输入：/opt/module/jdk1.8.0_144</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WARNING: JCE Policy files are required for configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Path to JAVA_HOME: /opt/module/jdk1.8.0_144</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Validating JDK on Ambari Server...done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Completing setup...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4）数据库配置。选择：y</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Configuring database...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter advanced database configuration [y/n] (n)? y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5）选择数据库类型。输入：3</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Configuring database...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==============================================================================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Choose one of the following options:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[1] - PostgreSQL (Embedded)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[2] - Oracle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[3] - MySQL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[4] - PostgreSQL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[5] - Microsoft SQL Server (Tech Preview)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[6] - SQL Anywhere</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==============================================================================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter choice (3): 3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6）设置数据库的具体配置信息，根据实际情况输入，如果和括号内相同，则可以直接回车。如果想重命名，就输入。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Hostname (localhost):hadoop102</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Port (3306):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Database name (ambari):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Username (ambari):root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter Database Password (bigdata):000000（这里不显示）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Re-Enter password:000000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>7）将 Ambari 数据库脚本导入到数据库</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">WARNING: Before starting Ambari Server, you must run the following DDL against the database to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Proceed with configuring remote database connection properties [y/n] (y)?</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果使用自己定义的数据库，必须在启动 Ambari 服务之前导入 Ambari 的 sql 脚本。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="启动-ambari">启动 Ambari<a class="hash-link" href="#启动-ambari" title="标题的直接链接">​</a></h2><p>启动命令为：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ambari-server start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>停止命令为：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ambari-server stop</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>HDP 集群部署</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="集群搭建">集群搭建<a class="hash-link" href="#集群搭建" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="进入登录页面">进入登录页面<a class="hash-link" href="#进入登录页面" title="标题的直接链接">​</a></h3><p>浏览器输入 http://hadoop102:8080/
默认管理员账目密码：admin</p><p><img loading="lazy" src="https://img-blog.csdnimg.cn/img_convert/240b4f6c236314128f41bdefe1459a63.png" alt="image.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="点击-launch-install-wizard">点击 Launch Install Wizard<a class="hash-link" href="#点击-launch-install-wizard" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-T2Gjsyfm-1603158899563)(https://www.rookiegao.top/upload/2020/04/image-755fcfef2ae945aa87f6eb5051946bf3.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="设置集群名称">设置集群名称<a class="hash-link" href="#设置集群名称" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-W7azVECe-1603158899565)(https://www.rookiegao.top/upload/2020/04/image-7ab5ebc1fb864aec88b163cd5d59a10e.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="选择版本和存储库">选择版本和存储库<a class="hash-link" href="#选择版本和存储库" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-pUT8O4ZW-1603158899568)(https://www.rookiegao.top/upload/2020/04/image-1aeff24eef1648b987b6b170639c2cbd.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="填写本地库地址">填写本地库地址<a class="hash-link" href="#填写本地库地址" title="标题的直接链接">​</a></h3><p>在 redhat6 后面分别填写
http://hadoop102/hdp/HDP/centos6/
http://hadoop102/hdp/</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-X1ZdLTrG-1603158899569)(https://www.rookiegao.top/upload/2020/04/image-b59b078b8651406dbacfb2124f474b93.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="填写主机地址以及主节点的-idrsa-文件">填写主机地址以及主节点的 id.rsa 文件<a class="hash-link" href="#填写主机地址以及主节点的-idrsa-文件" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-pNsOUyCZ-1603158899571)(https://www.rookiegao.top/upload/2020/04/image-b8ec2e89e4d248839987d9ab65883286.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="等待安装">等待安装<a class="hash-link" href="#等待安装" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8HHJly8I-1603158899572)(https://www.rookiegao.top/upload/2020/04/image-4266c2e0dd9442b991e485636348d702.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="选择服务">选择服务<a class="hash-link" href="#选择服务" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-SPrAYQ4O-1603158899573)(https://www.rookiegao.top/upload/2020/04/image-d6cea6871a304aa5b5d4d5facf894e8b.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="选择每台机器的角色">选择每台机器的角色<a class="hash-link" href="#选择每台机器的角色" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-5yu1iE6v-1603158899574)(https://www.rookiegao.top/upload/2020/04/image-59468675b6634b5a8aa2183d1f04cdb5.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="设置从节点">设置从节点<a class="hash-link" href="#设置从节点" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-14ORKozf-1603158899574)(https://www.rookiegao.top/upload/2020/04/image-35e11c10abde44049645bbb96f46deba.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="输入两次-admin">输入两次 admin<a class="hash-link" href="#输入两次-admin" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-nPiUewb4-1603158899575)(https://www.rookiegao.top/upload/2020/04/image-eefe8bb08f6a4f479ba43aa6a43d6baf.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-1e640xEp-1603158899576)(https://www.rookiegao.top/upload/2020/04/image-6a5f1d33e4314507ba38ea21ac006da0.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="继续">继续<a class="hash-link" href="#继续" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-9F2GWUJX-1603158899577)(https://www.rookiegao.top/upload/2020/04/image-6113b07b522b4fb49cc5473cbedbef05.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="等待服务安装和启动">等待服务安装和启动<a class="hash-link" href="#等待服务安装和启动" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-FhjfK6eQ-1603158899578)(https://www.rookiegao.top/upload/2020/04/image-6f3f5fbd64fc4bc7b773bbe5519bc53e.png)]</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装-hive">安装 Hive<a class="hash-link" href="#安装-hive" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="在-pathtomysql-目录下放置-mysql-驱动并重命名为mysql-connector-javajar">在 /path/to/mysql/ 目录下放置 Mysql 驱动，并重命名为：mysql-connector-java.jar<a class="hash-link" href="#在-pathtomysql-目录下放置-mysql-驱动并重命名为mysql-connector-javajar" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# mkdir -p /path/to/mysql/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# cp /opt/software/mysql-libs/mysql-connector-java-5.1.27/mysql-connector-java-5.1.27-bin.jar  /path/to/mysql/mysql-connector-java.jar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="422-执行-ambari-server-setup">4.2.2 执行 ambari-server setup<a class="hash-link" href="#422-执行-ambari-server-setup" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@hadoop102 software]# ambari-server setup --jdbc-db=mysql --jdbc-driver=/path/to/mysql/mysql-connector-java.jar</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="点击添加服务">点击添加服务<a class="hash-link" href="#点击添加服务" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-J6JWAs8z-1603158899578)(https://www.rookiegao.top/upload/2020/04/image-cc3010276f944ff38841dbc51d18da49.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="选择-hive">选择 hive<a class="hash-link" href="#选择-hive" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-HM4TTIPL-1603158899579)(https://www.rookiegao.top/upload/2020/04/image-aa2cd722fcf044ea83c9ed00f3fe0235.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-lj8IWP8p-1603158899580)(https://www.rookiegao.top/upload/2020/04/image-1d824ca3c7b0408783a20ad45448797d.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="分配节点">分配节点<a class="hash-link" href="#分配节点" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-imHgz2oW-1603158899581)(https://www.rookiegao.top/upload/2020/04/image-59fae522da2d436dbccbe17ee1d02261.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="分配从属和客户端">分配从属和客户端<a class="hash-link" href="#分配从属和客户端" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4f7ohA3Q-1603158899583)(https://www.rookiegao.top/upload/2020/04/image-efcb5fa8560447a9a4dec92de8b547ac.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置-hive-数据库连接">配置 hive 数据库连接<a class="hash-link" href="#配置-hive-数据库连接" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-EgPhbXIH-1603158899584)(https://www.rookiegao.top/upload/2020/04/image-cee5c5dea12340599d86056bababcf16.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jHiZFz8h-1603158899585)(https://www.rookiegao.top/upload/2020/04/image-4a5992294a7c47a786497d34a27603dd.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="点击下一步">点击下一步<a class="hash-link" href="#点击下一步" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ERZKSZoJ-1603158899586)(https://www.rookiegao.top/upload/2020/04/image-48a26d04846747319a287f00611d0ff6.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="等待安装-1">等待安装<a class="hash-link" href="#等待安装-1" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-vqDLlKlu-1603158899587)(https://www.rookiegao.top/upload/2020/04/image-f43e454b6bfa4f9ab2afb99382260b59.png)]</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置-hdfs-ha">配置 HDFS-HA<a class="hash-link" href="#配置-hdfs-ha" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="添加服务">添加服务<a class="hash-link" href="#添加服务" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-nAEOXeZq-1603158899588)(https://www.rookiegao.top/upload/2020/04/image-8af79aecd6f2438789f443e2f15e4e3a.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="填写-nameservice-名称">填写 nameservice 名称<a class="hash-link" href="#填写-nameservice-名称" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-EwgVfUuJ-1603158899588)(https://www.rookiegao.top/upload/2020/04/image-89533cac0c964b67928a44cb56ef4357.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="角色分配">角色分配<a class="hash-link" href="#角色分配" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-1hRRKrx9-1603158899589)(https://www.rookiegao.top/upload/2020/04/image-793106bef20b4c00828d6528e6fe675c.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="直接下一步">直接下一步<a class="hash-link" href="#直接下一步" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ewxayLjg-1603158899591)(https://www.rookiegao.top/upload/2020/04/image-af02556f77fd406e85af0ff1a01cd590.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装提示执行命令">安装提示执行命令<a class="hash-link" href="#安装提示执行命令" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-kTlK63ac-1603158899592)(https://www.rookiegao.top/upload/2020/04/image-adc1a4a53de449d2bfdd02ba5a0323e8.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装组件">安装组件<a class="hash-link" href="#安装组件" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-pfiz5zRL-1603158899593)(https://www.rookiegao.top/upload/2020/04/image-179b5dba0e184d88b56c752514e863cf.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="根据页面提示操作">根据页面提示操作<a class="hash-link" href="#根据页面提示操作" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-19VAhEJH-1603158899594)(https://www.rookiegao.top/upload/2020/04/image-108bc37ba1f841a7b427ffb0b63d0e3d.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="等待启动组件">等待启动组件<a class="hash-link" href="#等待启动组件" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Ah7xsG0R-1603158899595)(https://www.rookiegao.top/upload/2020/04/image-f4c5e5dc1da9454a87a7c4f98ae6035e.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装页面提示初始化-namenode-ha">安装页面提示初始化 NameNode HA<a class="hash-link" href="#安装页面提示初始化-namenode-ha" title="标题的直接链接">​</a></h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gHUAFWHD-1603158899595)(https://www.rookiegao.top/upload/2020/04/image-9fe714719979426b9336e626ed9413d7.png)]</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="等待完成">等待完成<a class="hash-link" href="#等待完成" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://img-blog.csdnimg.cn/img_convert/7207b64440f28a0e4bf62f00ca949ea0.png" alt="image.png" class="img_ev3q"></p><p><strong>注：因之前域名到期，所以部分图片会展示失败！</strong></p>]]></content>
        <author>
            <name>青涩的芒果汁</name>
            <uri>https://blog.csdn.net/weixin_40898246/article/details/109175222?spm=1001.2014.3001.5501</uri>
        </author>
        <category label="管理平台" term="管理平台"/>
    </entry>
</feed>